{"version":3,"sources":["../node_modules/react/jsx-runtime.js","../node_modules/react/index.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/object-assign/index.js","../node_modules/react-dom/index.js","../node_modules/mic-recorder-to-mp3/dist/index.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js"],"names":["module","exports","require","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_typeof","Symbol","iterator","constructor","_possibleConstructorReturn","self","call","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","result","Super","NewTarget","this","_setPrototypeOf","p","_inherits","subClass","superClass","create","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","n","join","test3","split","letter","err","shouldUseNative","from","to","s","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","error","new_byte$1","count","Int8Array","new_short","Int16Array","new_int$1","Int32Array","new_float$1","Float32Array","new_double$1","Float64Array","new_float_n$1","args","sz","slice","A","new_int_n$1","new_short_n","new_array_n$1","Array","Arrays$1","a","fromIndex","toIndex","System$1","src","srcPos","dest","destPos","srcEnd","Util$1","ShortBlock$1","ordinal","SQRT2","FAST_LOG10","x","Math","log10","FAST_LOG10_X","y","short_block_allowed","short_block_coupled","short_block_dispensed","short_block_forced","Float$1","VbrMode$1","MAX_VALUE","vbr_off","vbr_mt","vbr_rh","vbr_abr","vbr_mtrh","vbr_default","common","System$6","System","Util$6","Util","Arrays$6","Arrays","new_float$6","new_float","NewMDCT","enwindow","NS","NL","win","tantab_l","Encoder_1","SHORT_TYPE","cx","ca","cs","order","window_subband","x1","x1Pos","u","v","xr","wp","x2","w","t","mdct_short","inout","inoutPos","l","tc0","tc1","tc2","ts0","ts1","ts2","mdct_long","out","outPos","_in","ct","st","tc3","tc4","ts5","ts6","ts7","ts8","ts3","ts4","tc5","tc6","tc7","tc8","mdct_sub48","gfc","w0","w1","wk","wkPos","ch","channels_out","gr","mode_gr","band","gi","l3_side","tt","mdct_enc","mdct_encPos","samp","sb_sample","sampPos","k","type","block_type","band0","band1","mixed_block_flag","amp_filter","fill","work","b","bu","bd","arraycopy","NewMDCT_1","System$7","new_float$7","new_float_n$7","new_float_n","III_psy_xmin","SBMAX_l","SBMAX_s","iii_psy_xmin","j","III_psy_xmin_1","III_psy_ratio","thm","en","III_psy_ratio_1","System$5","VbrMode$5","VbrMode","new_array_n$5","new_array_n","new_float$5","new_float_n$5","new_int$5","new_int","assert$5","assert","Encoder$2","FFTOFFSET","MPG_MD_MS_LR","bs","psy","vbr","qupvt","setModules","_bs","_psy","_qupvt","_vbr","newMDCT","adjust_ATH","gr2_max","max_pow","ATH","useAdjust","loudness_sq","max","aaSensitivityP","adjust","adjustLimit","adj_lim_new","updateStats","bitrate_index","mode_ext","bitrate_stereoMode_Hist","bt","bitrate_blockType_Hist","lame_encode_frame_init","gfp","inbuf","internal_flags","primebuff0","primebuff1","mf_size","BLKSIZE","framesize","lame_encode_mp3_frame","inbuf_l","inbuf_r","mp3buf","mp3bufPos","mp3buf_size","mp3count","masking_LR","masking","masking_MS","pe_use","tot_ener","ms_ener_ratio","pe","pe_MS","padding","slot_lag","frac_SpF","out_samplerate","psymodel","bufp","bufpPos","blocktype","VBR","L3psycho_anal_vbr","L3psycho_anal_ns","mode","MPEGMode","JOINT_STEREO","cod_info","NORM_TYPE","MPG_MD_LR_LR","force_ms","sum_pe_MS","sum_pe_LR","gi0","gi1","analysis","pinfo","ms_ratio","ers","energy","f","nsPsy","pefirbuf","fircoef","iteration_loop","format_bitstream","copy_buffer","bWriteVbrTag","addVbrFrame","pcmdata","set_frame_pinfo","ENCDELAY","POSTDELAY","MDCTDELAY","DECDELAY","SBLIMIT","CBANDS","SBPSY_l","SBPSY_s","PSFB21","PSFB12","HBLKSIZE","BLKSIZE_s","HBLKSIZE_s","START_TYPE","STOP_TYPE","MPG_MD_LR_I","MPG_MD_MS_I","Util$4","new_float$4","FFT","window","window_s","costab","fht","fz","fzPos","k4","fi","tri","fn","s1","c1","k1","k2","k3","kx","f1","f0","f3","f2","c2","s2","g0","g1","g2","g3","rv_tbl","fft_short","x_real","chn","buffer","bufPos","fft_long","jj","init_fft","cos","PI","FFT_1","VbrMode$3","Float$3","Float","ShortBlock$3","ShortBlock","Util$3","Arrays$3","new_float$3","new_float_n$3","new_int$3","assert$3","PsyModel","fft","LOG10","rpelev","rpelev2","rpelev_s","rpelev2_s","DELBARK","VO_SCALE","temporalmask_sustain_sec","NS_PREECHO_ATT0","NS_PREECHO_ATT1","NS_PREECHO_ATT2","NS_MSFIX","NSFIRLEN","LN_TO_LOG10","NON_LINEAR_SCALE_ENERGY","psycho_loudness_approx","loudness_power","eql_w","compute_ffts","fftenergy","fftenergy_s","wsamp_l","wsamp_lPos","wsamp_s","wsamp_sPos","gr_out","r","re","im","totalenergy","energy_save","athaa_loudapprox","loudness_sq_save","ma_max_i1","ma_max_i2","ma_max_m","I1LIMIT","I2LIMIT","MLIMIT","tab","init_mask_add_max_values","pow","table1","table2","table3","mask_add","m1","m2","kk","shortblock","ratio","cb_s","cb_l","table2_","vbrpsy_mask_add","calc_interchannel_masking","sb","sblock","msfix1","mld","mld_l","rmid","min","rside","mld_s","ns_msfix","msfix","athadjust","msfix2","athlower","ath","bm_l","thmLR","thmM","thmS","bm_s","convert_partition2scalefac_s","eb","thr","enn","thmm","bo_s_sb","bo_s","npart_s","b_lim","w_curr","PSY","bo_s_weight","w_next","convert_partition2scalefac_l","bo_l_sb","bo_l","npart_l","bo_l_weight","compute_masking_s","ebb","m","numlines_s","el","s3ind_s","ecb","s3_ss","nb_s1","blocktype_old","nb_s2","block_type_set","uselongblock","blocktype_d","short_blocks","NS_INTERP","regcoef_s","pecalc_s","mr","masking_lower","pe_s","regcoef_l","pecalc_l","pe_l","calc_energy","avg","numlines_l","rnumlines_l","calc_mask_index_l","mask_idx","last_tab_entry","vbrpsy_compute_fft_l","vbrpsy_compute_fft_s","vbrpsy_compute_loudness_approximation_l","masking_ratio","masking_MS_ratio","percep_entropy","percep_MS_entropy","numchn","pcfact","wsamp_L","wsamp_S","eb_l","eb_s","ns_hpfsmpl","mask_idx_l","mask_idx_s","ResvMax","ResvSize","firbuf","firbufPos","sum1","sum2","attackThreshold","en_subshort","en_short","attack_intensity","ns_uselongblock","ns_attacks","last_en_subshort","pf","pfPos","pfe","abs","ers_save","attackthre_s","attackthre","lastAttacks","idx","s3ind","eb2","s3_ll","nb_1","nb_2","STEREO","interChRatio","ATHlower","ppe","ppePos","fircoef_","vbrpsy_attack_detection","sub_short_factor","n_chn_out","n_chn_psy","factor","vbrpsy_skip_masking_s","vbrpsy_skip_masking_l","psyvbr_calc_mask_index_s","vbrpsy_compute_masking_s","float","int","dd","dd_n","avg_mask","last","minval_s","vbrpsy_compute_masking_l","ecb_limit","ecb_limit_2","ecb_limit_1","minval_l","vbrpsy_compute_block_type","vbrpsy_apply_block_type","vbrpsy_compute_MS_thresholds","cb_mld","ath_cb","ebM","ebS","thmL","thmR","mld_m","thmMS","s3_func_x","bark","hf_slope","tempy","exp","norm_s3_func_x","h","lim_a","lim_b","sum","s3_func","tempx","temp","sqrt","freq2bark","freq","atan","init_numline","numlines","bo","bm","bval","bval_width","bo_w","sfreq","blksize","scalepos","deltafreq","sbmax","b_frq","sample_freq_frac","partition","ni","j2","bark1","sfb","i1","i2","start","end","arg","floor","f_tmp","bark2","init_s3_values","npart","norm","use_old_s3","s3","numberOfNoneZero","s3_x_norm","stereo_demask","ATHformula_GB","ch01","mld_cb_l","mld_cb_s","new_thmm","psymodel_init","useOldS3","bvl_a","bvl_b","snr_l_a","snr_l_b","snr_s_a","snr_s_b","experimentalZ","ms_ener_ratio_old","scalefac_band","snr","level","ATHformula","log","decay","exp_nspsytune","frame_duration","ATHtype","freq_inc","eql_balance","ATHcurve","PsyModel_1","MPEGMode$1","_ordinal","DUAL_CHANNEL","MONO","NOT_SET","MPEGMode_1","LameGlobalFlags","class_id","num_samples","num_channels","in_samplerate","scale","scale_left","scale_right","decode_only","quality","free_format","findReplayGain","decode_on_the_fly","write_id3tag_automatic","brate","compression_ratio","copyright","original","extension","emphasis","error_protection","strict_ISO","disable_reservoir","quant_comp","quant_comp_short","experimentalY","preset","VBR_q_frac","VBR_q","VBR_mean_bitrate_kbps","VBR_min_bitrate_kbps","VBR_max_bitrate_kbps","VBR_hard_min","lowpassfreq","highpassfreq","lowpasswidth","highpasswidth","maskingadjust","maskingadjust_short","ATHonly","ATHshort","noATH","athaa_type","athaa_sensitivity","useTemporal","tune","tune_value_a","version","encoder_delay","encoder_padding","frameNum","lame_allocated_gfp","LameGlobalFlags_1","L3Side$1","SFBMAX","L3Side_1","new_float$10","new_int$10","GrInfo","l3_enc","scalefac","xrpow_max","part2_3_length","big_values","count1","global_gain","scalefac_compress","table_select","subblock_gain","region0_count","region1_count","preflag","scalefac_scale","count1table_select","part2_length","sfb_lmax","sfb_smin","psy_lmax","sfbmax","psymax","sfbdivide","width","count1bits","sfb_partition_table","slen","max_nonzero_coeff","clone_int","array","clone_float","other","GrInfo_1","new_int$9","IIISideInfo","main_data_begin","private_bits","resvDrain_pre","resvDrain_post","scfsi","IIISideInfo_1","System$11","new_int$11","ScaleFac","arrL","arrS","arr21","arr12","psfb21","psfb12","ScaleFac_1","new_float$12","new_float_n$12","new_int$12","NsPsy","longfact","shortfact","NsPsy_1","VBRSeekInfo","seen","want","pos","size","bag","nVbrNumFrames","nBytesWritten","TotalFrameSize","VBRSeekInfo_1","new_byte$8","new_byte","new_double$8","new_double","new_float$8","new_float_n$8","new_int$8","new_int_n$8","new_int_n","LameInternalFlags$1","MAX_HEADER_LEN","Header","write_timing","ptr","buf","Class_ID","iteration_init_init","fill_buffer_resample_init","mfbuf","MFSIZE","channels_in","resample_ratio","mf_samples_to_encode","VBR_min_bitrate","VBR_max_bitrate","samplerate_index","lowpass1","lowpass2","highpass1","highpass2","noise_shaping","noise_shaping_amp","substep_shaping","noise_shaping_stop","use_best_huffman","full_outer_loop","tag_spec","nMusicCRC","OldValue","CurrentStep","bv_scf","pseudohalf","sfb21_extra","inbuf_old","blackfilt","BPC","itime","sideinfo_len","header","MAX_HEADER_BUF","h_ptr","w_ptr","ancillary_flag","numlines_s_num1","numlines_l_num1","ms_ratio_s_old","ms_ratio_l_old","VBR_seek_table","nogap_total","nogap_current","findPeakSample","PeakSample","RadioGain","AudiophileGain","rgdata","noclipGainChange","noclipScale","hip","in_buffer_nsamples","in_buffer_0","in_buffer_1","MAX_BITS_PER_CHANNEL","MAX_BITS_PER_GRANULE","LameInternalFlags_1","new_float$13","ATH_1","System$15","Arrays$15","GainAnalysis$1","PINK_REF","RMS_PERCENTILE","YULE_ORDER","RMS_WINDOW_TIME_NUMERATOR","MAX_SAMP_FREQ","RMS_WINDOW_TIME_DENOMINATOR","ABYule","MAX_SAMPLES_PER_WINDOW","ABButter","filterYule","input","inputPos","output","outputPos","nSamples","kernel","filterButter","ResetSampleFrequency","rgData","samplefreq","MAX_ORDER","linprebuf","lstepbuf","loutbuf","rinprebuf","rstepbuf","routbuf","reqindex","INIT_GAIN_ANALYSIS_ERROR","sampleWindow","lsum","rsum","totsamp","ill","INIT_GAIN_ANALYSIS_OK","fsqr","d","analyzeResult","len","elems","GAIN_NOT_ENOUGH_SAMPLES","upper","ceil","STEPS_per_dB","InitGainAnalysis","linpre","rinpre","lstep","rstep","lout","rout","B","AnalyzeSamples","left_samples","left_samplesPos","right_samples","right_samplesPos","curleft","curleftBase","curright","currightBase","batchsamples","cursamples","cursamplepos","GAIN_ANALYSIS_OK","GAIN_ANALYSIS_ERROR","ival","GetTitleGain","retval","MAX_dB","GainAnalysis_1","new_float$14","new_int$14","ReplayGain","freqindex","first","ReplayGain_1","MeanBits$1","meanBits","bits","MeanBits_1","new_float$16","new_int$16","assert$16","CBRNewIterationLoop","_quantize","quantize","max_bits","l3_xmin","xrpow","targ_bits","mean_bits","mb","rv","ResvFrameBegin","on_pe","ms_convert","reduce_side","masking_lower_db","mask_adjust","mask_adjust_short","init_outer_loop","init_xrpow","calc_xmin","outer_loop","iteration_finish_one","ResvFrameEnd","CBRNewIterationLoop_1","HuffCodeTab","hl","xlen","linmax","table","hlen","Tables$1","ht","t1HB","t1l","t2HB","t2l","t3HB","t3l","t5HB","t5l","t6HB","t6l","t7HB","t7l","t8HB","t8l","t9HB","t9l","t10HB","t10l","t11HB","t11l","t12HB","t12l","t13HB","t13l","t16_5l","t15HB","t15l","t16HB","t16l","t24HB","t24l","t32HB","t32l","t33HB","t33l","largetbl","table23","table56","bitrate_table","samplerate_table","scfsi_band","Tables_1","VbrMode$19","Float$19","Util$19","new_float$19","new_int$19","assert$19","QuantizePVT$1","tak","POW20","Q_MAX2","Q_MAX","pow20","_tk","_rv","IPOW20","ipow20","DBL_EPSILON","PRECALC_SIZE","IXMAX_VAL","NSATHSCALE","LARGE_BITS","nr_of_sfb_block","pretab","sfBandIndex","pow43","adj43","ATHmdct","compute_ath","ATH_l","ATH_psfb21","ATH_s","ATH_psfb12","samp_freq","ATH_f","StartLine","iteration_init","bass","alto","treble","sfb21","huffman_init","cbr","tbits","add_bits","extra_bits","ResvMaxBits","fac","move_bits","athAdjust","athFloor","pxmin","gsfb","pxminPos","ath_over","enable_athaa_fix","rh1","xmin","rh2","en0","xa","xb","max_nonzero","BitStream","EQ","tmpATH","calc_noise_core","startline","step","noise","ix","ix01","calc_noise","distort","res","prev_noise","distortPos","l3_xminPos","over","over_noise_db","tot_noise_db","max_noise","scalefacPos","over_SSD","tmp","noise_log","usefullsize","sl","over_count","tot_noise","over_noise","set_pinfo","sfb2","en1","ifqstep","L3Side","xfsf","CalcNoiseResult","bw","LAMEsfb","en_s","xfsf_s","thr_s","LAMEsfb_s","LAMEqss","LAMEmainbits","LAMEsfbits","QuantizePVT_1","System$18","Arrays$18","new_int$18","assert$18","Takehiro$1","Bits","subdv_table","quantize_lines_xrpow_01","istep","xrPos","ixPos","compareval0","quantize_lines_xrpow","remaining","x0","x3","rx0","rx1","rx2","rx3","quantize_xrpow","xp","pi","codInfo","prevNoise","prev_data_use","accumulate","accumulate01","xpPos","iData","iDataPos","acc_iData","acc_iDataPos","acc_xp","acc_xpPos","sfb_count1","ix_max","endPos","max1","max2","count_bit_ESC","t1","t2","linbits","count_bit_noESC","hlen1","count_bit_noESC_from2","count_bit_noESC_from3","sum3","hlen2","hlen3","huf_tbl_noESC","choose_table","choice2","choice","recalc_divide_init","r01_bits","r01_div","r0_tbl","r1_tbl","bigv","r0","a1","r0bits","bi","r0t","r1","a2","r1t","recalc_divide_sub","cod_info2","r2","r2t","noquant_count_bits","best_huffman_divide","count_bits","gain","roundfac","slen1_n","slen2_n","slen1_tab","slen2_tab","scfsi_calc","c","all_scalefactors_not_negative","best_scalefac_store","recalc","scale_bitcount","scale_bitcount_lsf","scale_short","scale_mixed","scale_long","max_slen1","max_slen2","max_range_sfac_tab","table_number","row_in_table","nr_sfb","max_sfac","partition_table","slen1","slen2","slen3","slen4","log2tab","printf","bv_index","scfb_anz","Takehiro_1","System$17","Arrays$17","new_byte$17","new_float_n$17","new_int$17","assert$17","BitStream$1","CRC16_POLYNOMIAL","MAX_LENGTH","ga","mpg","ver","_ga","_mpg","_ver","totbit","bufByteIdx","bufBitIdx","putheader_bits","putbits2","Lame","LAME_MAXMP3BUFFER","putbits_noheaders","drain_into_ancillary","remainingBits","getLameShortVersion","charAt","writeheader","CRC_update","crc","encodeSideInfo2","bitsPerFrame","CRC_writeheader","old","println","huffman_coder_count1","huffbits","Huffmancode","tableindex","cbits","xbits","ext","linbits_x1","linbits_x2","ShortHuffmancodebits","region1Start","LongHuffmancodebits","bigvalues","region2Start","writeMainData","data_bits","tot_bits","sfb_partition","scale_bits","sfbs","TotalBytes","total","compute_flushbits","total_bytes_output","flushbits","remaining_headers","last_ptr","first_ptr","getframebits","bit_rate","byte","flush_bitstream","NEQ","GainAnalysis","add_dummy_byte","bufferPos","mp3data","minimum","updateMusicCRC","pcm_buf","mp3_in","samples_out","hip_decode1_unclipped","init_bit_stream_w","BitStream_1","System$2","VbrMode$2","ShortBlock$2","new_float$2","new_int_n$2","new_short_n$1","assert$2","Lame$1","LAME_MAXALBUMART","V9","V8","V7","V6","V5","V4","V3","V2","V1","V0","R3MIX","STANDARD","EXTREME","INSANE","STANDARD_FAST","EXTREME_FAST","MEDIUM","MEDIUM_FAST","qu","id3","mpglib","LowPassHighPass","lowerlimit","BandPass","bitrate","lPass","lowpass","enc","_p","_qu","_id3","_mpglib","LAME_ID","lame_init_old","filter_coef","optimum_samplefreq","input_samplefreq","suggested_samplefreq","SmpFrqIndex","sample_freq","gpf","FindNearestBitrate","bRate","samplerate","BitrateIndex","optimum_bandwidth","lh","freq_map","table_index","nearestBitrateFullIndex","lame_init_params_ppflt","lowpass_band","highpass_band","minband","maxband","fc1","fc2","lame_init_qval","lame_init_bitstream","id3tag_write_v2","InitVbrTag","update_inbuffer_size","nsamples","calcNeeded","mf_needed","lame_encode_buffer_sample","buffer_l","buffer_r","ret","mp3out","mp3size","in_buffer","in_bufferPos","in_buffer_ptr","n_in","n_out","inOut","InOut","fill_buffer","buf_size","lame_encode_frame","NumUsed","num_used","gcd","blackman","fcn","wcn","bkwn","sin","fill_buffer_resample","outbuf","outbufPos","desired_len","bpc","intratio","filter_l","BLACKSIZE","offset","time0","joff","xvalue","n_shift","io","numUsed","lame_init","full_bitrate_table","lower_range","lower_range_kbps","upper_range","upper_range_kbps","lame_init_params","map2MP3Frequency","linear_int","hip_decode_exit","hip_decode_init","cmp","apply_preset","LAME_DEFAULT_QUALITY","VBRNewIterationLoop","VBROldIterationLoop","vbrmode","ABRIterationLoop","NSATTACKTHRE","NSATTACKTHRE_S","lame_encode_flush","mp3buffer","mp3bufferPos","mp3buffer_size","mp3buffer_size_remaining","end_padding","frames_left","imp3","samples_to_encode","bunch","frame_num","lame_encode_buffer","id3tag_write_v1","Lame_1","VbrMode$20","Presets$1","VBRPresets","qual","comp","compS","shThreshold","shThresholdS","adj","adjShort","lower","curve","sens","inter","joint","mod","fix","vbr_q","quant_comp_s","expY","st_lrm","st_s","masking_adj","masking_adj_short","ath_lower","ath_curve","ath_sensitivity","interch","safejoint","sfb21mod","ABRPresets","kbps","sc","mask","interCh","sfScale","nsmsfix","nsbass","sfscale","lame","_lame","vbr_old_switch_map","vbr_psy_switch_map","apply_vbr_preset","enforce","vbr_preset","q","set","lame_set_VBR_q","abr_switch_map","apply_abr_preset","actual_bitrate","Presets_1","VBRQuantize","VBRQuantize_1","CalcNoiseResult$1","CalcNoiseResult_1","new_float$22","new_int$22","CalcNoiseData","CalcNoiseData_1","System$21","VbrMode$21","Util$21","Arrays$21","new_float$21","assert$21","Quantize$1","tk","init_xrpow_core","psfb21_analogsilence","stop","ath21","block","ath12","BinSearchDirection","bin_search_StepSize","desired_rate","nBits","flagGoneOver","Direction","BINSEARCH_NONE","BINSEARCH_DOWN","BINSEARCH_UP","loop_break","penalties","get_klemm_noise","klemm_noise","quant_compare","best","calc","better","amp_scalefac_bands","bRefine","ifqstep34","trigger","inc_scalefac_scale","inc_subblock_gain","amp","balance_noise","status","ixwork","trancate_smallspectrums","allowedNoise","trancateThreshold","nsame","sort","cod_info_w","save_xrpow","best_noise_info","best_part2_3_length","bEndOfSearch","best_ggain_pass1","age","search_limit","noise_info","maxggain","huff_bits","ResvAdjust","VBR_encode_granule","min_bits","dbits","bst_cod_info","bst_xrpow","Max_bits","real_bits","this_bits","found","LameInternalFlags","get_framebits","frameBits","MeanBits","VBR_old_prepare","bands","analog_silence","mxb","bitpressure_strategy","VBR_new_prepare","maximum_framebits","calc_target_bits","analog_silence_bits","max_frame_bits","res_factor","totbits","Quantize_1","assert$23","Reservoir$1","maxmp3buf","frameLength","resvLimit","fullFrameBits","resvsize","over_bits","stuffingBits","mdb_bytes","Reservoir_1","Version","LAME_URL","LAME_MAJOR_VERSION","LAME_MINOR_VERSION","LAME_PATCH_VERSION","PSY_MAJOR_VERSION","PSY_MINOR_VERSION","getLameVersion","getLameVeryShortVersion","getPsyVersion","getLameUrl","getLameOsBitness","Version_1","System$22","VbrMode$22","ShortBlock$22","Arrays$22","new_byte$22","assert$24","VBRTag","_v","FRAMES_FLAG","BYTES_FLAG","TOC_FLAG","VBR_SCALE_FLAG","NUMTOCENTRIES","MAXFRAMESIZE","LAMEHEADERSIZE","XING_BITRATE1","XING_BITRATE2","XING_BITRATE25","ISO_8859_1","VBRTag0","VBRTag1","crc16Lookup","addVbr","xingSeekTable","indx","seek_point","extractInteger","createInteger","createShort","isVbrTag","equals","shiftInBitsValue","setLameTagFrameHeader","bbyte","abyte","crcUpdateLookup","putLameVBR","musicLength","streamBuffer","streamBufferPos","revMethod","abrBitrate","bytesWritten","encDelay","encPadding","revision","vbrTypeTranslator","peakSignalAmplitude","radioReplayGain","audiophileReplayGain","noiseShaping","stereoMode","nonOptimal","sourceFreq","misc","musicCRC","expNPsyTune","safeJoint","noGapMore","noGapPrevious","noGapCount","noGapCurr","athType","flags","skipId3v2","fpStream","seek","id3v2Header","readFully","startsWith","Tables","getVbrTag","pTagData","VBRTagData","hId","hSrIndex","hMode","hBitrate","samprate","head_flags","frames","bytes","toc","vbrScale","headersize","kbps_header","totalFrameSize","headerSize","getLameTagFrame","streamIndex","streamSize","putVbrTag","stream","id3v2TagSize","write","VBRTag_1","GetAudio","parse2","mpg2","Parse","ver2","id32","pre2","MPGLib","ID3Tag","_bits","Mp3Encoder","channels","gaud","Presets","QuantizePVT","Quantize","Reservoir","Takehiro","parse","retcode","maxSamples","encodeBuffer","left","right","_sz","subarray","flush","WavHeader","dataOffset","dataLen","sampleRate","fourccToInt","fourcc","charCodeAt","RIFF","WAVE","fmt_","data","readHeader","dataView","getUint32","fmtLen","getUint16","Mp3Encoder_1","classCallCheck","createClass","Encoder","config","bitRate","mp3Encoder","samplesMono","clearBuffer","dataBuffer","arrayBuffer","floatTo16BitPCM","convertBuffer","appendToBuffer","MicRecorder","startRecordingAt","deviceId","activeStream","context","microphone","processor","startTime","_this","timerToStart","setTimeout","createMediaStreamSource","createScriptProcessor","onaudioprocess","event","lameEncoder","encode","inputBuffer","getChannelData","connect","destination","disconnect","state","close","getAudioTracks","track","_this2","AudioContext","webkitAudioContext","audio","exact","Promise","resolve","reject","navigator","mediaDevices","getUserMedia","then","addMicrophoneListener","catch","_this3","finalBuffer","finish","Error","Blob","factory","_arrayLikeToArray","arr","arr2","_slicedToArray","isArray","_arr","_n","_d","_e","_s","_i","next","done","minLen","name","test","Fragment","StrictMode","Profiler","Suspense","for","z","encodeURIComponent","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","C","refs","updater","D","E","isReactComponent","setState","forceUpdate","F","isPureReactComponent","G","current","H","I","ref","__self","__source","J","g","children","defaultProps","$$typeof","_owner","L","M","N","replace","escape","O","K","P","Q","_status","_result","default","R","S","T","ReactCurrentDispatcher","ReactCurrentBatchConfig","transition","ReactCurrentOwner","IsSomeRendererActing","Children","toArray","only","Component","PureComponent","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","compare","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","aa","ba","Set","da","ea","add","fa","document","ha","ia","ja","ka","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","toLowerCase","oa","pa","toUpperCase","qa","ma","isNaN","na","la","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ra","sa","ta","ua","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ma","Ka","La","Na","stack","trim","match","Oa","Pa","prepareStackTrace","displayName","Qa","tag","_render","Ra","Sa","Ta","nodeName","Va","_valueTracker","get","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","$a","ab","bb","cb","ownerDocument","db","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","nb","ob","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","pb","lastChild","nodeType","nodeValue","qb","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","rb","tb","style","indexOf","setProperty","substring","ub","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","param","wbr","vb","wb","is","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Ob","Pb","Qb","addEventListener","removeEventListener","Rb","onError","Sb","Tb","Ub","Vb","Wb","Xb","Zb","alternate","return","$b","memoizedState","dehydrated","ac","cc","child","sibling","bc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","nc","Map","oc","pc","qc","rc","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","delete","pointerId","tc","vc","wc","lanePriority","unstable_runWithPriority","priority","hydrate","containerInfo","xc","yc","shift","zc","Ac","Bc","unstable_scheduleCallback","unstable_NormalPriority","Cc","Dc","Ec","animationend","animationiteration","animationstart","transitionend","Fc","Gc","Hc","animation","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","unstable_now","Rc","Uc","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","Vc","entangledLanes","entanglements","Wc","Xc","Yc","Zc","$c","eventTimes","clz32","cd","LN2","unstable_UserBlockingPriority","ed","fd","gd","hd","id","uc","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","code","location","repeat","locale","which","Rd","Td","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","listeners","qe","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","Le","node","nextSibling","Me","contains","compareDocumentPosition","Ne","HTMLIFrameElement","contentWindow","href","Oe","contentEditable","Pe","Qe","Re","Se","Te","Ue","selectionStart","selectionEnd","anchorNode","defaultView","getSelection","anchorOffset","focusNode","focusOffset","Ve","We","Xe","Ye","concat","Ze","Yb","listener","$e","has","af","bf","random","cf","df","capture","passive","Nb","ef","ff","parentWindow","gf","hf","je","char","ke","unshift","jf","kf","lf","mf","autoFocus","nf","__html","of","clearTimeout","qf","rf","sf","previousSibling","tf","vf","wf","xf","yf","zf","Af","Bf","Cf","Df","Ef","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ff","childContextTypes","Gf","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Kf","Lf","Mf","Nf","Of","Pf","unstable_cancelCallback","Qf","unstable_shouldYield","Rf","unstable_requestPaint","Sf","Tf","unstable_getCurrentPriorityLevel","Uf","unstable_ImmediatePriority","Vf","Wf","Xf","unstable_LowPriority","Yf","unstable_IdlePriority","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","childLanes","tg","dependencies","firstContext","lanes","ug","vg","observedBits","responders","wg","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","yg","zg","eventTime","lane","payload","callback","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Kg","_reactInternals","Hg","Ig","Jg","Lg","shouldComponentUpdate","Mg","contextType","Ng","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Og","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Pg","Qg","_stringRef","Rg","Sg","lastEffect","nextEffect","firstEffect","index","Tg","Ug","elementType","Vg","implementation","Wg","Xg","Yg","Zg","$g","ah","bh","dh","eh","documentElement","tagName","fh","gh","hh","ih","memoizedProps","revealOrder","jh","kh","mh","nh","oh","pendingProps","ph","qh","rh","sh","th","uh","_workInProgressVersionPrimary","vh","wh","xh","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","baseQueue","queue","Ih","Jh","Kh","lastRenderedReducer","action","eagerReducer","eagerState","lastRenderedState","dispatch","Lh","Mh","_getVersion","_source","mutableReadLanes","Nh","U","getSnapshot","subscribe","setSnapshot","Oh","Ph","Qh","Rh","destroy","deps","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","ci","di","readContext","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","uf","ei","hi","ii","ji","ki","li","mi","baseLanes","oi","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","qi","getDerivedStateFromError","ri","pendingContext","Bi","Di","Ei","si","retryLane","ti","fallback","unstable_avoidThisFallback","ui","unstable_expectedLoadTime","vi","wi","xi","yi","zi","isBackwards","rendering","renderingStartTime","tail","tailMode","Ai","Fi","Gi","wasMultiple","multiple","onClick","onclick","createElementNS","createTextNode","V","Hi","Ii","W","Ji","Ki","Li","Mi","message","Ni","Oi","WeakMap","Pi","element","Qi","Ri","Si","componentDidCatch","Ti","componentStack","Ui","WeakSet","Vi","Wi","Xi","__reactInternalSnapshotBeforeUpdate","Yi","Zi","$i","focus","aj","display","bj","onCommitFiberUnmount","componentWillUnmount","cj","dj","ej","fj","gj","hj","insertBefore","_reactRootContainer","ij","kj","lj","mj","nj","oj","pj","X","Y","qj","rj","sj","tj","uj","vj","Infinity","wj","ck","Z","xj","yj","zj","Aj","Bj","Cj","Dj","Ej","Fj","Gj","Hj","Ij","Jj","Sc","Kj","Lj","Mj","callbackNode","expirationTimes","callbackPriority","Tc","Nj","Oj","Pj","Qj","Rj","Sj","Tj","finishedWork","finishedLanes","Uj","timeoutHandle","Wj","Xj","pingCache","Yj","Zj","va","ak","bk","dk","rangeCount","focusedElem","selectionRange","ek","extend","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","top","scrollTop","onCommitFiberRoot","fk","gk","ik","pendingChildren","jk","mutableSourceEagerHydrationData","lk","mk","nk","ok","qk","hydrationOptions","mutableSources","_internalRoot","rk","hasAttribute","sk","uk","hk","unstable_observedBits","unmount","querySelectorAll","JSON","stringify","form","Vj","vk","Events","findFiberByHostInstance","bundleType","rendererPackageName","xk","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","yk","isDisabled","supportsFiber","inject","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","performance","MessageChannel","unstable_forceFrameRate","cancelAnimationFrame","requestAnimationFrame","port2","port1","onmessage","postMessage","pop","sortIndex","expirationTime","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","delay","unstable_wrapCallback","jsx","jsxs"],"mappings":"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A,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBAEA,mBACA,mBACA,oBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBAAuB,mBAEvB,kBACA,iBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,oBACA,oBACA,oBACA,iBACA,mBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,kBACA,mBACA,kBACA,mBACA,oBACA,iBACA,kBACA,mBACA,oBACA,oBACA,mBACA,kBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,kBACA,iBAAuB,mBAEvB,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBAAuB,mBAEvB,iBACA,kBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,oBACA,oBACA,oBACA,kBACA,mBAAuB,kBAEvB,WAAgBP,EAAOvB,MAAQ,GAAM,QACrC,WAAgBuB,EAAOvB,MAAQ,GAAM,QACrC,WAAeuB,EAAOvB,MAAQ,GAAM,QACpC,WAAeuB,EAAOvB,MAAQ,GAAM,QACpC,UAAcuB,EAAOvB,MAAQ,GAAM,QACnC,UAAcuB,EAAOvB,MAAQ,GAAM,QACnC,UAAcuB,EAAOvB,MAAQ,GAAM,QACnC,SAAauB,EAAOvB,MAAQ,GAAM,QAElC,mBAA2B,mBAC3B,kBAAyB,mBACzB,mBAA0B,mBAC1B,mBAGE+B,EAAK,GACLC,EAAK,GAELC,EAAM,CACN,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBAEF,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBAED,EACA,EACA,EACA,EACA,EACA,GACC,sBACA,sBACA,sBAEF,CACC,kBACA,iBACA,kBAEA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBAEA,iBACA,kBAC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GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,OAAkB,CACd,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACzD,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI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","file":"static/js/2.c91357fe.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.MicRecorder = factory());\n}(this, (function () {\n\nfunction new_byte$1(count) {\n    return new Int8Array(count);\n}\n\nfunction new_short(count) {\n    return new Int16Array(count);\n}\n\nfunction new_int$1(count) {\n    return new Int32Array(count);\n}\n\nfunction new_float$1(count) {\n    return new Float32Array(count);\n}\n\nfunction new_double$1(count) {\n    return new Float64Array(count);\n}\n\nfunction new_float_n$1(args) {\n    if (args.length == 1) {\n        return new_float$1(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_float_n$1(args));\n    }\n    return A;\n}\nfunction new_int_n$1(args) {\n    if (args.length == 1) {\n        return new_int$1(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_int_n$1(args));\n    }\n    return A;\n}\n\nfunction new_short_n(args) {\n    if (args.length == 1) {\n        return new_short(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_short_n(args));\n    }\n    return A;\n}\n\nfunction new_array_n$1(args) {\n    if (args.length == 1) {\n        return new Array(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_array_n$1(args));\n    }\n    return A;\n}\n\n\nvar Arrays$1 = {};\n\nArrays$1.fill = function (a, fromIndex, toIndex, val) {\n    if (arguments.length == 2) {\n        for (var i = 0; i < a.length; i++) {\n            a[i] = arguments[1];\n        }\n    } else {\n        for (var i = fromIndex; i < toIndex; i++) {\n            a[i] = val;\n        }\n    }\n};\n\nvar System$1 = {};\n\nSystem$1.arraycopy = function (src, srcPos, dest, destPos, length) {\n    var srcEnd = srcPos + length;\n    while (srcPos < srcEnd)\n        dest[destPos++] = src[srcPos++];\n};\n\n\nvar Util$1 = {};\nUtil$1.SQRT2 = 1.41421356237309504880;\nUtil$1.FAST_LOG10 = function (x) {\n    return Math.log10(x);\n};\n\nUtil$1.FAST_LOG10_X = function (x, y) {\n    return Math.log10(x) * y;\n};\n\nfunction ShortBlock$1(ordinal) {\n    this.ordinal = ordinal;\n}\n/**\n * LAME may use them, even different block types for L/R.\n */\nShortBlock$1.short_block_allowed = new ShortBlock$1(0);\n/**\n * LAME may use them, but always same block types in L/R.\n */\nShortBlock$1.short_block_coupled = new ShortBlock$1(1);\n/**\n * LAME will not use short blocks, long blocks only.\n */\nShortBlock$1.short_block_dispensed = new ShortBlock$1(2);\n/**\n * LAME will not use long blocks, short blocks only.\n */\nShortBlock$1.short_block_forced = new ShortBlock$1(3);\n\nvar Float$1 = {};\nFloat$1.MAX_VALUE = 3.4028235e+38;\n\nfunction VbrMode$1(ordinal) {\n    this.ordinal = ordinal;\n}\nVbrMode$1.vbr_off = new VbrMode$1(0);\nVbrMode$1.vbr_mt = new VbrMode$1(1);\nVbrMode$1.vbr_rh = new VbrMode$1(2);\nVbrMode$1.vbr_abr = new VbrMode$1(3);\nVbrMode$1.vbr_mtrh = new VbrMode$1(4);\nVbrMode$1.vbr_default = VbrMode$1.vbr_mtrh;\n\nvar assert$1 = function (x) {\n    //console.assert(x);\n};\n\nvar common = {\n    \"System\": System$1,\n    \"VbrMode\": VbrMode$1,\n    \"Float\": Float$1,\n    \"ShortBlock\": ShortBlock$1,\n    \"Util\": Util$1,\n    \"Arrays\": Arrays$1,\n    \"new_array_n\": new_array_n$1,\n    \"new_byte\": new_byte$1,\n    \"new_double\": new_double$1,\n    \"new_float\": new_float$1,\n    \"new_float_n\": new_float_n$1,\n    \"new_int\": new_int$1,\n    \"new_int_n\": new_int_n$1,\n    \"new_short\": new_short,\n    \"new_short_n\": new_short_n,\n    \"assert\": assert$1\n};\n\n/*\n *      MP3 window subband -> subband filtering -> mdct routine\n *\n *      Copyright (c) 1999-2000 Takehiro Tominaga\n *\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n/*\n *         Special Thanks to Patrick De Smet for your advices.\n */\n\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$6 = common.System;\nvar Util$6 = common.Util;\nvar Arrays$6 = common.Arrays;\nvar new_float$6 = common.new_float;\nfunction NewMDCT() {\n\n\tvar enwindow = [\n\t\t\t-4.77e-07 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.03951e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.53674e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.841473e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.5758972e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.401756e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.83715e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.740951125354959 / 2.384e-06, /* 15 */\n\t\t\t1.2398e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.91212e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.283096e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.6994476e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.8756866e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.630711e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.47478e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.4782e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.063471690191471e-01, 1.960342806591213e-01,\n\n\t\t\t-4.77e-07 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.05858e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.30786e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.521515e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.5694122e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.643036e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.91821e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.6321e-05 * 0.773010453362737 / 2.384e-06, /* 14 */\n\t\t\t1.1444e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.65462e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.110004e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.6112804e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.9634247e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.803326e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.77042e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.6689e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t8.206787908286602e-01, 3.901806440322567e-01,\n\n\t\t\t-4.77e-07 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.07288e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.02653e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t2.174854e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.5586357e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.858566e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.95159e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.3460e-05 * 0.803207531480645 / 2.384e-06, /* 13 */\n\t\t\t1.0014e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.40190e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.937389e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.5233517e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.0506859e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.974033e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t-3.07560e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t-1.8120e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t7.416505462720353e-01, 5.805693545089249e-01,\n\n\t\t\t-4.77e-07 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t8.68797e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.800537e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t3.5435200e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t4.049301e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.94205e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.0599e-05 * 0.831469612302545 / 2.384e-06, /* 12 */\n\t\t\t9.060e-06 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.16348e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.766682e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.4358521e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-2.1372318e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.14188e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.39031e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t-1.9550e-05 * 0.831469612302545 / 2.384e-06,\n\t\t\t6.681786379192989e-01, 7.653668647301797e-01,\n\n\t\t\t-4.77e-07 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.29220e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.399517e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t3.5242081e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t4.215240e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.89437e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.7261e-05 * 0.857728610000272 / 2.384e-06, /* 11 */\n\t\t\t8.106e-06 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.3937e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.597881e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.3489246e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.2228718e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.306866e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.71456e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.1458e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t5.993769336819237e-01, 9.427934736519954e-01,\n\n\t\t\t-4.77e-07 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.8392e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.71317e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t3.5007000e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t4.357815e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.80854e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t8.3923e-05 * 0.881921264348355 / 2.384e-06, /* 10 */\n\t\t\t7.629e-06 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.2956e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.432419e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.2627602e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3074150e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-3.467083e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t-4.04358e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3365e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t5.345111359507916e-01, 1.111140466039205e+00,\n\n\t\t\t-9.54e-07 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t7.31945e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.15938e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t3.4730434e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.477024e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t9.68933e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t8.0585e-05 * 0.903989293123443 / 2.384e-06, /* 9 */\n\t\t\t6.676e-06 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.269817e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.1775017e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.3907185e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-3.622532e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t-4.38213e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.5272e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.729647758913199e-01, 1.268786568327291e+00,\n\n\t\t\t-9.54e-07 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.06812e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.74248e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.3379e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4412861e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.573822e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t9.54151e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t7.6771e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.199e-06 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4332e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.111031e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.0933399e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.4725437e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-3.771782e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-4.72546e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.7657e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.1421356237309504879e-01, /* tan(PI/8) */\n\t\t\t1.414213562373095e+00,\n\n\t\t\t-9.54e-07 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.05381e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t6.10352e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-4.75883e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.4055710e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t4.649162e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.35555e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t7.3433e-05 * 0.941544065183021 / 2.384e-06, /* 7 */\n\t\t\t5.245e-06 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.7166e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.56535e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.0103703e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-2.5527000e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.914356e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t-5.07355e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.0041e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.578057213145241e-01, 1.546020906725474e+00,\n\n\t\t\t-9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t1.02520e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t5.39303e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-1.011848e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.3659935e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t4.703045e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.15051e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t7.0095e-05 * 0.956940335732209 / 2.384e-06, /* 6 */\n\t\t\t4.768e-06 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t8.06808e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.287834e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-2.6310921e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t-4.048824e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-5.42164e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-3.2425e-05 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.033466836073424e-01, 1.662939224605090e+00,\n\n\t\t\t-1.431e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.62532e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.573563e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t3.3225536e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.737377e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.91685e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.6280e-05 * 0.970031253194544 / 2.384e-06, /* 5 */\n\t\t\t4.292e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.3828e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.61850e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.487225e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-2.7073860e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t-4.174709e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-5.76973e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-3.4809e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t2.504869601913055e-01, 1.763842528696710e+00,\n\n\t\t\t-1.431e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t9.5367e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.78609e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.161503e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.2754898e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t4.752159e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t8.66413e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t6.2943e-05 * 0.98078528040323 / 2.384e-06, /* 4 */\n\t\t\t3.815e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.718e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t5.22137e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t7.703304e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.7815342e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t-4.290581e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-6.11782e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-3.7670e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t1.989123673796580e-01, 1.847759065022573e+00,\n\n\t\t\t-1.907e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t9.0122e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t2.88486e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.774239e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.2248020e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t4.748821e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t8.38757e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t5.9605e-05 * 0.989176509964781 / 2.384e-06, /* 3 */\n\t\t\t3.338e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t-3.9577e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.88145e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t6.937027e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.8532982e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.395962e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-6.46591e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.0531e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t1.483359875383474e-01, 1.913880671464418e+00,\n\n\t\t\t-1.907e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.4400e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t1.91689e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-3.411293e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.1706810e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t4.728317e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.09669e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t5.579e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.338e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t-5.0545e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t2.59876e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t6.189346e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-2.9224873e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.489899e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-6.80923e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.3392e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t9.849140335716425e-02, 1.961570560806461e+00,\n\n\t\t\t-2.384e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.7724e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t8.8215e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.072189e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t3.1132698e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.691124e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.79152e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t2.861e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t-6.0558e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t1.37329e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.462170e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-2.9890060e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.570484e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-7.14302e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.6253e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.912684976946725e-02, 1.990369453344394e+00,\n\n\t\t\t3.5780907e-02 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.7876148e-02 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t3.134727e-03 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.457142e-03 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t9.71317e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.18868e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.01566e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.3828e-05 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\n\t\t\t3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06,\n\t\t\t7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06,\n\t\t\t4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06,\n\t\t\t-6.9618e-05 / 2.384e-06, /* 2.384e-06/2.384e-06 */\n\t];\n\n\tvar NS = 12;\n\tvar NL = 36;\n\n\tvar win = [\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049690e-13,\n\t     6.423305872147839e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943412e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758252e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558783e-12,\n\t     8.371015190102974e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.456116108943412e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758252e-12,\n\t     -2.858043359288076e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558783e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347923e-13,\n\t     -6.423305872147843e-13,\n\t     -9.400849094049696e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049694e-13,\n\t     -6.423305872147840e-13,\n\t     -2.382191739347918e-13,\n\t     ],\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049688e-13,\n\t     6.423305872147841e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943413e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758253e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558782e-12,\n\t     8.371015190102975e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.461314069809755e-12,\n\t     -4.921085770524055e-12,\n\t     -4.343405037091838e-12,\n\t     -3.732668368707687e-12,\n\t     -3.093523840190885e-12,\n\t     -2.430835727329465e-12,\n\t     -1.734679010007751e-12,\n\t     -9.748253656609281e-13,\n\t     -2.797435120168326e-13,\n\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     -2.283748241799531e-13,\n\t     -4.037858874020686e-13,\n\t     -2.146547464825323e-13,\n\t     ],\n\t    [\n\t     1.316524975873958e-01, /* win[SHORT_TYPE] */\n\t     4.142135623730950e-01,\n\t     7.673269879789602e-01,\n\n\t     1.091308501069271e+00, /* tantab_l */\n\t     1.303225372841206e+00,\n\t     1.569685577117490e+00,\n\t     1.920982126971166e+00,\n\t     2.414213562373094e+00,\n\t     3.171594802363212e+00,\n\t     4.510708503662055e+00,\n\t     7.595754112725146e+00,\n\t     2.290376554843115e+01,\n\n\t     0.98480775301220802032, /* cx */\n\t     0.64278760968653936292,\n\t     0.34202014332566882393,\n\t     0.93969262078590842791,\n\t     -0.17364817766693030343,\n\t     -0.76604444311897790243,\n\t     0.86602540378443870761,\n\t     0.500000000000000e+00,\n\n\t     -5.144957554275265e-01, /* ca */\n\t     -4.717319685649723e-01,\n\t     -3.133774542039019e-01,\n\t     -1.819131996109812e-01,\n\t     -9.457419252642064e-02,\n\t     -4.096558288530405e-02,\n\t     -1.419856857247115e-02,\n\t     -3.699974673760037e-03,\n\n\t     8.574929257125442e-01, /* cs */\n\t     8.817419973177052e-01,\n\t     9.496286491027329e-01,\n\t     9.833145924917901e-01,\n\t     9.955178160675857e-01,\n\t     9.991605581781475e-01,\n\t     9.998991952444470e-01,\n\t     9.999931550702802e-01,\n\t     ],\n\t    [\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     2.283748241799531e-13,\n\t     4.037858874020686e-13,\n\t     2.146547464825323e-13,\n\n\t     5.461314069809755e-12,\n\t     4.921085770524055e-12,\n\t     4.343405037091838e-12,\n\t     3.732668368707687e-12,\n\t     3.093523840190885e-12,\n\t     2.430835727329466e-12,\n\t     1.734679010007751e-12,\n\t     9.748253656609281e-13,\n\t     2.797435120168326e-13,\n\n\t     -5.456116108943413e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758253e-12,\n\t     -2.858043359288075e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558782e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347913e-13,\n\t     -6.423305872147834e-13,\n\t     -9.400849094049688e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049688e-13,\n\t     -6.423305872147841e-13,\n\t     -2.382191739347918e-13,\n\t     ]\n\t];\n\n\tvar tantab_l = win[Encoder_1.SHORT_TYPE];\n\tvar cx = win[Encoder_1.SHORT_TYPE];\n\tvar ca = win[Encoder_1.SHORT_TYPE];\n\tvar cs = win[Encoder_1.SHORT_TYPE];\n\n\t/**\n\t * new IDCT routine written by Takehiro TOMINAGA\n\t *\n\t * PURPOSE: Overlapping window on PCM samples<BR>\n\t *\n\t * SEMANTICS:<BR>\n\t * 32 16-bit pcm samples are scaled to fractional 2's complement and\n\t * concatenated to the end of the window buffer #x#. The updated window\n\t * buffer #x# is then windowed by the analysis window #c# to produce the\n\t * windowed sample #z#\n\t */\n\tvar order = [\n\t    0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29,\n\t    2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31\n\t];\n\n\t/**\n\t * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\n\t */\n\tfunction window_subband(x1, x1Pos, a) {\n\t\tvar wp = 10;\n\n\t\tvar x2 = x1Pos + 238 - 14 - 286;\n\n\t\tfor (var i = -15; i < 0; i++) {\n\t\t\tvar w, s, t;\n\n\t\t\tw = enwindow[wp + -10];\n\t\t\ts = x1[x2 + -224] * w;\n\t\t\tt = x1[x1Pos + 224] * w;\n\t\t\tw = enwindow[wp + -9];\n\t\t\ts += x1[x2 + -160] * w;\n\t\t\tt += x1[x1Pos + 160] * w;\n\t\t\tw = enwindow[wp + -8];\n\t\t\ts += x1[x2 + -96] * w;\n\t\t\tt += x1[x1Pos + 96] * w;\n\t\t\tw = enwindow[wp + -7];\n\t\t\ts += x1[x2 + -32] * w;\n\t\t\tt += x1[x1Pos + 32] * w;\n\t\t\tw = enwindow[wp + -6];\n\t\t\ts += x1[x2 + 32] * w;\n\t\t\tt += x1[x1Pos + -32] * w;\n\t\t\tw = enwindow[wp + -5];\n\t\t\ts += x1[x2 + 96] * w;\n\t\t\tt += x1[x1Pos + -96] * w;\n\t\t\tw = enwindow[wp + -4];\n\t\t\ts += x1[x2 + 160] * w;\n\t\t\tt += x1[x1Pos + -160] * w;\n\t\t\tw = enwindow[wp + -3];\n\t\t\ts += x1[x2 + 224] * w;\n\t\t\tt += x1[x1Pos + -224] * w;\n\n\t\t\tw = enwindow[wp + -2];\n\t\t\ts += x1[x1Pos + -256] * w;\n\t\t\tt -= x1[x2 + 256] * w;\n\t\t\tw = enwindow[wp + -1];\n\t\t\ts += x1[x1Pos + -192] * w;\n\t\t\tt -= x1[x2 + 192] * w;\n\t\t\tw = enwindow[wp + 0];\n\t\t\ts += x1[x1Pos + -128] * w;\n\t\t\tt -= x1[x2 + 128] * w;\n\t\t\tw = enwindow[wp + 1];\n\t\t\ts += x1[x1Pos + -64] * w;\n\t\t\tt -= x1[x2 + 64] * w;\n\t\t\tw = enwindow[wp + 2];\n\t\t\ts += x1[x1Pos + 0] * w;\n\t\t\tt -= x1[x2 + 0] * w;\n\t\t\tw = enwindow[wp + 3];\n\t\t\ts += x1[x1Pos + 64] * w;\n\t\t\tt -= x1[x2 + -64] * w;\n\t\t\tw = enwindow[wp + 4];\n\t\t\ts += x1[x1Pos + 128] * w;\n\t\t\tt -= x1[x2 + -128] * w;\n\t\t\tw = enwindow[wp + 5];\n\t\t\ts += x1[x1Pos + 192] * w;\n\t\t\tt -= x1[x2 + -192] * w;\n\n\t\t\t/*\n\t\t\t * this multiplyer could be removed, but it needs more 256 FLOAT\n\t\t\t * data. thinking about the data cache performance, I think we\n\t\t\t * should not use such a huge table. tt 2000/Oct/25\n\t\t\t */\n\t\t\ts *= enwindow[wp + 6];\n\t\t\tw = t - s;\n\t\t\ta[30 + i * 2] = t + s;\n\t\t\ta[31 + i * 2] = enwindow[wp + 7] * w;\n\t\t\twp += 18;\n\t\t\tx1Pos--;\n\t\t\tx2++;\n\t\t}\n\t\t{\n\t\t\tvar s, t, u, v;\n\t\t\tt = x1[x1Pos + -16] * enwindow[wp + -10];\n\t\t\ts = x1[x1Pos + -32] * enwindow[wp + -2];\n\t\t\tt += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\n\t\t\ts += x1[x1Pos + -96] * enwindow[wp + -1];\n\t\t\tt += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\n\t\t\ts += x1[x1Pos + -160] * enwindow[wp + 0];\n\t\t\tt += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\n\t\t\ts += x1[x1Pos + -224] * enwindow[wp + 1];\n\t\t\tt += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\n\t\t\ts -= x1[x1Pos + 32] * enwindow[wp + 2];\n\t\t\tt += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\n\t\t\ts -= x1[x1Pos + 96] * enwindow[wp + 3];\n\t\t\tt += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\n\t\t\ts -= x1[x1Pos + 160] * enwindow[wp + 4];\n\t\t\tt += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\n\t\t\ts -= x1[x1Pos + 224];\n\n\t\t\tu = s - t;\n\t\t\tv = s + t;\n\n\t\t\tt = a[14];\n\t\t\ts = a[15] - t;\n\n\t\t\ta[31] = v + t; /* A0 */\n\t\t\ta[30] = u + s; /* A1 */\n\t\t\ta[15] = u - s; /* A2 */\n\t\t\ta[14] = v - t; /* A3 */\n\t\t}\n\t\t{\n\t\t\tvar xr;\n\t\t\txr = a[28] - a[0];\n\t\t\ta[0] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -2 * 18 + 7];\n\t\t\txr = a[29] - a[1];\n\t\t\ta[1] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -2 * 18 + 7];\n\n\t\t\txr = a[26] - a[2];\n\t\t\ta[2] += a[26];\n\t\t\ta[26] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[27] - a[3];\n\t\t\ta[3] += a[27];\n\t\t\ta[27] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = a[24] - a[4];\n\t\t\ta[4] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -6 * 18 + 7];\n\t\t\txr = a[25] - a[5];\n\t\t\ta[5] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -6 * 18 + 7];\n\n\t\t\txr = a[22] - a[6];\n\t\t\ta[6] += a[22];\n\t\t\ta[22] = xr * Util$6.SQRT2;\n\t\t\txr = a[23] - a[7];\n\t\t\ta[7] += a[23];\n\t\t\ta[23] = xr * Util$6.SQRT2 - a[7];\n\t\t\ta[7] -= a[6];\n\t\t\ta[22] -= a[7];\n\t\t\ta[23] -= a[22];\n\n\t\t\txr = a[6];\n\t\t\ta[6] = a[31] - xr;\n\t\t\ta[31] = a[31] + xr;\n\t\t\txr = a[7];\n\t\t\ta[7] = a[30] - xr;\n\t\t\ta[30] = a[30] + xr;\n\t\t\txr = a[22];\n\t\t\ta[22] = a[15] - xr;\n\t\t\ta[15] = a[15] + xr;\n\t\t\txr = a[23];\n\t\t\ta[23] = a[14] - xr;\n\t\t\ta[14] = a[14] + xr;\n\n\t\t\txr = a[20] - a[8];\n\t\t\ta[8] += a[20];\n\t\t\ta[20] = xr * enwindow[wp + -10 * 18 + 7];\n\t\t\txr = a[21] - a[9];\n\t\t\ta[9] += a[21];\n\t\t\ta[21] = xr * enwindow[wp + -10 * 18 + 7];\n\n\t\t\txr = a[18] - a[10];\n\t\t\ta[10] += a[18];\n\t\t\ta[18] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[19] - a[11];\n\t\t\ta[11] += a[19];\n\t\t\ta[19] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[16] - a[12];\n\t\t\ta[12] += a[16];\n\t\t\ta[16] = xr * enwindow[wp + -14 * 18 + 7];\n\t\t\txr = a[17] - a[13];\n\t\t\ta[13] += a[17];\n\t\t\ta[17] = xr * enwindow[wp + -14 * 18 + 7];\n\n\t\t\txr = -a[20] + a[24];\n\t\t\ta[20] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = -a[21] + a[25];\n\t\t\ta[21] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[4] - a[8];\n\t\t\ta[4] += a[8];\n\t\t\ta[8] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[5] - a[9];\n\t\t\ta[5] += a[9];\n\t\t\ta[9] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[0] - a[12];\n\t\t\ta[0] += a[12];\n\t\t\ta[12] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[1] - a[13];\n\t\t\ta[1] += a[13];\n\t\t\ta[13] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[16] - a[28];\n\t\t\ta[16] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = -a[17] + a[29];\n\t\t\ta[17] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = Util$6.SQRT2 * (a[2] - a[10]);\n\t\t\ta[2] += a[10];\n\t\t\ta[10] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[3] - a[11]);\n\t\t\ta[3] += a[11];\n\t\t\ta[11] = xr;\n\t\t\txr = Util$6.SQRT2 * (-a[18] + a[26]);\n\t\t\ta[18] += a[26];\n\t\t\ta[26] = xr - a[18];\n\t\t\txr = Util$6.SQRT2 * (-a[19] + a[27]);\n\t\t\ta[19] += a[27];\n\t\t\ta[27] = xr - a[19];\n\n\t\t\txr = a[2];\n\t\t\ta[19] -= a[3];\n\t\t\ta[3] -= xr;\n\t\t\ta[2] = a[31] - xr;\n\t\t\ta[31] += xr;\n\t\t\txr = a[3];\n\t\t\ta[11] -= a[19];\n\t\t\ta[18] -= xr;\n\t\t\ta[3] = a[30] - xr;\n\t\t\ta[30] += xr;\n\t\t\txr = a[18];\n\t\t\ta[27] -= a[11];\n\t\t\ta[19] -= xr;\n\t\t\ta[18] = a[15] - xr;\n\t\t\ta[15] += xr;\n\n\t\t\txr = a[19];\n\t\t\ta[10] -= xr;\n\t\t\ta[19] = a[14] - xr;\n\t\t\ta[14] += xr;\n\t\t\txr = a[10];\n\t\t\ta[11] -= xr;\n\t\t\ta[10] = a[23] - xr;\n\t\t\ta[23] += xr;\n\t\t\txr = a[11];\n\t\t\ta[26] -= xr;\n\t\t\ta[11] = a[22] - xr;\n\t\t\ta[22] += xr;\n\t\t\txr = a[26];\n\t\t\ta[27] -= xr;\n\t\t\ta[26] = a[7] - xr;\n\t\t\ta[7] += xr;\n\n\t\t\txr = a[27];\n\t\t\ta[27] = a[6] - xr;\n\t\t\ta[6] += xr;\n\n\t\t\txr = Util$6.SQRT2 * (a[0] - a[4]);\n\t\t\ta[0] += a[4];\n\t\t\ta[4] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[1] - a[5]);\n\t\t\ta[1] += a[5];\n\t\t\ta[5] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[16] - a[20]);\n\t\t\ta[16] += a[20];\n\t\t\ta[20] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[17] - a[21]);\n\t\t\ta[17] += a[21];\n\t\t\ta[21] = xr;\n\n\t\t\txr = -Util$6.SQRT2 * (a[8] - a[12]);\n\t\t\ta[8] += a[12];\n\t\t\ta[12] = xr - a[8];\n\t\t\txr = -Util$6.SQRT2 * (a[9] - a[13]);\n\t\t\ta[9] += a[13];\n\t\t\ta[13] = xr - a[9];\n\t\t\txr = -Util$6.SQRT2 * (a[25] - a[29]);\n\t\t\ta[25] += a[29];\n\t\t\ta[29] = xr - a[25];\n\t\t\txr = -Util$6.SQRT2 * (a[24] + a[28]);\n\t\t\ta[24] -= a[28];\n\t\t\ta[28] = xr - a[24];\n\n\t\t\txr = a[24] - a[16];\n\t\t\ta[24] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\n\t\t\txr = a[25] - a[17];\n\t\t\ta[25] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[17] - a[1];\n\t\t\ta[17] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[1] - a[0];\n\t\t\ta[1] = xr;\n\t\t\txr = a[16] - xr;\n\t\t\ta[16] = xr;\n\t\t\txr = a[17] - xr;\n\t\t\ta[17] = xr;\n\t\t\txr = a[8] - xr;\n\t\t\ta[8] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[24] - xr;\n\t\t\ta[24] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[4] - xr;\n\t\t\ta[4] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[12] - xr;\n\t\t\ta[12] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[0];\n\t\t\ta[0] += a[31];\n\t\t\ta[31] -= xr;\n\t\t\txr = a[1];\n\t\t\ta[1] += a[30];\n\t\t\ta[30] -= xr;\n\t\t\txr = a[16];\n\t\t\ta[16] += a[15];\n\t\t\ta[15] -= xr;\n\t\t\txr = a[17];\n\t\t\ta[17] += a[14];\n\t\t\ta[14] -= xr;\n\t\t\txr = a[8];\n\t\t\ta[8] += a[23];\n\t\t\ta[23] -= xr;\n\t\t\txr = a[9];\n\t\t\ta[9] += a[22];\n\t\t\ta[22] -= xr;\n\t\t\txr = a[24];\n\t\t\ta[24] += a[7];\n\t\t\ta[7] -= xr;\n\t\t\txr = a[25];\n\t\t\ta[25] += a[6];\n\t\t\ta[6] -= xr;\n\t\t\txr = a[4];\n\t\t\ta[4] += a[27];\n\t\t\ta[27] -= xr;\n\t\t\txr = a[5];\n\t\t\ta[5] += a[26];\n\t\t\ta[26] -= xr;\n\t\t\txr = a[20];\n\t\t\ta[20] += a[11];\n\t\t\ta[11] -= xr;\n\t\t\txr = a[21];\n\t\t\ta[21] += a[10];\n\t\t\ta[10] -= xr;\n\t\t\txr = a[12];\n\t\t\ta[12] += a[19];\n\t\t\ta[19] -= xr;\n\t\t\txr = a[13];\n\t\t\ta[13] += a[18];\n\t\t\ta[18] -= xr;\n\t\t\txr = a[28];\n\t\t\ta[28] += a[3];\n\t\t\ta[3] -= xr;\n\t\t\txr = a[29];\n\t\t\ta[29] += a[2];\n\t\t\ta[2] -= xr;\n\t\t}\n\t}\n\n\t/**\n\t * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\n\t * there are 36 coefficents in the time domain and 18 in the frequency\n\t * domain.<BR>\n\t * In the case of short blocks (type 2) there are 3 transformations with\n\t * short length. This leads to 12 coefficents in the time and 6 in the\n\t * frequency domain. In this case the results are stored side by side in the\n\t * vector out[].\n\t *\n\t * New layer3\n\t */\n\tfunction mdct_short(inout, inoutPos) {\n\t\tfor (var l = 0; l < 3; l++) {\n\t\t\tvar tc0, tc1, tc2, ts0, ts1, ts2;\n\n\t\t\tts0 = inout[inoutPos + 2 * 3] * win[Encoder_1.SHORT_TYPE][0]\n\t\t\t\t\t- inout[inoutPos + 5 * 3];\n\t\t\ttc0 = inout[inoutPos + 0 * 3] * win[Encoder_1.SHORT_TYPE][2]\n\t\t\t\t\t- inout[inoutPos + 3 * 3];\n\t\t\ttc1 = ts0 + tc0;\n\t\t\ttc2 = ts0 - tc0;\n\n\t\t\tts0 = inout[inoutPos + 5 * 3] * win[Encoder_1.SHORT_TYPE][0]\n\t\t\t\t\t+ inout[inoutPos + 2 * 3];\n\t\t\ttc0 = inout[inoutPos + 3 * 3] * win[Encoder_1.SHORT_TYPE][2]\n\t\t\t\t\t+ inout[inoutPos + 0 * 3];\n\t\t\tts1 = ts0 + tc0;\n\t\t\tts2 = -ts0 + tc0;\n\n\t\t\ttc0 = (inout[inoutPos + 1 * 3] * win[Encoder_1.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tts0 = (inout[inoutPos + 4 * 3] * win[Encoder_1.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\n\t\t\t/*\n\t\t\t * tritab_s[ 2 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\n\t\t\t/*\n\t\t\t * tritab_s[0 ]\n\t\t\t */\n\t\t\ttc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 2]\n\t\t\t */\n\t\t\tts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\n\t\t\tinout[inoutPos + 3 * 1] = tc2 - ts1;\n\t\t\tinout[inoutPos + 3 * 2] = tc2 + ts1;\n\n\t\t\ttc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\n\t\t\tts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 0]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 3] = tc1 + ts2;\n\t\t\tinout[inoutPos + 3 * 4] = tc1 - ts2;\n\n\t\t\tinoutPos++;\n\t\t}\n\t}\n\n\tfunction mdct_long(out, outPos, _in) {\n\t\tvar ct, st;\n\t\t{\n\t\t\tvar tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\n\t\t\t/* 1,2, 5,6, 9,10, 13,14, 17 */\n\t\t\ttc1 = _in[17] - _in[9];\n\t\t\ttc3 = _in[15] - _in[11];\n\t\t\ttc4 = _in[14] - _in[12];\n\t\t\tts5 = _in[0] + _in[8];\n\t\t\tts6 = _in[1] + _in[7];\n\t\t\tts7 = _in[2] + _in[6];\n\t\t\tts8 = _in[3] + _in[5];\n\n\t\t\tout[outPos + 17] = (ts5 + ts7 - ts8) - (ts6 - _in[4]);\n\t\t\tst = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\n\t\t\tct = (tc1 - tc3 - tc4) * cx[12 + 6];\n\t\t\tout[outPos + 5] = ct + st;\n\t\t\tout[outPos + 6] = ct - st;\n\n\t\t\ttc2 = (_in[16] - _in[10]) * cx[12 + 6];\n\t\t\tts6 = ts6 * cx[12 + 7] + _in[4];\n\t\t\tct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\n\t\t\tst = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\n\t\t\tout[outPos + 1] = ct + st;\n\t\t\tout[outPos + 2] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\n\t\t\tst = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\n\t\t\tout[outPos + 9] = ct + st;\n\t\t\tout[outPos + 10] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\n\t\t\tst = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\n\t\t\tout[outPos + 13] = ct + st;\n\t\t\tout[outPos + 14] = ct - st;\n\t\t}\n\t\t{\n\t\t\tvar ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\n\n\t\t\tts1 = _in[8] - _in[0];\n\t\t\tts3 = _in[6] - _in[2];\n\t\t\tts4 = _in[5] - _in[3];\n\t\t\ttc5 = _in[17] + _in[9];\n\t\t\ttc6 = _in[16] + _in[10];\n\t\t\ttc7 = _in[15] + _in[11];\n\t\t\ttc8 = _in[14] + _in[12];\n\n\t\t\tout[outPos + 0] = (tc5 + tc7 + tc8) + (tc6 + _in[13]);\n\t\t\tct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\n\t\t\tst = (ts1 - ts3 + ts4) * cx[12 + 6];\n\t\t\tout[outPos + 11] = ct + st;\n\t\t\tout[outPos + 12] = ct - st;\n\n\t\t\tts2 = (_in[7] - _in[1]) * cx[12 + 6];\n\t\t\ttc6 = _in[13] - tc6 * cx[12 + 7];\n\t\t\tct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\n\t\t\tst = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\n\t\t\tout[outPos + 3] = ct + st;\n\t\t\tout[outPos + 4] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\n\t\t\tst = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\n\t\t\tout[outPos + 7] = ct + st;\n\t\t\tout[outPos + 8] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\n\t\t\tst = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\n\t\t\tout[outPos + 15] = ct + st;\n\t\t\tout[outPos + 16] = ct - st;\n\t\t}\n\t}\n\n\tthis.mdct_sub48 = function(gfc, w0, w1) {\n\t\tvar wk = w0;\n\t\tvar wkPos = 286;\n\t\t/* thinking cache performance, ch->gr loop is better than gr->ch loop */\n\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\t\t\t\tvar band;\n\t\t\t\tvar gi = (gfc.l3_side.tt[gr][ch]);\n\t\t\t\tvar mdct_enc = gi.xr;\n\t\t\t\tvar mdct_encPos = 0;\n\t\t\t\tvar samp = gfc.sb_sample[ch][1 - gr];\n\t\t\t\tvar sampPos = 0;\n\n\t\t\t\tfor (var k = 0; k < 18 / 2; k++) {\n\t\t\t\t\twindow_subband(wk, wkPos, samp[sampPos]);\n\t\t\t\t\twindow_subband(wk, wkPos + 32, samp[sampPos + 1]);\n\t\t\t\t\tsampPos += 2;\n\t\t\t\t\twkPos += 64;\n\t\t\t\t\t/*\n\t\t\t\t\t * Compensate for inversion in the analysis filter\n\t\t\t\t\t */\n\t\t\t\t\tfor (band = 1; band < 32; band += 2) {\n\t\t\t\t\t\tsamp[sampPos - 1][band] *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Perform imdct of 18 previous subband samples + 18 current\n\t\t\t\t * subband samples\n\t\t\t\t */\n\t\t\t\tfor (band = 0; band < 32; band++, mdct_encPos += 18) {\n\t\t\t\t\tvar type = gi.block_type;\n\t\t\t\t\tvar band0 = gfc.sb_sample[ch][gr];\n\t\t\t\t\tvar band1 = gfc.sb_sample[ch][1 - gr];\n\t\t\t\t\tif (gi.mixed_block_flag != 0 && band < 2)\n\t\t\t\t\t\ttype = 0;\n\t\t\t\t\tif (gfc.amp_filter[band] < 1e-12) {\n\t\t\t\t\t\tArrays$6.fill(mdct_enc, mdct_encPos + 0,\n\t\t\t\t\t\t\t\tmdct_encPos + 18, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (gfc.amp_filter[band] < 1.0) {\n\t\t\t\t\t\t\tfor (var k = 0; k < 18; k++)\n\t\t\t\t\t\t\t\tband1[k][order[band]] *= gfc.amp_filter[band];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (type == Encoder_1.SHORT_TYPE) {\n\t\t\t\t\t\t\tfor (var k = -NS / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar w = win[Encoder_1.SHORT_TYPE][k + 3];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band0[15 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[14 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[3 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band1[2 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[9 + k][order[band]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmdct_short(mdct_enc, mdct_encPos);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar work = new_float$6(18);\n\t\t\t\t\t\t\tfor (var k = -NL / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar a, b;\n\t\t\t\t\t\t\t\ta = win[type][k + 27]\n\t\t\t\t\t\t\t\t\t\t* band1[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t+ win[type][k + 36]\n\t\t\t\t\t\t\t\t\t\t* band1[8 - k][order[band]];\n\t\t\t\t\t\t\t\tb = win[type][k + 9]\n\t\t\t\t\t\t\t\t\t\t* band0[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t- win[type][k + 18]\n\t\t\t\t\t\t\t\t\t\t* band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\twork[k + 9] = a - b * tantab_l[3 + k + 9];\n\t\t\t\t\t\t\t\twork[k + 18] = a * tantab_l[3 + k + 9] + b;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmdct_long(mdct_enc, mdct_encPos, work);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t * Perform aliasing reduction butterfly\n\t\t\t\t\t */\n\t\t\t\t\tif (type != Encoder_1.SHORT_TYPE && band != 0) {\n\t\t\t\t\t\tfor (var k = 7; k >= 0; --k) {\n\t\t\t\t\t\t\tvar bu, bd;\n\t\t\t\t\t\t\tbu = mdct_enc[mdct_encPos + k] * ca[20 + k]\n\t\t\t\t\t\t\t\t\t+ mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* cs[28 + k];\n\t\t\t\t\t\t\tbd = mdct_enc[mdct_encPos + k] * cs[28 + k]\n\t\t\t\t\t\t\t\t\t- mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* ca[20 + k];\n\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + -1 - k] = bu;\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k] = bd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twk = w1;\n\t\t\twkPos = 286;\n\t\t\tif (gfc.mode_gr == 1) {\n\t\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\t\tSystem$6.arraycopy(gfc.sb_sample[ch][1][i], 0,\n\t\t\t\t\t\t\tgfc.sb_sample[ch][0][i], 0, 32);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nvar NewMDCT_1 = NewMDCT;\n\nvar System$7 = common.System;\nvar new_float$7 = common.new_float;\nvar new_float_n$7 = common.new_float_n;\nfunction III_psy_xmin() {\n    this.l = new_float$7(Encoder_1.SBMAX_l);\n    this.s = new_float_n$7([Encoder_1.SBMAX_s, 3]);\n\n    var self = this;\n    this.assign = function (iii_psy_xmin) {\n        System$7.arraycopy(iii_psy_xmin.l, 0, self.l, 0, Encoder_1.SBMAX_l);\n        for (var i = 0; i < Encoder_1.SBMAX_s; i++) {\n            for (var j = 0; j < 3; j++) {\n                self.s[i][j] = iii_psy_xmin.s[i][j];\n            }\n        }\n    };\n}\n\nvar III_psy_xmin_1 = III_psy_xmin;\n\n//package mp3;\n\n\n\nfunction III_psy_ratio() {\n\tthis.thm = new III_psy_xmin_1();\n\tthis.en = new III_psy_xmin_1();\n}\n\nvar III_psy_ratio_1 = III_psy_ratio;\n\nvar System$5 = common.System;\nvar VbrMode$5 = common.VbrMode;\nvar new_array_n$5 = common.new_array_n;\nvar new_float$5 = common.new_float;\nvar new_float_n$5 = common.new_float_n;\nvar new_int$5 = common.new_int;\nvar assert$5 = common.assert;\n\n/**\n * ENCDELAY The encoder delay.\n *\n * Minimum allowed is MDCTDELAY (see below)\n *\n * The first 96 samples will be attenuated, so using a value less than 96\n * will result in corrupt data for the first 96-ENCDELAY samples.\n *\n * suggested: 576 set to 1160 to sync with FhG.\n */\nEncoder$2.ENCDELAY = 576;\n/**\n * make sure there is at least one complete frame after the last frame\n * containing real data\n *\n * Using a value of 288 would be sufficient for a a very sophisticated\n * decoder that can decode granule-by-granule instead of frame by frame. But\n * lets not assume this, and assume the decoder will not decode frame N\n * unless it also has data for frame N+1\n */\nEncoder$2.POSTDELAY = 1152;\n\n/**\n * delay of the MDCT used in mdct.c original ISO routines had a delay of\n * 528! Takehiro's routines:\n */\nEncoder$2.MDCTDELAY = 48;\nEncoder$2.FFTOFFSET = (224 + Encoder$2.MDCTDELAY);\n\n/**\n * Most decoders, including the one we use, have a delay of 528 samples.\n */\nEncoder$2.DECDELAY = 528;\n\n/**\n * number of subbands\n */\nEncoder$2.SBLIMIT = 32;\n\n/**\n * parition bands bands\n */\nEncoder$2.CBANDS = 64;\n\n/**\n * number of critical bands/scale factor bands where masking is computed\n */\nEncoder$2.SBPSY_l = 21;\nEncoder$2.SBPSY_s = 12;\n\n/**\n * total number of scalefactor bands encoded\n */\nEncoder$2.SBMAX_l = 22;\nEncoder$2.SBMAX_s = 13;\nEncoder$2.PSFB21 = 6;\nEncoder$2.PSFB12 = 6;\n\n/**\n * FFT sizes\n */\nEncoder$2.BLKSIZE = 1024;\nEncoder$2.HBLKSIZE = (Encoder$2.BLKSIZE / 2 + 1);\nEncoder$2.BLKSIZE_s = 256;\nEncoder$2.HBLKSIZE_s = (Encoder$2.BLKSIZE_s / 2 + 1);\n\nEncoder$2.NORM_TYPE = 0;\nEncoder$2.START_TYPE = 1;\nEncoder$2.SHORT_TYPE = 2;\nEncoder$2.STOP_TYPE = 3;\n\n/**\n * <PRE>\n * Mode Extention:\n * When we are in stereo mode, there are 4 possible methods to store these\n * two channels. The stereo modes -m? are using a subset of them.\n *\n *  -ms: MPG_MD_LR_LR\n *  -mj: MPG_MD_LR_LR and MPG_MD_MS_LR\n *  -mf: MPG_MD_MS_LR\n *  -mi: all\n * </PRE>\n */\nEncoder$2.MPG_MD_LR_LR = 0;\nEncoder$2.MPG_MD_LR_I = 1;\nEncoder$2.MPG_MD_MS_LR = 2;\nEncoder$2.MPG_MD_MS_I = 3;\n\nEncoder$2.fircoef = [-0.0207887 * 5, -0.0378413 * 5,\n    -0.0432472 * 5, -0.031183 * 5, 7.79609e-18 * 5, 0.0467745 * 5,\n    0.10091 * 5, 0.151365 * 5, 0.187098 * 5];\n\nfunction Encoder$2() {\n    var NewMDCT = NewMDCT_1;\n    var III_psy_ratio = III_psy_ratio_1;\n\n    var FFTOFFSET = Encoder$2.FFTOFFSET;\n    var MPG_MD_MS_LR = Encoder$2.MPG_MD_MS_LR;\n    //BitStream bs;\n    //PsyModel psy;\n    //VBRTag vbr;\n    //QuantizePVT qupvt;\n    var bs = null;\n    this.psy = null;\n    var psy = null;\n    var vbr = null;\n    var qupvt = null;\n\n    //public final void setModules(BitStream bs, PsyModel psy, QuantizePVT qupvt,\n    //    VBRTag vbr) {\n    this.setModules = function (_bs, _psy, _qupvt, _vbr) {\n        bs = _bs;\n        this.psy = _psy;\n        psy = _psy;\n        vbr = _vbr;\n        qupvt = _qupvt;\n    };\n\n    var newMDCT = new NewMDCT();\n\n    /***********************************************************************\n     *\n     * encoder and decoder delays\n     *\n     ***********************************************************************/\n\n    /**\n     * <PRE>\n     * layer III enc->dec delay:  1056 (1057?)   (observed)\n     * layer  II enc->dec delay:   480  (481?)   (observed)\n     *\n     * polyphase 256-16             (dec or enc)        = 240\n     * mdct      256+32  (9*32)     (dec or enc)        = 288\n     * total:    512+16\n     *\n     * My guess is that delay of polyphase filterbank is actualy 240.5\n     * (there are technical reasons for this, see postings in mp3encoder).\n     * So total Encode+Decode delay = ENCDELAY + 528 + 1\n     * </PRE>\n     */\n\n\n    /**\n     * auto-adjust of ATH, useful for low volume Gabriel Bouvigne 3 feb 2001\n     *\n     * modifies some values in gfp.internal_flags.ATH (gfc.ATH)\n     */\n//private void adjust_ATH(final LameInternalFlags gfc) {\n    function adjust_ATH(gfc) {\n        var gr2_max, max_pow;\n\n        if (gfc.ATH.useAdjust == 0) {\n            gfc.ATH.adjust = 1.0;\n            /* no adjustment */\n            return;\n        }\n\n        /* jd - 2001 mar 12, 27, jun 30 */\n        /* loudness based on equal loudness curve; */\n        /* use granule with maximum combined loudness */\n        max_pow = gfc.loudness_sq[0][0];\n        gr2_max = gfc.loudness_sq[1][0];\n        if (gfc.channels_out == 2) {\n            max_pow += gfc.loudness_sq[0][1];\n            gr2_max += gfc.loudness_sq[1][1];\n        } else {\n            max_pow += max_pow;\n            gr2_max += gr2_max;\n        }\n        if (gfc.mode_gr == 2) {\n            max_pow = Math.max(max_pow, gr2_max);\n        }\n        max_pow *= 0.5;\n        /* max_pow approaches 1.0 for full band noise */\n\n        /* jd - 2001 mar 31, jun 30 */\n        /* user tuning of ATH adjustment region */\n        max_pow *= gfc.ATH.aaSensitivityP;\n\n        /*\n         * adjust ATH depending on range of maximum value\n         */\n\n        /* jd - 2001 feb27, mar12,20, jun30, jul22 */\n        /* continuous curves based on approximation */\n        /* to GB's original values. */\n        /* For an increase in approximate loudness, */\n        /* set ATH adjust to adjust_limit immediately */\n        /* after a delay of one frame. */\n        /* For a loudness decrease, reduce ATH adjust */\n        /* towards adjust_limit gradually. */\n        /* max_pow is a loudness squared or a power. */\n        if (max_pow > 0.03125) { /* ((1 - 0.000625)/ 31.98) from curve below */\n            if (gfc.ATH.adjust >= 1.0) {\n                gfc.ATH.adjust = 1.0;\n            } else {\n                /* preceding frame has lower ATH adjust; */\n                /* ascend only to the preceding adjust_limit */\n                /* in case there is leading low volume */\n                if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                    gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                }\n            }\n            gfc.ATH.adjustLimit = 1.0;\n        } else { /* adjustment curve */\n            /* about 32 dB maximum adjust (0.000625) */\n            var adj_lim_new = 31.98 * max_pow + 0.000625;\n            if (gfc.ATH.adjust >= adj_lim_new) { /* descend gradually */\n                gfc.ATH.adjust *= adj_lim_new * 0.075 + 0.925;\n                if (gfc.ATH.adjust < adj_lim_new) { /* stop descent */\n                    gfc.ATH.adjust = adj_lim_new;\n                }\n            } else { /* ascend */\n                if (gfc.ATH.adjustLimit >= adj_lim_new) {\n                    gfc.ATH.adjust = adj_lim_new;\n                } else {\n                    /* preceding frame has lower ATH adjust; */\n                    /* ascend only to the preceding adjust_limit */\n                    if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                        gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                    }\n                }\n            }\n            gfc.ATH.adjustLimit = adj_lim_new;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  some simple statistics\n     *\n     *  bitrate index 0: free bitrate . not allowed in VBR mode\n     *  : bitrates, kbps depending on MPEG version\n     *  bitrate index 15: forbidden\n     *\n     *  mode_ext:\n     *  0:  LR\n     *  1:  LR-i\n     *  2:  MS\n     *  3:  MS-i\n     * </PRE>\n     */\n    function updateStats(gfc) {\n        var gr, ch;\n        assert$5(0 <= gfc.bitrate_index && gfc.bitrate_index < 16);\n        assert$5(0 <= gfc.mode_ext && gfc.mode_ext < 4);\n\n        /* count bitrate indices */\n        gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][4]++;\n        gfc.bitrate_stereoMode_Hist[15][4]++;\n\n        /* count 'em for every mode extension in case of 2 channel encoding */\n        if (gfc.channels_out == 2) {\n            gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][gfc.mode_ext]++;\n            gfc.bitrate_stereoMode_Hist[15][gfc.mode_ext]++;\n        }\n        for (gr = 0; gr < gfc.mode_gr; ++gr) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                var bt = gfc.l3_side.tt[gr][ch].block_type | 0;\n                if (gfc.l3_side.tt[gr][ch].mixed_block_flag != 0)\n                    bt = 4;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][bt]++;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][5]++;\n                gfc.bitrate_blockType_Hist[15][bt]++;\n                gfc.bitrate_blockType_Hist[15][5]++;\n            }\n        }\n    }\n\n    function lame_encode_frame_init(gfp, inbuf) {\n        var gfc = gfp.internal_flags;\n\n        var ch, gr;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* prime the MDCT/polyphase filterbank with a short block */\n            var i, j;\n            var primebuff0 = new_float$5(286 + 1152 + 576);\n            var primebuff1 = new_float$5(286 + 1152 + 576);\n            gfc.lame_encode_frame_init = 1;\n            for (i = 0, j = 0; i < 286 + 576 * (1 + gfc.mode_gr); ++i) {\n                if (i < 576 * gfc.mode_gr) {\n                    primebuff0[i] = 0;\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = 0;\n                } else {\n                    primebuff0[i] = inbuf[0][j];\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = inbuf[1][j];\n                    ++j;\n                }\n            }\n            /* polyphase filtering / mdct */\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder$2.SHORT_TYPE;\n                }\n            }\n            newMDCT.mdct_sub48(gfc, primebuff0, primebuff1);\n\n            /* check FFT will not use a negative starting offset */\n            assert$5(576 >= Encoder$2.FFTOFFSET);\n            /* check if we have enough data for FFT */\n            assert$5(gfc.mf_size >= (Encoder$2.BLKSIZE + gfp.framesize - Encoder$2.FFTOFFSET));\n            /* check if we have enough data for polyphase filterbank */\n            assert$5(gfc.mf_size >= (512 + gfp.framesize - 32));\n        }\n\n    }\n\n    /**\n     * <PRE>\n     * encodeframe()           Layer 3\n     *\n     * encode a single frame\n     *\n     *\n     *    lame_encode_frame()\n     *\n     *\n     *                           gr 0            gr 1\n     *    inbuf:           |--------------|--------------|--------------|\n     *\n     *\n     *    Polyphase (18 windows, each shifted 32)\n     *    gr 0:\n     *    window1          <----512---.\n     *    window18                 <----512---.\n     *\n     *    gr 1:\n     *    window1                         <----512---.\n     *    window18                                <----512---.\n     *\n     *\n     *\n     *    MDCT output:  |--------------|--------------|--------------|\n     *\n     *    FFT's                    <---------1024---------.\n     *                                             <---------1024-------.\n     *\n     *\n     *\n     *        inbuf = buffer of PCM data size=MP3 framesize\n     *        encoder acts on inbuf[ch][0], but output is delayed by MDCTDELAY\n     *        so the MDCT coefficints are from inbuf[ch][-MDCTDELAY]\n     *\n     *        psy-model FFT has a 1 granule delay, so we feed it data for the\n     *        next granule.\n     *        FFT is centered over granule:  224+576+224\n     *        So FFT starts at:   576-224-MDCTDELAY\n     *\n     *        MPEG2:  FFT ends at:  BLKSIZE+576-224-MDCTDELAY      (1328)\n     *        MPEG1:  FFT ends at:  BLKSIZE+2*576-224-MDCTDELAY    (1904)\n     *\n     *        MPEG2:  polyphase first window:  [0..511]\n     *                          18th window:   [544..1055]          (1056)\n     *        MPEG1:            36th window:   [1120..1631]         (1632)\n     *                data needed:  512+framesize-32\n     *\n     *        A close look newmdct.c shows that the polyphase filterbank\n     *        only uses data from [0..510] for each window.  Perhaps because the window\n     *        used by the filterbank is zero for the last point, so Takehiro's\n     *        code doesn't bother to compute with it.\n     *\n     *        FFT starts at 576-224-MDCTDELAY (304)  = 576-FFTOFFSET\n     *\n     * </PRE>\n     */\n\n\n    this.lame_encode_mp3_frame = function (gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var mp3count;\n        var masking_LR = new_array_n$5([2, 2]);\n        /*\n         * LR masking &\n         * energy\n         */\n        masking_LR[0][0] = new III_psy_ratio();\n        masking_LR[0][1] = new III_psy_ratio();\n        masking_LR[1][0] = new III_psy_ratio();\n        masking_LR[1][1] = new III_psy_ratio();\n        var masking_MS = new_array_n$5([2, 2]);\n        /* MS masking & energy */\n        masking_MS[0][0] = new III_psy_ratio();\n        masking_MS[0][1] = new III_psy_ratio();\n        masking_MS[1][0] = new III_psy_ratio();\n        masking_MS[1][1] = new III_psy_ratio();\n        //III_psy_ratio masking[][];\n        var masking;\n        /* pointer to selected maskings */\n        var inbuf = [null, null];\n        var gfc = gfp.internal_flags;\n\n        var tot_ener = new_float_n$5([2, 4]);\n        var ms_ener_ratio = [.5, .5];\n        var pe = [[0., 0.], [0., 0.]];\n        var pe_MS = [[0., 0.], [0., 0.]];\n\n//float[][] pe_use;\n        var pe_use;\n\n        var ch, gr;\n\n        inbuf[0] = inbuf_l;\n        inbuf[1] = inbuf_r;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* first run? */\n            lame_encode_frame_init(gfp, inbuf);\n\n        }\n\n        /********************** padding *****************************/\n        /**\n         * <PRE>\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\"\n         * by Martin Sieler, Ralph Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         * </PRE>\n         */\n        gfc.padding = 0;\n        if ((gfc.slot_lag -= gfc.frac_SpF) < 0) {\n            gfc.slot_lag += gfp.out_samplerate;\n            gfc.padding = 1;\n        }\n\n        /****************************************\n         * Stage 1: psychoacoustic model *\n         ****************************************/\n\n        if (gfc.psymodel != 0) {\n            /*\n             * psychoacoustic model psy model has a 1 granule (576) delay that\n             * we must compensate for (mt 6/99).\n             */\n            var ret;\n            var bufp = [null, null];\n            /* address of beginning of left & right granule */\n            var bufpPos = 0;\n            /* address of beginning of left & right granule */\n            var blocktype = new_int$5(2);\n\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    bufp[ch] = inbuf[ch];\n                    bufpPos = 576 + gr * 576 - Encoder$2.FFTOFFSET;\n                }\n                if (gfp.VBR == VbrMode$5.vbr_mtrh || gfp.VBR == VbrMode$5.vbr_mt) {\n                    ret = psy.L3psycho_anal_vbr(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                } else {\n                    ret = psy.L3psycho_anal_ns(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                }\n                if (ret != 0)\n                    return -4;\n\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    ms_ener_ratio[gr] = tot_ener[gr][2] + tot_ener[gr][3];\n                    if (ms_ener_ratio[gr] > 0)\n                        ms_ener_ratio[gr] = tot_ener[gr][3] / ms_ener_ratio[gr];\n                }\n\n                /* block type flags */\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var cod_info = gfc.l3_side.tt[gr][ch];\n                    cod_info.block_type = blocktype[ch];\n                    cod_info.mixed_block_flag = 0;\n                }\n            }\n        } else {\n            /* no psy model */\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder$2.NORM_TYPE;\n                    gfc.l3_side.tt[gr][ch].mixed_block_flag = 0;\n                    pe_MS[gr][ch] = pe[gr][ch] = 700;\n                }\n        }\n\n        /* auto-adjust of ATH, useful for low volume */\n        adjust_ATH(gfc);\n\n        /****************************************\n         * Stage 2: MDCT *\n         ****************************************/\n\n        /* polyphase filtering / mdct */\n        newMDCT.mdct_sub48(gfc, inbuf[0], inbuf[1]);\n\n        /****************************************\n         * Stage 3: MS/LR decision *\n         ****************************************/\n\n        /* Here will be selected MS or LR coding of the 2 stereo channels */\n        gfc.mode_ext = Encoder$2.MPG_MD_LR_LR;\n\n        if (gfp.force_ms) {\n            gfc.mode_ext = Encoder$2.MPG_MD_MS_LR;\n        } else if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            /*\n             * ms_ratio = is scaled, for historical reasons, to look like a\n             * ratio of side_channel / total. 0 = signal is 100% mono .5 = L & R\n             * uncorrelated\n             */\n\n            /**\n             * <PRE>\n             * [0] and [1] are the results for the two granules in MPEG-1,\n             * in MPEG-2 it's only a faked averaging of the same value\n             * _prev is the value of the last granule of the previous frame\n             * _next is the value of the first granule of the next frame\n             * </PRE>\n             */\n\n            var sum_pe_MS = 0.;\n            var sum_pe_LR = 0.;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    sum_pe_MS += pe_MS[gr][ch];\n                    sum_pe_LR += pe[gr][ch];\n                }\n            }\n\n            /* based on PE: M/S coding would not use much more bits than L/R */\n            if (sum_pe_MS <= 1.00 * sum_pe_LR) {\n\n                var gi0 = gfc.l3_side.tt[0];\n                var gi1 = gfc.l3_side.tt[gfc.mode_gr - 1];\n\n                if (gi0[0].block_type == gi0[1].block_type\n                    && gi1[0].block_type == gi1[1].block_type) {\n\n                    gfc.mode_ext = Encoder$2.MPG_MD_MS_LR;\n                }\n            }\n        }\n\n        /* bit and noise allocation */\n        if (gfc.mode_ext == MPG_MD_MS_LR) {\n            masking = masking_MS;\n            /* use MS masking */\n            pe_use = pe_MS;\n        } else {\n            masking = masking_LR;\n            /* use LR masking */\n            pe_use = pe;\n        }\n\n        /* copy data for MP3 frame analyzer */\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.pinfo.ms_ratio[gr] = gfc.ms_ratio[gr];\n                    gfc.pinfo.ms_ener_ratio[gr] = ms_ener_ratio[gr];\n                    gfc.pinfo.blocktype[gr][ch] = gfc.l3_side.tt[gr][ch].block_type;\n                    gfc.pinfo.pe[gr][ch] = pe_use[gr][ch];\n                    System$5.arraycopy(gfc.l3_side.tt[gr][ch].xr, 0,\n                        gfc.pinfo.xr[gr][ch], 0, 576);\n                    /*\n                     * in psymodel, LR and MS data was stored in pinfo. switch\n                     * to MS data:\n                     */\n                    if (gfc.mode_ext == MPG_MD_MS_LR) {\n                        gfc.pinfo.ers[gr][ch] = gfc.pinfo.ers[gr][ch + 2];\n                        System$5.arraycopy(gfc.pinfo.energy[gr][ch + 2], 0,\n                            gfc.pinfo.energy[gr][ch], 0,\n                            gfc.pinfo.energy[gr][ch].length);\n                    }\n                }\n            }\n        }\n\n        /****************************************\n         * Stage 4: quantization loop *\n         ****************************************/\n\n        if (gfp.VBR == VbrMode$5.vbr_off || gfp.VBR == VbrMode$5.vbr_abr) {\n\n            var i;\n            var f;\n\n            for (i = 0; i < 18; i++)\n                gfc.nsPsy.pefirbuf[i] = gfc.nsPsy.pefirbuf[i + 1];\n\n            f = 0.0;\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    f += pe_use[gr][ch];\n            gfc.nsPsy.pefirbuf[18] = f;\n\n            f = gfc.nsPsy.pefirbuf[9];\n            for (i = 0; i < 9; i++)\n                f += (gfc.nsPsy.pefirbuf[i] + gfc.nsPsy.pefirbuf[18 - i])\n                    * Encoder$2.fircoef[i];\n\n            f = (670 * 5 * gfc.mode_gr * gfc.channels_out) / f;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    pe_use[gr][ch] *= f;\n                }\n            }\n        }\n        gfc.iteration_loop.iteration_loop(gfp, pe_use, ms_ener_ratio, masking);\n\n        /****************************************\n         * Stage 5: bitstream formatting *\n         ****************************************/\n\n        /* write the frame to the bitstream */\n        bs.format_bitstream(gfp);\n\n        /* copy mp3 bit buffer into array */\n        mp3count = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 1);\n\n        if (gfp.bWriteVbrTag)\n            vbr.addVbrFrame(gfp);\n\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var j;\n                for (j = 0; j < FFTOFFSET; j++)\n                    gfc.pinfo.pcmdata[ch][j] = gfc.pinfo.pcmdata[ch][j\n                    + gfp.framesize];\n                for (j = FFTOFFSET; j < 1600; j++) {\n                    gfc.pinfo.pcmdata[ch][j] = inbuf[ch][j - FFTOFFSET];\n                }\n            }\n            qupvt.set_frame_pinfo(gfp, masking);\n        }\n\n        updateStats(gfc);\n\n        return mp3count;\n    };\n}\n\n\nvar Encoder_1 = Encoder$2;\n\nvar Util$4 = common.Util;\nvar new_float$4 = common.new_float;\nfunction FFT() {\n\n    var window = new_float$4(Encoder_1.BLKSIZE);\n    var window_s = new_float$4(Encoder_1.BLKSIZE_s / 2);\n\n    var costab = [\n        9.238795325112867e-01, 3.826834323650898e-01,\n        9.951847266721969e-01, 9.801714032956060e-02,\n        9.996988186962042e-01, 2.454122852291229e-02,\n        9.999811752826011e-01, 6.135884649154475e-03\n    ];\n\n    function fht(fz, fzPos, n) {\n        var tri = 0;\n        var k4;\n        var fi;\n        var gi;\n\n        n <<= 1;\n        /* to get BLKSIZE, because of 3DNow! ASM routine */\n        var fn = fzPos + n;\n        k4 = 4;\n        do {\n            var s1, c1;\n            var i, k1, k2, k3, kx;\n            kx = k4 >> 1;\n            k1 = k4;\n            k2 = k4 << 1;\n            k3 = k2 + k1;\n            k4 = k2 << 1;\n            fi = fzPos;\n            gi = fi + kx;\n            do {\n                var f0, f1, f2, f3;\n                f1 = fz[fi + 0] - fz[fi + k1];\n                f0 = fz[fi + 0] + fz[fi + k1];\n                f3 = fz[fi + k2] - fz[fi + k3];\n                f2 = fz[fi + k2] + fz[fi + k3];\n                fz[fi + k2] = f0 - f2;\n                fz[fi + 0] = f0 + f2;\n                fz[fi + k3] = f1 - f3;\n                fz[fi + k1] = f1 + f3;\n                f1 = fz[gi + 0] - fz[gi + k1];\n                f0 = fz[gi + 0] + fz[gi + k1];\n                f3 = (Util$4.SQRT2 * fz[gi + k3]);\n                f2 = (Util$4.SQRT2 * fz[gi + k2]);\n                fz[gi + k2] = f0 - f2;\n                fz[gi + 0] = f0 + f2;\n                fz[gi + k3] = f1 - f3;\n                fz[gi + k1] = f1 + f3;\n                gi += k4;\n                fi += k4;\n            } while (fi < fn);\n            c1 = costab[tri + 0];\n            s1 = costab[tri + 1];\n            for (i = 1; i < kx; i++) {\n                var c2, s2;\n                c2 = 1 - (2 * s1) * s1;\n                s2 = (2 * s1) * c1;\n                fi = fzPos + i;\n                gi = fzPos + k1 - i;\n                do {\n                    var a, b, g0, f0, f1, g1, f2, g2, f3, g3;\n                    b = s2 * fz[fi + k1] - c2 * fz[gi + k1];\n                    a = c2 * fz[fi + k1] + s2 * fz[gi + k1];\n                    f1 = fz[fi + 0] - a;\n                    f0 = fz[fi + 0] + a;\n                    g1 = fz[gi + 0] - b;\n                    g0 = fz[gi + 0] + b;\n                    b = s2 * fz[fi + k3] - c2 * fz[gi + k3];\n                    a = c2 * fz[fi + k3] + s2 * fz[gi + k3];\n                    f3 = fz[fi + k2] - a;\n                    f2 = fz[fi + k2] + a;\n                    g3 = fz[gi + k2] - b;\n                    g2 = fz[gi + k2] + b;\n                    b = s1 * f2 - c1 * g3;\n                    a = c1 * f2 + s1 * g3;\n                    fz[fi + k2] = f0 - a;\n                    fz[fi + 0] = f0 + a;\n                    fz[gi + k3] = g1 - b;\n                    fz[gi + k1] = g1 + b;\n                    b = c1 * g2 - s1 * f3;\n                    a = s1 * g2 + c1 * f3;\n                    fz[gi + k2] = g0 - a;\n                    fz[gi + 0] = g0 + a;\n                    fz[fi + k3] = f1 - b;\n                    fz[fi + k1] = f1 + b;\n                    gi += k4;\n                    fi += k4;\n                } while (fi < fn);\n                c2 = c1;\n                c1 = c2 * costab[tri + 0] - s1 * costab[tri + 1];\n                s1 = c2 * costab[tri + 1] + s1 * costab[tri + 0];\n            }\n            tri += 2;\n        } while (k4 < n);\n    }\n\n    var rv_tbl = [0x00, 0x80, 0x40,\n        0xc0, 0x20, 0xa0, 0x60, 0xe0, 0x10,\n        0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70,\n        0xf0, 0x08, 0x88, 0x48, 0xc8, 0x28,\n        0xa8, 0x68, 0xe8, 0x18, 0x98, 0x58,\n        0xd8, 0x38, 0xb8, 0x78, 0xf8, 0x04,\n        0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64,\n        0xe4, 0x14, 0x94, 0x54, 0xd4, 0x34,\n        0xb4, 0x74, 0xf4, 0x0c, 0x8c, 0x4c,\n        0xcc, 0x2c, 0xac, 0x6c, 0xec, 0x1c,\n        0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c,\n        0xfc, 0x02, 0x82, 0x42, 0xc2, 0x22,\n        0xa2, 0x62, 0xe2, 0x12, 0x92, 0x52,\n        0xd2, 0x32, 0xb2, 0x72, 0xf2, 0x0a,\n        0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a,\n        0xea, 0x1a, 0x9a, 0x5a, 0xda, 0x3a,\n        0xba, 0x7a, 0xfa, 0x06, 0x86, 0x46,\n        0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16,\n        0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76,\n        0xf6, 0x0e, 0x8e, 0x4e, 0xce, 0x2e,\n        0xae, 0x6e, 0xee, 0x1e, 0x9e, 0x5e,\n        0xde, 0x3e, 0xbe, 0x7e, 0xfe];\n\n    this.fft_short = function (gfc, x_real, chn, buffer, bufPos) {\n        for (var b = 0; b < 3; b++) {\n            var x = Encoder_1.BLKSIZE_s / 2;\n            var k = 0xffff & ((576 / 3) * (b + 1));\n            var j = Encoder_1.BLKSIZE_s / 8 - 1;\n            do {\n                var f0, f1, f2, f3, w;\n                var i = rv_tbl[j << 2] & 0xff;\n\n                f0 = window_s[i] * buffer[chn][bufPos + i + k];\n                w = window_s[0x7f - i] * buffer[chn][bufPos + i + k + 0x80];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x40] * buffer[chn][bufPos + i + k + 0x40];\n                w = window_s[0x3f - i] * buffer[chn][bufPos + i + k + 0xc0];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x -= 4;\n                x_real[b][x + 0] = f0 + f2;\n                x_real[b][x + 2] = f0 - f2;\n                x_real[b][x + 1] = f1 + f3;\n                x_real[b][x + 3] = f1 - f3;\n\n                f0 = window_s[i + 0x01] * buffer[chn][bufPos + i + k + 0x01];\n                w = window_s[0x7e - i] * buffer[chn][bufPos + i + k + 0x81];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x41] * buffer[chn][bufPos + i + k + 0x41];\n                w = window_s[0x3e - i] * buffer[chn][bufPos + i + k + 0xc1];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 0] = f0 + f2;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 2] = f0 - f2;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 1] = f1 + f3;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 3] = f1 - f3;\n            } while (--j >= 0);\n\n            fht(x_real[b], x, Encoder_1.BLKSIZE_s / 2);\n            /* BLKSIZE_s/2 because of 3DNow! ASM routine */\n            /* BLKSIZE/2 because of 3DNow! ASM routine */\n        }\n    };\n\n    this.fft_long = function (gfc, y, chn, buffer, bufPos) {\n        var jj = Encoder_1.BLKSIZE / 8 - 1;\n        var x = Encoder_1.BLKSIZE / 2;\n\n        do {\n            var f0, f1, f2, f3, w;\n            var i = rv_tbl[jj] & 0xff;\n            f0 = window[i] * buffer[chn][bufPos + i];\n            w = window[i + 0x200] * buffer[chn][bufPos + i + 0x200];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x100] * buffer[chn][bufPos + i + 0x100];\n            w = window[i + 0x300] * buffer[chn][bufPos + i + 0x300];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            x -= 4;\n            y[x + 0] = f0 + f2;\n            y[x + 2] = f0 - f2;\n            y[x + 1] = f1 + f3;\n            y[x + 3] = f1 - f3;\n\n            f0 = window[i + 0x001] * buffer[chn][bufPos + i + 0x001];\n            w = window[i + 0x201] * buffer[chn][bufPos + i + 0x201];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x101] * buffer[chn][bufPos + i + 0x101];\n            w = window[i + 0x301] * buffer[chn][bufPos + i + 0x301];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            y[x + Encoder_1.BLKSIZE / 2 + 0] = f0 + f2;\n            y[x + Encoder_1.BLKSIZE / 2 + 2] = f0 - f2;\n            y[x + Encoder_1.BLKSIZE / 2 + 1] = f1 + f3;\n            y[x + Encoder_1.BLKSIZE / 2 + 3] = f1 - f3;\n        } while (--jj >= 0);\n\n        fht(y, x, Encoder_1.BLKSIZE / 2);\n        /* BLKSIZE/2 because of 3DNow! ASM routine */\n    };\n\n    this.init_fft = function (gfc) {\n        /* The type of window used here will make no real difference, but */\n        /*\n         * in the interest of merging nspsytune stuff - switch to blackman\n         * window\n         */\n        for (var i = 0; i < Encoder_1.BLKSIZE; i++)\n            /* blackman window */\n            window[i] = (0.42 - 0.5 * Math.cos(2 * Math.PI * (i + .5)\n                / Encoder_1.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (i + .5)\n                / Encoder_1.BLKSIZE));\n\n        for (var i = 0; i < Encoder_1.BLKSIZE_s / 2; i++)\n            window_s[i] = (0.5 * (1.0 - Math.cos(2.0 * Math.PI\n                * (i + 0.5) / Encoder_1.BLKSIZE_s)));\n\n    };\n\n}\n\nvar FFT_1 = FFT;\n\nvar VbrMode$3 = common.VbrMode;\nvar Float$3 = common.Float;\nvar ShortBlock$3 = common.ShortBlock;\nvar Util$3 = common.Util;\nvar Arrays$3 = common.Arrays;\nvar new_float$3 = common.new_float;\nvar new_float_n$3 = common.new_float_n;\nvar new_int$3 = common.new_int;\nvar assert$3 = common.assert;\n\n\n\n\nfunction PsyModel() {\n\n    var fft = new FFT_1();\n\n    var LOG10 = 2.30258509299404568402;\n\n    var rpelev = 2;\n    var rpelev2 = 16;\n    var rpelev_s = 2;\n    var rpelev2_s = 16;\n\n    /* size of each partition band, in barks: */\n    var DELBARK = .34;\n\n    /* tuned for output level (sensitive to energy scale) */\n    var VO_SCALE = (1. / (14752 * 14752) / (Encoder_1.BLKSIZE / 2));\n\n    var temporalmask_sustain_sec = 0.01;\n\n    var NS_PREECHO_ATT0 = 0.8;\n    var NS_PREECHO_ATT1 = 0.6;\n    var NS_PREECHO_ATT2 = 0.3;\n\n    var NS_MSFIX = 3.5;\n\n    var NSATTACKTHRE = 4.4;\n    var NSATTACKTHRE_S = 25;\n\n    var NSFIRLEN = 21;\n\n    /* size of each partition band, in barks: */\n    var LN_TO_LOG10 = 0.2302585093;\n\n    function NON_LINEAR_SCALE_ENERGY(x) {\n        return x;\n    }\n\n    /**\n     * <PRE>\n     *       L3psycho_anal.  Compute psycho acoustics.\n     *\n     *       Data returned to the calling program must be delayed by one\n     *       granule.\n     *\n     *       This is done in two places.\n     *       If we do not need to know the blocktype, the copying\n     *       can be done here at the top of the program: we copy the data for\n     *       the last granule (computed during the last call) before it is\n     *       overwritten with the new data.  It looks like this:\n     *\n     *       0. static psymodel_data\n     *       1. calling_program_data = psymodel_data\n     *       2. compute psymodel_data\n     *\n     *       For data which needs to know the blocktype, the copying must be\n     *       done at the end of this loop, and the old values must be saved:\n     *\n     *       0. static psymodel_data_old\n     *       1. compute psymodel_data\n     *       2. compute possible block type of this granule\n     *       3. compute final block type of previous granule based on #2.\n     *       4. calling_program_data = psymodel_data_old\n     *       5. psymodel_data_old = psymodel_data\n     *     psycho_loudness_approx\n     *       jd - 2001 mar 12\n     *    in:  energy   - BLKSIZE/2 elements of frequency magnitudes ^ 2\n     *         gfp      - uses out_samplerate, ATHtype (also needed for ATHformula)\n     *    returns: loudness^2 approximation, a positive value roughly tuned for a value\n     *             of 1.0 for signals near clipping.\n     *    notes:   When calibrated, feeding this function binary white noise at sample\n     *             values +32767 or -32768 should return values that approach 3.\n     *             ATHformula is used to approximate an equal loudness curve.\n     *    future:  Data indicates that the shape of the equal loudness curve varies\n     *             with intensity.  This function might be improved by using an equal\n     *             loudness curve shaped for typical playback levels (instead of the\n     *             ATH, that is shaped for the threshold).  A flexible realization might\n     *             simply bend the existing ATH curve to achieve the desired shape.\n     *             However, the potential gain may not be enough to justify an effort.\n     * </PRE>\n     */\n    function psycho_loudness_approx(energy, gfc) {\n        var loudness_power = 0.0;\n        /* apply weights to power in freq. bands */\n        for (var i = 0; i < Encoder_1.BLKSIZE / 2; ++i)\n            loudness_power += energy[i] * gfc.ATH.eql_w[i];\n        loudness_power *= VO_SCALE;\n\n        return loudness_power;\n    }\n\n    function compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, wsamp_lPos, wsamp_s, wsamp_sPos, gr_out, chn, buffer, bufPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        /* FFT data for mid and side channel is derived from L & R */\n        else if (chn == 2) {\n            for (var j = Encoder_1.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n            for (var b = 2; b >= 0; --b) {\n                for (var j = Encoder_1.BLKSIZE_s - 1; j >= 0; --j) {\n                    var l = wsamp_s[wsamp_sPos + 0][b][j];\n                    var r = wsamp_s[wsamp_sPos + 1][b][j];\n                    wsamp_s[wsamp_sPos + 0][b][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                    wsamp_s[wsamp_sPos + 1][b][j] = (l - r) * Util$3.SQRT2 * 0.5;\n                }\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder_1.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = (wsamp_l[wsamp_lPos + 0])[Encoder_1.BLKSIZE / 2 - j];\n            var im = (wsamp_l[wsamp_lPos + 0])[Encoder_1.BLKSIZE / 2 + j];\n            fftenergy[Encoder_1.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        for (var b = 2; b >= 0; --b) {\n            fftenergy_s[b][0] = (wsamp_s[wsamp_sPos + 0])[b][0];\n            fftenergy_s[b][0] *= fftenergy_s[b][0];\n            for (var j = Encoder_1.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n                var re = (wsamp_s[wsamp_sPos + 0])[b][Encoder_1.BLKSIZE_s\n                / 2 - j];\n                var im = (wsamp_s[wsamp_sPos + 0])[b][Encoder_1.BLKSIZE_s\n                / 2 + j];\n                fftenergy_s[b][Encoder_1.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                    * re + im * im) * 0.5);\n            }\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder_1.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder_1.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n\n        /*********************************************************************\n         * compute loudness approximation (used for ATH auto-level adjustment)\n         *********************************************************************/\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    /* mask_add optimization */\n    /* init the limit values used to avoid computing log in mask_add when it is not necessary */\n\n    /**\n     * <PRE>\n     *  For example, with i = 10*log10(m2/m1)/10*16         (= log10(m2/m1)*16)\n     *\n     * abs(i)>8 is equivalent (as i is an integer) to\n     * abs(i)>=9\n     * i>=9 || i<=-9\n     * equivalent to (as i is the biggest integer smaller than log10(m2/m1)*16\n     * or the smallest integer bigger than log10(m2/m1)*16 depending on the sign of log10(m2/m1)*16)\n     * log10(m2/m1)>=9/16 || log10(m2/m1)<=-9/16\n     * exp10 is strictly increasing thus this is equivalent to\n     * m2/m1 >= 10^(9/16) || m2/m1<=10^(-9/16) which are comparisons to constants\n     * </PRE>\n     */\n\n    /**\n     * as in if(i>8)\n     */\n    var I1LIMIT = 8;\n    /**\n     * as in if(i>24) . changed 23\n     */\n    var I2LIMIT = 23;\n    /**\n     * as in if(m<15)\n     */\n    var MLIMIT = 15;\n\n    var ma_max_i1;\n    var ma_max_i2;\n    var ma_max_m;\n\n    /**\n     * This is the masking table:<BR>\n     * According to tonality, values are going from 0dB (TMN) to 9.3dB (NMT).<BR>\n     * After additive masking computation, 8dB are added, so final values are\n     * going from 8dB to 17.3dB\n     *\n     * pow(10, -0.0..-0.6)\n     */\n    var tab = [1.0, 0.79433, 0.63096, 0.63096,\n        0.63096, 0.63096, 0.63096, 0.25119, 0.11749];\n\n    function init_mask_add_max_values() {\n        ma_max_i1 = Math.pow(10, (I1LIMIT + 1) / 16.0);\n        ma_max_i2 = Math.pow(10, (I2LIMIT + 1) / 16.0);\n        ma_max_m = Math.pow(10, (MLIMIT) / 10.0);\n    }\n\n    var table1 = [3.3246 * 3.3246,\n        3.23837 * 3.23837, 3.15437 * 3.15437, 3.00412 * 3.00412,\n        2.86103 * 2.86103, 2.65407 * 2.65407, 2.46209 * 2.46209,\n        2.284 * 2.284, 2.11879 * 2.11879, 1.96552 * 1.96552,\n        1.82335 * 1.82335, 1.69146 * 1.69146, 1.56911 * 1.56911,\n        1.46658 * 1.46658, 1.37074 * 1.37074, 1.31036 * 1.31036,\n        1.25264 * 1.25264, 1.20648 * 1.20648, 1.16203 * 1.16203,\n        1.12765 * 1.12765, 1.09428 * 1.09428, 1.0659 * 1.0659,\n        1.03826 * 1.03826, 1.01895 * 1.01895, 1];\n\n    var table2 = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    var table3 = [2.35364 * 2.35364,\n        2.29259 * 2.29259, 2.23313 * 2.23313, 2.12675 * 2.12675,\n        2.02545 * 2.02545, 1.87894 * 1.87894, 1.74303 * 1.74303,\n        1.61695 * 1.61695, 1.49999 * 1.49999, 1.39148 * 1.39148,\n        1.29083 * 1.29083, 1.19746 * 1.19746, 1.11084 * 1.11084,\n        1.03826 * 1.03826];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function mask_add(m1, m2, kk, b, gfc, shortblock) {\n        var ratio;\n\n        if (m2 > m1) {\n            if (m2 < (m1 * ma_max_i2))\n                ratio = m2 / m1;\n            else\n                return (m1 + m2);\n        } else {\n            if (m1 >= (m2 * ma_max_i2))\n                return (m1 + m2);\n            ratio = m1 / m2;\n        }\n\n        /* Should always be true, just checking */\n        assert$3(m1 >= 0);\n        assert$3(m2 >= 0);\n\n        m1 += m2;\n        //if (((long)(b + 3) & 0xffffffff) <= 3 + 3) {\n        if ((b + 3) <= 3 + 3) {\n            /* approximately, 1 bark = 3 partitions */\n            /* 65% of the cases */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                /* 43% of the total */\n                return m1;\n            }\n\n            /* 22% of the total */\n            var i = 0 | (Util$3.FAST_LOG10_X(ratio, 16.0));\n            return m1 * table2[i];\n        }\n\n        /**\n         * <PRE>\n         * m<15 equ log10((m1+m2)/gfc.ATH.cb[k])<1.5\n         * equ (m1+m2)/gfc.ATH.cb[k]<10^1.5\n         * equ (m1+m2)<10^1.5 * gfc.ATH.cb[k]\n         * </PRE>\n         */\n        var i = 0 | Util$3.FAST_LOG10_X(ratio, 16.0);\n        if (shortblock != 0) {\n            m2 = gfc.ATH.cb_s[kk] * gfc.ATH.adjust;\n        } else {\n            m2 = gfc.ATH.cb_l[kk] * gfc.ATH.adjust;\n        }\n        assert$3(m2 >= 0);\n        if (m1 < ma_max_m * m2) {\n            /* 3% of the total */\n            /* Originally if (m > 0) { */\n            if (m1 > m2) {\n                var f, r;\n\n                f = 1.0;\n                if (i <= 13)\n                    f = table3[i];\n\n                r = Util$3.FAST_LOG10_X(m1 / m2, 10.0 / 15.0);\n                return m1 * ((table1[i] - f) * r + f);\n            }\n\n            if (i > 13)\n                return m1;\n\n            return m1 * table3[i];\n        }\n\n        /* 10% of total */\n        return m1 * table1[i];\n    }\n\n    var table2_ = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function vbrpsy_mask_add(m1, m2, b) {\n        var ratio;\n\n        if (m1 < 0) {\n            m1 = 0;\n        }\n        if (m2 < 0) {\n            m2 = 0;\n        }\n        if (m1 <= 0) {\n            return m2;\n        }\n        if (m2 <= 0) {\n            return m1;\n        }\n        if (m2 > m1) {\n            ratio = m2 / m1;\n        } else {\n            ratio = m1 / m2;\n        }\n        if (-2 <= b && b <= 2) {\n            /* approximately, 1 bark = 3 partitions */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                return m1 + m2;\n            } else {\n                var i = 0 | (Util$3.FAST_LOG10_X(ratio, 16.0));\n                return (m1 + m2) * table2_[i];\n            }\n        }\n        if (ratio < ma_max_i2) {\n            return m1 + m2;\n        }\n        if (m1 < m2) {\n            m1 = m2;\n        }\n        return m1;\n    }\n\n    /**\n     * compute interchannel masking effects\n     */\n    function calc_interchannel_masking(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n        if (gfc.channels_out > 1) {\n            for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n                var l = gfc.thm[0].l[sb];\n                var r = gfc.thm[1].l[sb];\n                gfc.thm[0].l[sb] += r * ratio;\n                gfc.thm[1].l[sb] += l * ratio;\n            }\n            for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                for (var sblock = 0; sblock < 3; sblock++) {\n                    var l = gfc.thm[0].s[sb][sblock];\n                    var r = gfc.thm[1].s[sb][sblock];\n                    gfc.thm[0].s[sb][sblock] += r * ratio;\n                    gfc.thm[1].s[sb][sblock] += l * ratio;\n                }\n            }\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function msfix1(gfc) {\n        for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n            /* use this fix if L & R masking differs by 2db or less */\n            /* if db = 10*log10(x2/x1) < 2 */\n            /* if (x2 < 1.58*x1) { */\n            if (gfc.thm[0].l[sb] > 1.58 * gfc.thm[1].l[sb]\n                || gfc.thm[1].l[sb] > 1.58 * gfc.thm[0].l[sb])\n                continue;\n            var mld = gfc.mld_l[sb] * gfc.en[3].l[sb];\n            var rmid = Math.max(gfc.thm[2].l[sb],\n                Math.min(gfc.thm[3].l[sb], mld));\n\n            mld = gfc.mld_l[sb] * gfc.en[2].l[sb];\n            var rside = Math.max(gfc.thm[3].l[sb],\n                Math.min(gfc.thm[2].l[sb], mld));\n            gfc.thm[2].l[sb] = rmid;\n            gfc.thm[3].l[sb] = rside;\n        }\n\n        for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                if (gfc.thm[0].s[sb][sblock] > 1.58 * gfc.thm[1].s[sb][sblock]\n                    || gfc.thm[1].s[sb][sblock] > 1.58 * gfc.thm[0].s[sb][sblock])\n                    continue;\n                var mld = gfc.mld_s[sb] * gfc.en[3].s[sb][sblock];\n                var rmid = Math.max(gfc.thm[2].s[sb][sblock],\n                    Math.min(gfc.thm[3].s[sb][sblock], mld));\n\n                mld = gfc.mld_s[sb] * gfc.en[2].s[sb][sblock];\n                var rside = Math.max(gfc.thm[3].s[sb][sblock],\n                    Math.min(gfc.thm[2].s[sb][sblock], mld));\n\n                gfc.thm[2].s[sb][sblock] = rmid;\n                gfc.thm[3].s[sb][sblock] = rside;\n            }\n        }\n    }\n\n    /**\n     * Adjust M/S maskings if user set \"msfix\"\n     *\n     * Naoki Shibata 2000\n     */\n    function ns_msfix(gfc, msfix, athadjust) {\n        var msfix2 = msfix;\n        var athlower = Math.pow(10, athadjust);\n\n        msfix *= 2.0;\n        msfix2 *= 2.0;\n        for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n            var thmLR, thmM, thmS, ath;\n            ath = (gfc.ATH.cb_l[gfc.bm_l[sb]]) * athlower;\n            thmLR = Math.min(Math.max(gfc.thm[0].l[sb], ath),\n                Math.max(gfc.thm[1].l[sb], ath));\n            thmM = Math.max(gfc.thm[2].l[sb], ath);\n            thmS = Math.max(gfc.thm[3].l[sb], ath);\n            if (thmLR * msfix < thmM + thmS) {\n                var f = thmLR * msfix2 / (thmM + thmS);\n                thmM *= f;\n                thmS *= f;\n                assert$3(thmM + thmS > 0);\n            }\n            gfc.thm[2].l[sb] = Math.min(thmM, gfc.thm[2].l[sb]);\n            gfc.thm[3].l[sb] = Math.min(thmS, gfc.thm[3].l[sb]);\n        }\n\n        athlower *= ( Encoder_1.BLKSIZE_s / Encoder_1.BLKSIZE);\n        for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thmLR, thmM, thmS, ath;\n                ath = (gfc.ATH.cb_s[gfc.bm_s[sb]]) * athlower;\n                thmLR = Math.min(Math.max(gfc.thm[0].s[sb][sblock], ath),\n                    Math.max(gfc.thm[1].s[sb][sblock], ath));\n                thmM = Math.max(gfc.thm[2].s[sb][sblock], ath);\n                thmS = Math.max(gfc.thm[3].s[sb][sblock], ath);\n\n                if (thmLR * msfix < thmM + thmS) {\n                    var f = thmLR * msfix / (thmM + thmS);\n                    thmM *= f;\n                    thmS *= f;\n                    assert$3(thmM + thmS > 0);\n                }\n                gfc.thm[2].s[sb][sblock] = Math.min(gfc.thm[2].s[sb][sblock],\n                    thmM);\n                gfc.thm[3].s[sb][sblock] = Math.min(gfc.thm[3].s[sb][sblock],\n                    thmS);\n            }\n        }\n    }\n\n    /**\n     * short block threshold calculation (part 2)\n     *\n     * partition band bo_s[sfb] is at the transition from scalefactor band sfb\n     * to the next one sfb+1; enn and thmm have to be split between them\n     */\n    function convert_partition2scalefac_s(gfc, eb, thr, chn, sblock) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder_1.SBMAX_s; ++b, ++sb) {\n            var bo_s_sb = gfc.bo_s[sb];\n            var npart_s = gfc.npart_s;\n            var b_lim = bo_s_sb < npart_s ? bo_s_sb : npart_s;\n            while (b < b_lim) {\n                assert$3(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert$3(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].s[sb][sblock] = enn;\n            gfc.thm[chn].s[sb][sblock] = thmm;\n\n            if (b >= npart_s) {\n                ++sb;\n                break;\n            }\n            assert$3(eb[b] >= 0);\n            // iff failed, it may indicate some index error elsewhere\n            assert$3(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_s_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].s[sb][sblock] += enn;\n                gfc.thm[chn].s[sb][sblock] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder_1.SBMAX_s; ++sb) {\n            gfc.en[chn].s[sb][sblock] = 0;\n            gfc.thm[chn].s[sb][sblock] = 0;\n        }\n    }\n\n    /**\n     * longblock threshold calculation (part 2)\n     */\n    function convert_partition2scalefac_l(gfc, eb, thr, chn) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder_1.SBMAX_l; ++b, ++sb) {\n            var bo_l_sb = gfc.bo_l[sb];\n            var npart_l = gfc.npart_l;\n            var b_lim = bo_l_sb < npart_l ? bo_l_sb : npart_l;\n            while (b < b_lim) {\n                assert$3(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert$3(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].l[sb] = enn;\n            gfc.thm[chn].l[sb] = thmm;\n\n            if (b >= npart_l) {\n                ++sb;\n                break;\n            }\n            assert$3(eb[b] >= 0);\n            assert$3(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_l_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].l[sb] += enn;\n                gfc.thm[chn].l[sb] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder_1.SBMAX_l; ++sb) {\n            gfc.en[chn].l[sb] = 0;\n            gfc.thm[chn].l[sb] = 0;\n        }\n    }\n\n    function compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var j, b;\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (var i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n        }\n        assert$3(b == gfc.npart_s);\n        assert$3(j == 129);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var ecb = gfc.s3_ss[j++] * eb[kk];\n            ++kk;\n            while (kk <= gfc.s3ind_s[b][1]) {\n                ecb += gfc.s3_ss[j] * eb[kk];\n                ++j;\n                ++kk;\n            }\n\n            { /* limit calculated threshold by previous granule */\n                var x = rpelev_s * gfc.nb_s1[chn][b];\n                thr[b] = Math.min(ecb, x);\n            }\n            if (gfc.blocktype_old[chn & 1] == Encoder_1.SHORT_TYPE) {\n                /* limit calculated threshold by even older granule */\n                var x = rpelev2_s * gfc.nb_s2[chn][b];\n                var y = thr[b];\n                thr[b] = Math.min(x, y);\n            }\n\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            assert$3(thr[b] >= 0);\n        }\n        for (; b <= Encoder_1.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function block_type_set(gfp, uselongblock, blocktype_d, blocktype) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock$3.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            blocktype[chn] = Encoder_1.NORM_TYPE;\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock$3.short_block_dispensed)\n                uselongblock[chn] = 1;\n            if (gfp.short_blocks == ShortBlock$3.short_block_forced)\n                uselongblock[chn] = 0;\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert$3(gfc.blocktype_old[chn] != Encoder_1.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder_1.SHORT_TYPE)\n                    blocktype[chn] = Encoder_1.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype[chn] = Encoder_1.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder_1.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder_1.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder_1.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder_1.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype[chn];\n            // save for next call to l3psy_anal\n        }\n    }\n\n    function NS_INTERP(x, y, r) {\n        /* was pow((x),(r))*pow((y),1-(r)) */\n        if (r >= 1.0) {\n            /* 99.7% of the time */\n            return x;\n        }\n        if (r <= 0.0)\n            return y;\n        if (y > 0.0) {\n            /* rest of the time */\n            return (Math.pow(x / y, r) * y);\n        }\n        /* never happens */\n        return 0.0;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_s = [11.8, 13.6, 17.2, 32, 46.5,\n        51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130,\n        /* 255.8 */\n    ];\n\n    function pecalc_s(mr, masking_lower) {\n        var pe_s = 1236.28 / 4;\n        for (var sb = 0; sb < Encoder_1.SBMAX_s - 1; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thm = mr.thm.s[sb][sblock];\n                assert$3(sb < regcoef_s.length);\n                if (thm > 0.0) {\n                    var x = thm * masking_lower;\n                    var en = mr.en.s[sb][sblock];\n                    if (en > x) {\n                        if (en > x * 1e10) {\n                            pe_s += regcoef_s[sb] * (10.0 * LOG10);\n                        } else {\n                            assert$3(x > 0);\n                            pe_s += regcoef_s[sb] * Util$3.FAST_LOG10(en / x);\n                        }\n                    }\n                }\n            }\n        }\n\n        return pe_s;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_l = [6.8, 5.8, 5.8, 6.4, 6.5, 9.9,\n        12.1, 14.4, 15, 18.9, 21.6, 26.9, 34.2, 40.2, 46.8, 56.5,\n        60.7, 73.9, 85.7, 93.4, 126.1,\n        /* 241.3 */\n    ];\n\n    function pecalc_l(mr, masking_lower) {\n        var pe_l = 1124.23 / 4;\n        for (var sb = 0; sb < Encoder_1.SBMAX_l - 1; sb++) {\n            var thm = mr.thm.l[sb];\n            assert$3(sb < regcoef_l.length);\n            if (thm > 0.0) {\n                var x = thm * masking_lower;\n                var en = mr.en.l[sb];\n                if (en > x) {\n                    if (en > x * 1e10) {\n                        pe_l += regcoef_l[sb] * (10.0 * LOG10);\n                    } else {\n                        assert$3(x > 0);\n                        pe_l += regcoef_l[sb] * Util$3.FAST_LOG10(en / x);\n                    }\n                }\n            }\n        }\n        return pe_l;\n    }\n\n    function calc_energy(gfc, fftenergy, eb, max, avg) {\n        var b, j;\n\n        for (b = j = 0; b < gfc.npart_l; ++b) {\n            var ebb = 0, m = 0;\n            var i;\n            for (i = 0; i < gfc.numlines_l[b]; ++i, ++j) {\n                var el = fftenergy[j];\n                assert$3(el >= 0);\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            max[b] = m;\n            avg[b] = ebb * gfc.rnumlines_l[b];\n            assert$3(gfc.rnumlines_l[b] >= 0);\n            assert$3(ebb >= 0);\n            assert$3(eb[b] >= 0);\n            assert$3(max[b] >= 0);\n            assert$3(avg[b] >= 0);\n        }\n    }\n\n    function calc_mask_index_l(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert$3((gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_l - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert$3(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert$3((gfc.numlines_l[b - 1] + gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b]\n                    + gfc.numlines_l[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert$3(b > 0);\n        assert$3(b == gfc.npart_l - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert$3((gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert$3(b == (gfc.npart_l - 1));\n    }\n\n    var fircoef = [\n        -8.65163e-18 * 2, -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2, 0.0931738 * 2,\n        -5.52212e-17 * 2, -0.313819 * 2\n    ];\n\n    this.L3psycho_anal_ns = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        /*\n         * to get a good cache performance, one has to think about the sequence,\n         * in which the variables are used.\n         */\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_L = new_float_n$3([2, Encoder_1.BLKSIZE]);\n        var wsamp_S = new_float_n$3([2, 3, Encoder_1.BLKSIZE_s]);\n\n        /* convolution */\n        var eb_l = new_float$3(Encoder_1.CBANDS + 1);\n        var eb_s = new_float$3(Encoder_1.CBANDS + 1);\n        var thr = new_float$3(Encoder_1.CBANDS + 2);\n\n        /* block type */\n        var blocktype = new_int$3(2), uselongblock = new_int$3(2);\n\n        /* usual variables like loop indices, etc.. */\n        var numchn, chn;\n        var b, i, j, k;\n        var sb, sblock;\n\n        /* variables used for --nspsytune */\n        var ns_hpfsmpl = new_float_n$3([2, 576]);\n        var pcfact;\n        var mask_idx_l = new_int$3(Encoder_1.CBANDS + 2), mask_idx_s = new_int$3(Encoder_1.CBANDS + 2);\n\n        Arrays$3.fill(mask_idx_s, 0);\n\n        numchn = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        if (gfp.mode == MPEGMode.JOINT_STEREO)\n            numchn = 4;\n\n        if (gfp.VBR == VbrMode$3.vbr_off)\n            pcfact = gfc.ResvMax == 0 ? 0 : ( gfc.ResvSize)\n            / gfc.ResvMax * 0.5;\n        else if (gfp.VBR == VbrMode$3.vbr_rh || gfp.VBR == VbrMode$3.vbr_mtrh\n            || gfp.VBR == VbrMode$3.vbr_mt) {\n            pcfact = 0.6;\n        } else\n            pcfact = 1.0;\n\n        /**********************************************************************\n         * Apply HPF of fs/4 to the input signal. This is used for attack\n         * detection / handling.\n         **********************************************************************/\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (chn = 0; chn < gfc.channels_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            var firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert$3(fircoef.length == ((NSFIRLEN - 1) / 2));\n            for (i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (numchn > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n\n        for (chn = 0; chn < numchn; chn++) {\n            var wsamp_l;\n            var wsamp_s;\n            var en_subshort = new_float$3(12);\n            var en_short = [0, 0, 0, 0];\n            var attack_intensity = new_float$3(12);\n            var ns_uselongblock = 1;\n            var attackThreshold;\n            var max = new_float$3(Encoder_1.CBANDS), avg = new_float$3(Encoder_1.CBANDS);\n            var ns_attacks = [0, 0, 0, 0];\n            var fftenergy = new_float$3(Encoder_1.HBLKSIZE);\n            var fftenergy_s = new_float_n$3([3, Encoder_1.HBLKSIZE_s]);\n\n            /*\n             * rh 20040301: the following loops do access one off the limits so\n             * I increase the array dimensions by one and initialize the\n             * accessed values to zero\n             */\n            assert$3(gfc.npart_s <= Encoder_1.CBANDS);\n            assert$3(gfc.npart_l <= Encoder_1.CBANDS);\n\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert$3(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            if (chn == 2) {\n                for (i = 0; i < 576; i++) {\n                    var l, r;\n                    l = ns_hpfsmpl[0][i];\n                    r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            {\n                var pf = ns_hpfsmpl[chn & 1];\n                var pfPos = 0;\n                for (i = 0; i < 9; i++) {\n                    var pfe = pfPos + 576 / 9;\n                    var p = 1.;\n                    for (; pfPos < pfe; pfPos++)\n                        if (p < Math.abs(pf[pfPos]))\n                            p = Math.abs(pf[pfPos]);\n\n                    gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                    en_short[1 + i / 3] += p;\n                    if (p > en_subshort[i + 3 - 2]) {\n                        assert$3(en_subshort[i + 3 - 2] > 0);\n                        p = p / en_subshort[i + 3 - 2];\n                    } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                        assert$3(p > 0);\n                        p = en_subshort[i + 3 - 2] / (p * 10.0);\n                    } else\n                        p = 0.0;\n                    attack_intensity[i + 3] = p;\n                }\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (i = 1; i < 12; i++)\n                    if (x < attack_intensity[i])\n                        x = attack_intensity[i];\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            for (i = 0; i < 12; i++)\n                if (0 == ns_attacks[i / 3]\n                    && attack_intensity[i] > attackThreshold)\n                    ns_attacks[i / 3] = (i % 3) + 1;\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            for (i = 1; i < 4; i++) {\n                var ratio;\n                if (en_short[i - 1] > en_short[i]) {\n                    assert$3(en_short[i] > 0);\n                    ratio = en_short[i - 1] / en_short[i];\n                } else {\n                    assert$3(en_short[i - 1] > 0);\n                    ratio = en_short[i] / en_short[i - 1];\n                }\n                if (ratio < 1.7) {\n                    ns_attacks[i] = 0;\n                    if (i == 1)\n                        ns_attacks[0] = 0;\n                }\n            }\n\n            if (ns_attacks[0] != 0 && gfc.nsPsy.lastAttacks[chn] != 0)\n                ns_attacks[0] = 0;\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[0] + ns_attacks[1] + ns_attacks[2] + ns_attacks[3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[1] != 0 && ns_attacks[0] != 0)\n                    ns_attacks[1] = 0;\n                if (ns_attacks[2] != 0 && ns_attacks[1] != 0)\n                    ns_attacks[2] = 0;\n                if (ns_attacks[3] != 0 && ns_attacks[2] != 0)\n                    ns_attacks[3] = 0;\n            }\n\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n\n            /*********************************************************************\n             * compute FFTs\n             *********************************************************************/\n            wsamp_s = wsamp_S;\n            wsamp_l = wsamp_L;\n            compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, (chn & 1),\n                wsamp_s, (chn & 1), gr_out, chn, buffer, bufPos);\n\n            /*********************************************************************\n             * Calculate the energy and the tonality of each partition.\n             *********************************************************************/\n            calc_energy(gfc, fftenergy, eb_l, max, avg);\n            calc_mask_index_l(gfc, max, avg, mask_idx_l);\n            /* compute masking thresholds for short blocks */\n            for (sblock = 0; sblock < 3; sblock++) {\n                var enn, thmm;\n                compute_masking_s(gfp, fftenergy_s, eb_s, thr, chn, sblock);\n                convert_partition2scalefac_s(gfc, eb_s, thr, chn, sblock);\n                /**** short block pre-echo control ****/\n                for (sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    thmm = gfc.thm[chn].s[sb][sblock];\n\n                    thmm *= NS_PREECHO_ATT0;\n                    if (ns_attacks[sblock] >= 2 || ns_attacks[sblock + 1] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT1 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    if (ns_attacks[sblock] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    } else if ((sblock != 0 && ns_attacks[sblock - 1] == 3)\n                        || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                        var idx = (sblock != 2) ? sblock + 1 : 0;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    /* pulse like signal detection for fatboy.wav and so on */\n                    enn = en_subshort[sblock * 3 + 3]\n                        + en_subshort[sblock * 3 + 4]\n                        + en_subshort[sblock * 3 + 5];\n                    if (en_subshort[sblock * 3 + 5] * 6 < enn) {\n                        thmm *= 0.5;\n                        if (en_subshort[sblock * 3 + 4] * 6 < enn)\n                            thmm *= 0.5;\n                    }\n\n                    gfc.thm[chn].s[sb][sblock] = thmm;\n                }\n            }\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[2];\n\n            /*********************************************************************\n             * convolve the partitioned energy and unpredictability with the\n             * spreading function, s3_l[b][k]\n             ********************************************************************/\n            k = 0;\n            {\n                for (b = 0; b < gfc.npart_l; b++) {\n                    /*\n                     * convolve the partitioned energy with the spreading\n                     * function\n                     */\n                    var kk = gfc.s3ind[b][0];\n                    var eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                    var ecb = gfc.s3_ll[k++] * eb2;\n                    while (++kk <= gfc.s3ind[b][1]) {\n                        eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                        ecb = mask_add(ecb, gfc.s3_ll[k++] * eb2, kk, kk - b,\n                            gfc, 0);\n                    }\n                    ecb *= 0.158489319246111;\n                    /* pow(10,-0.8) */\n\n                    /**** long block pre-echo control ****/\n                    /**\n                     * <PRE>\n                     * dont use long block pre-echo control if previous granule was\n                     * a short block.  This is to avoid the situation:\n                     * frame0:  quiet (very low masking)\n                     * frame1:  surge  (triggers short blocks)\n                     * frame2:  regular frame.  looks like pre-echo when compared to\n                     *          frame0, but all pre-echo was in frame1.\n                     * </PRE>\n                     */\n                    /*\n                     * chn=0,1 L and R channels\n                     *\n                     * chn=2,3 S and M channels.\n                     */\n\n                    if (gfc.blocktype_old[chn & 1] == Encoder_1.SHORT_TYPE)\n                        thr[b] = ecb;\n                    else\n                        thr[b] = NS_INTERP(\n                            Math.min(ecb, Math.min(rpelev\n                                * gfc.nb_1[chn][b], rpelev2\n                                * gfc.nb_2[chn][b])), ecb, pcfact);\n\n                    gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n                    gfc.nb_1[chn][b] = ecb;\n                }\n            }\n            for (; b <= Encoder_1.CBANDS; ++b) {\n                eb_l[b] = 0;\n                thr[b] = 0;\n            }\n            /* compute masking thresholds for long blocks */\n            convert_partition2scalefac_l(gfc, eb_l, thr, chn);\n        }\n        /* end loop over chn */\n\n        if (gfp.mode == MPEGMode.STEREO || gfp.mode == MPEGMode.JOINT_STEREO) {\n            if (gfp.interChRatio > 0.0) {\n                calc_interchannel_masking(gfp, gfp.interChRatio);\n            }\n        }\n\n        if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            var msfix;\n            msfix1(gfc);\n            msfix = gfp.msfix;\n            if (Math.abs(msfix) > 0.0)\n                ns_msfix(gfc, msfix, gfp.ATHlower * gfc.ATH.adjust);\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        block_type_set(gfp, uselongblock, blocktype_d, blocktype);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (chn = 0; chn < numchn; chn++) {\n            var ppe;\n            var ppePos = 0;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder_1.NORM_TYPE;\n                if (blocktype_d[0] == Encoder_1.SHORT_TYPE\n                    || blocktype_d[1] == Encoder_1.SHORT_TYPE)\n                    type = Encoder_1.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder_1.SHORT_TYPE)\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            else\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n\n            if (gfp.analysis)\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n\n        }\n        return 0;\n    };\n\n    function vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out, fftenergy, wsamp_l, wsamp_lPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n        } else if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder_1.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder_1.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = wsamp_l[wsamp_lPos + 0][Encoder_1.BLKSIZE / 2 - j];\n            var im = wsamp_l[wsamp_lPos + 0][Encoder_1.BLKSIZE / 2 + j];\n            fftenergy[Encoder_1.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder_1.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder_1.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n    }\n\n    function vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock, fftenergy_s, wsamp_s, wsamp_sPos) {\n        var gfc = gfp.internal_flags;\n\n        if (sblock == 0 && chn < 2) {\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder_1.BLKSIZE_s - 1; j >= 0; --j) {\n                var l = wsamp_s[wsamp_sPos + 0][sblock][j];\n                var r = wsamp_s[wsamp_sPos + 1][sblock][j];\n                wsamp_s[wsamp_sPos + 0][sblock][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_s[wsamp_sPos + 1][sblock][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy_s[sblock][0] = wsamp_s[wsamp_sPos + 0][sblock][0];\n        fftenergy_s[sblock][0] *= fftenergy_s[sblock][0];\n        for (var j = Encoder_1.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n            var re = wsamp_s[wsamp_sPos + 0][sblock][Encoder_1.BLKSIZE_s / 2 - j];\n            var im = wsamp_s[wsamp_sPos + 0][sblock][Encoder_1.BLKSIZE_s / 2 + j];\n            fftenergy_s[sblock][Encoder_1.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n    }\n\n    /**\n     * compute loudness approximation (used for ATH auto-level adjustment)\n     */\n    function vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn, fftenergy) {\n        var gfc = gfp.internal_flags;\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    var fircoef_ = [-8.65163e-18 * 2,\n        -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2,\n        0.0931738 * 2, -5.52212e-17 * 2, -0.313819 * 2];\n\n    /**\n     * Apply HPF of fs/4 to the input signal. This is used for attack detection\n     * / handling.\n     */\n    function vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, energy, sub_short_factor, ns_attacks, uselongblock) {\n        var ns_hpfsmpl = new_float_n$3([2, 576]);\n        var gfc = gfp.internal_flags;\n        var n_chn_out = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4 : n_chn_out;\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (var chn = 0; chn < n_chn_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert$3(fircoef_.length == ((NSFIRLEN - 1) / 2));\n            for (var i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (var j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef_[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef_[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (n_chn_psy > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var attack_intensity = new_float$3(12);\n            var en_subshort = new_float$3(12);\n            var en_short = [0, 0, 0, 0];\n            var pf = ns_hpfsmpl[chn & 1];\n            var pfPos = 0;\n            var attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            var ns_uselongblock = 1;\n\n            if (chn == 2) {\n                for (var i = 0, j = 576; j > 0; ++i, --j) {\n                    var l = ns_hpfsmpl[0][i];\n                    var r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (var i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert$3(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            for (var i = 0; i < 9; i++) {\n                var pfe = pfPos + 576 / 9;\n                var p = 1.;\n                for (; pfPos < pfe; pfPos++)\n                    if (p < Math.abs(pf[pfPos]))\n                        p = Math.abs(pf[pfPos]);\n\n                gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                en_short[1 + i / 3] += p;\n                if (p > en_subshort[i + 3 - 2]) {\n                    assert$3(en_subshort[i + 3 - 2] > 0);\n                    p = p / en_subshort[i + 3 - 2];\n                } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                    assert$3(p > 0);\n                    p = en_subshort[i + 3 - 2] / (p * 10.0);\n                } else {\n                    p = 0.0;\n                }\n                attack_intensity[i + 3] = p;\n            }\n            /* pulse like signal detection for fatboy.wav and so on */\n            for (var i = 0; i < 3; ++i) {\n                var enn = en_subshort[i * 3 + 3]\n                    + en_subshort[i * 3 + 4] + en_subshort[i * 3 + 5];\n                var factor = 1.;\n                if (en_subshort[i * 3 + 5] * 6 < enn) {\n                    factor *= 0.5;\n                    if (en_subshort[i * 3 + 4] * 6 < enn) {\n                        factor *= 0.5;\n                    }\n                }\n                sub_short_factor[chn][i] = factor;\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (var i = 1; i < 12; i++) {\n                    if (x < attack_intensity[i]) {\n                        x = attack_intensity[i];\n                    }\n                }\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            for (var i = 0; i < 12; i++) {\n                if (0 == ns_attacks[chn][i / 3]\n                    && attack_intensity[i] > attackThreshold) {\n                    ns_attacks[chn][i / 3] = (i % 3) + 1;\n                }\n            }\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            /* Good samples to show the effect are Trumpet test songs */\n            /*\n             * GB: tuned (1) to avoid too many short blocks for test sample\n             * TRUMPET\n             */\n            /*\n             * RH: tuned (2) to let enough short blocks through for test sample\n             * FSOL and SNAPS\n             */\n            for (var i = 1; i < 4; i++) {\n                var u = en_short[i - 1];\n                var v = en_short[i];\n                var m = Math.max(u, v);\n                if (m < 40000) { /* (2) */\n                    if (u < 1.7 * v && v < 1.7 * u) { /* (1) */\n                        if (i == 1 && ns_attacks[chn][0] <= ns_attacks[chn][i]) {\n                            ns_attacks[chn][0] = 0;\n                        }\n                        ns_attacks[chn][i] = 0;\n                    }\n                }\n            }\n\n            if (ns_attacks[chn][0] <= gfc.nsPsy.lastAttacks[chn]) {\n                ns_attacks[chn][0] = 0;\n            }\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[chn][0] + ns_attacks[chn][1]\n                + ns_attacks[chn][2] + ns_attacks[chn][3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[chn][1] != 0 && ns_attacks[chn][0] != 0) {\n                    ns_attacks[chn][1] = 0;\n                }\n                if (ns_attacks[chn][2] != 0 && ns_attacks[chn][1] != 0) {\n                    ns_attacks[chn][2] = 0;\n                }\n                if (ns_attacks[chn][3] != 0 && ns_attacks[chn][2] != 0) {\n                    ns_attacks[chn][3] = 0;\n                }\n            }\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n        }\n    }\n\n    function vbrpsy_skip_masking_s(gfc, chn, sblock) {\n        if (sblock == 0) {\n            for (var b = 0; b < gfc.npart_s; b++) {\n                gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n                gfc.nb_s1[chn][b] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_skip_masking_l(gfc, chn) {\n        for (var b = 0; b < gfc.npart_l; b++) {\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = 0;\n        }\n    }\n\n    function psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert$3((gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_s - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert$3(b + 1 < gfc.npart_s);\n            assert$3(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert$3((gfc.numlines_s[b - 1] + gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b]\n                    + gfc.numlines_s[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert$3(b > 0);\n        assert$3(b == gfc.npart_s - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert$3((gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert$3(b == (gfc.npart_s - 1));\n    }\n\n    function vbrpsy_compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var max = new float[Encoder_1.CBANDS], avg = new_float$3(Encoder_1.CBANDS);\n        var i, j, b;\n        var mask_idx_s = new int[Encoder_1.CBANDS];\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            assert$3(ebb >= 0);\n            max[b] = m;\n            assert$3(n > 0);\n            avg[b] = ebb / n;\n            assert$3(avg[b] >= 0);\n        }\n        assert$3(b == gfc.npart_s);\n        assert$3(j == 129);\n        for (; b < Encoder_1.CBANDS; ++b) {\n            max[b] = 0;\n            avg[b] = 0;\n        }\n        psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx_s);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var last = gfc.s3ind_s[b][1];\n            var dd, dd_n;\n            var x, ecb, avg_mask;\n            dd = mask_idx_s[kk];\n            dd_n = 1;\n            ecb = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n            ++j;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_s[kk];\n                dd_n += 1;\n                x = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n                ecb = vbrpsy_mask_add(ecb, x, kk - b);\n                ++j;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n            thr[b] = ecb;\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_s[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb[b]) {\n                thr[b] = eb[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n\n            assert$3(thr[b] >= 0);\n        }\n        for (; b < Encoder_1.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_masking_l(gfc, fftenergy, eb_l, thr, chn) {\n        var max = new_float$3(Encoder_1.CBANDS), avg = new_float$3(Encoder_1.CBANDS);\n        var mask_idx_l = new_int$3(Encoder_1.CBANDS + 2);\n        var b;\n\n        /*********************************************************************\n         * Calculate the energy and the tonality of each partition.\n         *********************************************************************/\n        calc_energy(gfc, fftenergy, eb_l, max, avg);\n        calc_mask_index_l(gfc, max, avg, mask_idx_l);\n\n        /*********************************************************************\n         * convolve the partitioned energy and unpredictability with the\n         * spreading function, s3_l[b][k]\n         ********************************************************************/\n        var k = 0;\n        for (b = 0; b < gfc.npart_l; b++) {\n            var x, ecb, avg_mask, t;\n            /* convolve the partitioned energy with the spreading function */\n            var kk = gfc.s3ind[b][0];\n            var last = gfc.s3ind[b][1];\n            var dd = 0, dd_n = 0;\n            dd = mask_idx_l[kk];\n            dd_n += 1;\n            ecb = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n            ++k;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_l[kk];\n                dd_n += 1;\n                x = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n                t = vbrpsy_mask_add(ecb, x, kk - b);\n                ecb = t;\n                ++k;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n\n            /**** long block pre-echo control ****/\n            /**\n             * <PRE>\n             * dont use long block pre-echo control if previous granule was\n             * a short block.  This is to avoid the situation:\n             * frame0:  quiet (very low masking)\n             * frame1:  surge  (triggers short blocks)\n             * frame2:  regular frame.  looks like pre-echo when compared to\n             *          frame0, but all pre-echo was in frame1.\n             * </PRE>\n             */\n            /*\n             * chn=0,1 L and R channels chn=2,3 S and M channels.\n             */\n            if (gfc.blocktype_old[chn & 0x01] == Encoder_1.SHORT_TYPE) {\n                var ecb_limit = rpelev * gfc.nb_1[chn][b];\n                if (ecb_limit > 0) {\n                    thr[b] = Math.min(ecb, ecb_limit);\n                } else {\n                    /**\n                     * <PRE>\n                     * Robert 071209:\n                     * Because we don't calculate long block psy when we know a granule\n                     * should be of short blocks, we don't have any clue how the granule\n                     * before would have looked like as a long block. So we have to guess\n                     * a little bit for this END_TYPE block.\n                     * Most of the time we get away with this sloppyness. (fingers crossed :)\n                     * The speed increase is worth it.\n                     * </PRE>\n                     */\n                    thr[b] = Math.min(ecb, eb_l[b] * NS_PREECHO_ATT2);\n                }\n            } else {\n                var ecb_limit_2 = rpelev2 * gfc.nb_2[chn][b];\n                var ecb_limit_1 = rpelev * gfc.nb_1[chn][b];\n                var ecb_limit;\n                if (ecb_limit_2 <= 0) {\n                    ecb_limit_2 = ecb;\n                }\n                if (ecb_limit_1 <= 0) {\n                    ecb_limit_1 = ecb;\n                }\n                if (gfc.blocktype_old[chn & 0x01] == Encoder_1.NORM_TYPE) {\n                    ecb_limit = Math.min(ecb_limit_1, ecb_limit_2);\n                } else {\n                    ecb_limit = ecb_limit_1;\n                }\n                thr[b] = Math.min(ecb, ecb_limit);\n            }\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_l[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb_l[b]) {\n                thr[b] = eb_l[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            assert$3(thr[b] >= 0);\n        }\n        for (; b < Encoder_1.CBANDS; ++b) {\n            eb_l[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_block_type(gfp, uselongblock) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock$3.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock$3.short_block_dispensed) {\n                uselongblock[chn] = 1;\n            }\n            if (gfp.short_blocks == ShortBlock$3.short_block_forced) {\n                uselongblock[chn] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            var blocktype = Encoder_1.NORM_TYPE;\n            /* disable short blocks */\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert$3(gfc.blocktype_old[chn] != Encoder_1.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder_1.SHORT_TYPE)\n                    blocktype = Encoder_1.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype = Encoder_1.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder_1.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder_1.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder_1.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder_1.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype;\n            // save for next call to l3psy_anal\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function vbrpsy_compute_MS_thresholds(eb, thr, cb_mld, ath_cb, athadjust, msfix, n) {\n        var msfix2 = msfix * 2;\n        var athlower = msfix > 0 ? Math.pow(10, athadjust) : 1;\n        var rside, rmid;\n        for (var b = 0; b < n; ++b) {\n            var ebM = eb[2][b];\n            var ebS = eb[3][b];\n            var thmL = thr[0][b];\n            var thmR = thr[1][b];\n            var thmM = thr[2][b];\n            var thmS = thr[3][b];\n\n            /* use this fix if L & R masking differs by 2db or less */\n            if (thmL <= 1.58 * thmR && thmR <= 1.58 * thmL) {\n                var mld_m = cb_mld[b] * ebS;\n                var mld_s = cb_mld[b] * ebM;\n                rmid = Math.max(thmM, Math.min(thmS, mld_m));\n                rside = Math.max(thmS, Math.min(thmM, mld_s));\n            } else {\n                rmid = thmM;\n                rside = thmS;\n            }\n            if (msfix > 0) {\n                /***************************************************************/\n                /* Adjust M/S maskings if user set \"msfix\" */\n                /***************************************************************/\n                /* Naoki Shibata 2000 */\n                var thmLR, thmMS;\n                var ath = ath_cb[b] * athlower;\n                thmLR = Math.min(Math.max(thmL, ath), Math.max(thmR, ath));\n                thmM = Math.max(rmid, ath);\n                thmS = Math.max(rside, ath);\n                thmMS = thmM + thmS;\n                if (thmMS > 0 && (thmLR * msfix2) < thmMS) {\n                    var f = thmLR * msfix2 / thmMS;\n                    thmM *= f;\n                    thmS *= f;\n                    assert$3(thmMS > 0);\n                }\n                rmid = Math.min(thmM, rmid);\n                rside = Math.min(thmS, rside);\n            }\n            if (rmid > ebM) {\n                rmid = ebM;\n            }\n            if (rside > ebS) {\n                rside = ebS;\n            }\n            thr[2][b] = rmid;\n            thr[3][b] = rside;\n        }\n    }\n\n    this.L3psycho_anal_vbr = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_l;\n        var wsamp_s;\n        var fftenergy = new_float$3(Encoder_1.HBLKSIZE);\n        var fftenergy_s = new_float_n$3([3, Encoder_1.HBLKSIZE_s]);\n        var wsamp_L = new_float_n$3([2, Encoder_1.BLKSIZE]);\n        var wsamp_S = new_float_n$3([2, 3, Encoder_1.BLKSIZE_s]);\n        var eb = new_float_n$3([4, Encoder_1.CBANDS]), thr = new_float_n$3([4, Encoder_1.CBANDS]);\n        var sub_short_factor = new_float_n$3([4, 3]);\n        var pcfact = 0.6;\n\n        /* block type */\n        var ns_attacks = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\n            [0, 0, 0, 0]];\n        var uselongblock = new_int$3(2);\n\n        /* usual variables like loop indices, etc.. */\n\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4\n            : gfc.channels_out;\n\n        vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio,\n            masking_MS_ratio, energy, sub_short_factor, ns_attacks,\n            uselongblock);\n\n        vbrpsy_compute_block_type(gfp, uselongblock);\n\n        /* LONG BLOCK CASE */\n        {\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                wsamp_l = wsamp_L;\n                vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out,\n                    fftenergy, wsamp_l, ch01);\n\n                vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn,\n                    fftenergy);\n\n                if (uselongblock[ch01] != 0) {\n                    vbrpsy_compute_masking_l(gfc, fftenergy, eb[chn], thr[chn],\n                        chn);\n                } else {\n                    vbrpsy_skip_masking_l(gfc, chn);\n                }\n            }\n            if ((uselongblock[0] + uselongblock[1]) == 2) {\n                /* M/S channel */\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_l,\n                        gfc.ATH.cb_l, gfp.ATHlower * gfc.ATH.adjust,\n                        gfp.msfix, gfc.npart_l);\n                }\n            }\n            /* TODO: apply adaptive ATH masking here ?? */\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                if (uselongblock[ch01] != 0) {\n                    convert_partition2scalefac_l(gfc, eb[chn], thr[chn], chn);\n                }\n            }\n        }\n\n        /* SHORT BLOCKS CASE */\n        {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n\n                    if (uselongblock[ch01] != 0) {\n                        vbrpsy_skip_masking_s(gfc, chn, sblock);\n                    } else {\n                        /* compute masking thresholds for short blocks */\n                        wsamp_s = wsamp_S;\n                        vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock,\n                            fftenergy_s, wsamp_s, ch01);\n                        vbrpsy_compute_masking_s(gfp, fftenergy_s, eb[chn],\n                            thr[chn], chn, sblock);\n                    }\n                }\n                if ((uselongblock[0] + uselongblock[1]) == 0) {\n                    /* M/S channel */\n                    if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                        vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_s,\n                            gfc.ATH.cb_s, gfp.ATHlower * gfc.ATH.adjust,\n                            gfp.msfix, gfc.npart_s);\n                    }\n                    /* L/R channel */\n                }\n                /* TODO: apply adaptive ATH masking here ?? */\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n                    if (0 == uselongblock[ch01]) {\n                        convert_partition2scalefac_s(gfc, eb[chn], thr[chn],\n                            chn, sblock);\n                    }\n                }\n            }\n\n            /**** short block pre-echo control ****/\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n\n                if (uselongblock[ch01] != 0) {\n                    continue;\n                }\n                for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    var new_thmm = new_float$3(3);\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        var thmm = gfc.thm[chn].s[sb][sblock];\n                        thmm *= NS_PREECHO_ATT0;\n\n                        if (ns_attacks[chn][sblock] >= 2\n                            || ns_attacks[chn][sblock + 1] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT1 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if (ns_attacks[chn][sblock] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if ((sblock != 0 && ns_attacks[chn][sblock - 1] == 3)\n                            || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                            var idx = (sblock != 2) ? sblock + 1 : 0;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        }\n\n                        /* pulse like signal detection for fatboy.wav and so on */\n                        thmm *= sub_short_factor[chn][sblock];\n\n                        new_thmm[sblock] = thmm;\n                    }\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        gfc.thm[chn].s[sb][sblock] = new_thmm[sblock];\n                    }\n                }\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[chn][2];\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var ppe;\n            var ppePos;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder_1.NORM_TYPE;\n                if (blocktype_d[0] == Encoder_1.SHORT_TYPE\n                    || blocktype_d[1] == Encoder_1.SHORT_TYPE)\n                    type = Encoder_1.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder_1.SHORT_TYPE) {\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            } else {\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n            }\n\n            if (gfp.analysis) {\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n            }\n        }\n        return 0;\n    };\n\n    function s3_func_x(bark, hf_slope) {\n        var tempx = bark, tempy;\n\n        if (tempx >= 0) {\n            tempy = -tempx * 27;\n        } else {\n            tempy = tempx * hf_slope;\n        }\n        if (tempy <= -72.0) {\n            return 0;\n        }\n        return Math.exp(tempy * LN_TO_LOG10);\n    }\n\n    function norm_s3_func_x(hf_slope) {\n        var lim_a = 0, lim_b = 0;\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x -= 1)\n                ;\n            l = x;\n            h = 0;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    h = x;\n                } else {\n                    l = x;\n                }\n            }\n            lim_a = l;\n        }\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x += 1)\n                ;\n            l = 0;\n            h = x;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    l = x;\n                } else {\n                    h = x;\n                }\n            }\n            lim_b = h;\n        }\n        {\n            var sum = 0;\n            var m = 1000;\n            var i;\n            for (i = 0; i <= m; ++i) {\n                var x = lim_a + i * (lim_b - lim_a) / m;\n                var y = s3_func_x(x, hf_slope);\n                sum += y;\n            }\n            {\n                var norm = (m + 1) / (sum * (lim_b - lim_a));\n                /* printf( \"norm = %lf\\n\",norm); */\n                return norm;\n            }\n        }\n    }\n\n    /**\n     *   The spreading function.  Values returned in units of energy\n     */\n    function s3_func(bark) {\n        var tempx, x, tempy, temp;\n        tempx = bark;\n        if (tempx >= 0)\n            tempx *= 3;\n        else\n            tempx *= 1.5;\n\n        if (tempx >= 0.5 && tempx <= 2.5) {\n            temp = tempx - 0.5;\n            x = 8.0 * (temp * temp - 2.0 * temp);\n        } else\n            x = 0.0;\n        tempx += 0.474;\n        tempy = 15.811389 + 7.5 * tempx - 17.5\n            * Math.sqrt(1.0 + tempx * tempx);\n\n        if (tempy <= -60.0)\n            return 0.0;\n\n        tempx = Math.exp((x + tempy) * LN_TO_LOG10);\n\n        /**\n         * <PRE>\n         * Normalization.  The spreading function should be normalized so that:\n         * +inf\n         * /\n         * |  s3 [ bark ]  d(bark)   =  1\n         * /\n         * -inf\n         * </PRE>\n         */\n        tempx /= .6609193;\n        return tempx;\n    }\n\n    /**\n     * see for example \"Zwicker: Psychoakustik, 1982; ISBN 3-540-11401-7\n     */\n    function freq2bark(freq) {\n        /* input: freq in hz output: barks */\n        if (freq < 0)\n            freq = 0;\n        freq = freq * 0.001;\n        return 13.0 * Math.atan(.76 * freq) + 3.5\n            * Math.atan(freq * freq / (7.5 * 7.5));\n    }\n\n    function init_numline(numlines, bo, bm, bval, bval_width, mld, bo_w, sfreq, blksize, scalepos, deltafreq, sbmax) {\n        var b_frq = new_float$3(Encoder_1.CBANDS + 1);\n        var sample_freq_frac = sfreq / (sbmax > 15 ? 2 * 576 : 2 * 192);\n        var partition = new_int$3(Encoder_1.HBLKSIZE);\n        var i;\n        sfreq /= blksize;\n        var j = 0;\n        var ni = 0;\n        /* compute numlines, the number of spectral lines in each partition band */\n        /* each partition band should be about DELBARK wide. */\n        for (i = 0; i < Encoder_1.CBANDS; i++) {\n            var bark1;\n            var j2;\n            bark1 = freq2bark(sfreq * j);\n\n            b_frq[i] = sfreq * j;\n\n            for (j2 = j; freq2bark(sfreq * j2) - bark1 < DELBARK\n            && j2 <= blksize / 2; j2++)\n                ;\n\n            numlines[i] = j2 - j;\n            ni = i + 1;\n\n            while (j < j2) {\n                assert$3(j < Encoder_1.HBLKSIZE);\n                partition[j++] = i;\n            }\n            if (j > blksize / 2) {\n                j = blksize / 2;\n                ++i;\n                break;\n            }\n        }\n        assert$3(i < Encoder_1.CBANDS);\n        b_frq[i] = sfreq * j;\n\n        for (var sfb = 0; sfb < sbmax; sfb++) {\n            var i1, i2, start, end;\n            var arg;\n            start = scalepos[sfb];\n            end = scalepos[sfb + 1];\n\n            i1 = 0 | Math.floor(.5 + deltafreq * (start - .5));\n            if (i1 < 0)\n                i1 = 0;\n            i2 = 0 | Math.floor(.5 + deltafreq * (end - .5));\n\n            if (i2 > blksize / 2)\n                i2 = blksize / 2;\n\n            bm[sfb] = (partition[i1] + partition[i2]) / 2;\n            bo[sfb] = partition[i2];\n            var f_tmp = sample_freq_frac * end;\n            /*\n             * calculate how much of this band belongs to current scalefactor\n             * band\n             */\n            bo_w[sfb] = (f_tmp - b_frq[bo[sfb]])\n                / (b_frq[bo[sfb] + 1] - b_frq[bo[sfb]]);\n            if (bo_w[sfb] < 0) {\n                bo_w[sfb] = 0;\n            } else {\n                if (bo_w[sfb] > 1) {\n                    bo_w[sfb] = 1;\n                }\n            }\n            /* setup stereo demasking thresholds */\n            /* formula reverse enginerred from plot in paper */\n            arg = freq2bark(sfreq * scalepos[sfb] * deltafreq);\n            arg = ( Math.min(arg, 15.5) / 15.5);\n\n            mld[sfb] = Math.pow(10.0,\n                1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n        }\n\n        /* compute bark values of each critical band */\n        j = 0;\n        for (var k = 0; k < ni; k++) {\n            var w = numlines[k];\n            var bark1, bark2;\n\n            bark1 = freq2bark(sfreq * (j));\n            bark2 = freq2bark(sfreq * (j + w - 1));\n            bval[k] = .5 * (bark1 + bark2);\n\n            bark1 = freq2bark(sfreq * (j - .5));\n            bark2 = freq2bark(sfreq * (j + w - .5));\n            bval_width[k] = bark2 - bark1;\n            j += w;\n        }\n\n        return ni;\n    }\n\n    function init_s3_values(s3ind, npart, bval, bval_width, norm, use_old_s3) {\n        var s3 = new_float_n$3([Encoder_1.CBANDS, Encoder_1.CBANDS]);\n        /*\n         * The s3 array is not linear in the bark scale.\n         *\n         * bval[x] should be used to get the bark value.\n         */\n        var j;\n        var numberOfNoneZero = 0;\n\n        /**\n         * <PRE>\n         * s[i][j], the value of the spreading function,\n         * centered at band j (masker), for band i (maskee)\n         *\n         * i.e.: sum over j to spread into signal barkval=i\n         * NOTE: i and j are used opposite as in the ISO docs\n         * </PRE>\n         */\n        if (use_old_s3) {\n            for (var i = 0; i < npart; i++) {\n                for (j = 0; j < npart; j++) {\n                    var v = s3_func(bval[i] - bval[j]) * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        } else {\n            for (j = 0; j < npart; j++) {\n                var hf_slope = 15 + Math.min(21 / bval[j], 12);\n                var s3_x_norm = norm_s3_func_x(hf_slope);\n                for (var i = 0; i < npart; i++) {\n                    var v = s3_x_norm\n                        * s3_func_x(bval[i] - bval[j], hf_slope)\n                        * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        }\n        for (var i = 0; i < npart; i++) {\n            for (j = 0; j < npart; j++) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][0] = j;\n\n            for (j = npart - 1; j > 0; j--) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][1] = j;\n            numberOfNoneZero += (s3ind[i][1] - s3ind[i][0] + 1);\n        }\n\n        var p = new_float$3(numberOfNoneZero);\n        var k = 0;\n        for (var i = 0; i < npart; i++)\n            for (j = s3ind[i][0]; j <= s3ind[i][1]; j++)\n                p[k++] = s3[i][j];\n\n        return p;\n    }\n\n    function stereo_demask(f) {\n        /* setup stereo demasking thresholds */\n        /* formula reverse enginerred from plot in paper */\n        var arg = freq2bark(f);\n        arg = (Math.min(arg, 15.5) / 15.5);\n\n        return Math.pow(10.0,\n            1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n    }\n\n    /**\n     * NOTE: the bitrate reduction from the inter-channel masking effect is low\n     * compared to the chance of getting annyoing artefacts. L3psycho_anal_vbr\n     * does not use this feature. (Robert 071216)\n     */\n    this.psymodel_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var i;\n        var useOldS3 = true;\n        var bvl_a = 13, bvl_b = 24;\n        var snr_l_a = 0, snr_l_b = 0;\n        var snr_s_a = -8.25, snr_s_b = -4.5;\n        var bval = new_float$3(Encoder_1.CBANDS);\n        var bval_width = new_float$3(Encoder_1.CBANDS);\n        var norm = new_float$3(Encoder_1.CBANDS);\n        var sfreq = gfp.out_samplerate;\n\n        switch (gfp.experimentalZ) {\n            default:\n            case 0:\n                useOldS3 = true;\n                break;\n            case 1:\n                useOldS3 = (gfp.VBR == VbrMode$3.vbr_mtrh || gfp.VBR == VbrMode$3.vbr_mt) ? false\n                    : true;\n                break;\n            case 2:\n                useOldS3 = false;\n                break;\n            case 3:\n                bvl_a = 8;\n                snr_l_a = -1.75;\n                snr_l_b = -0.0125;\n                snr_s_a = -8.25;\n                snr_s_b = -2.25;\n                break;\n        }\n        gfc.ms_ener_ratio_old = .25;\n        gfc.blocktype_old[0] = gfc.blocktype_old[1] = Encoder_1.NORM_TYPE;\n        // the vbr header is long blocks\n\n        for (i = 0; i < 4; ++i) {\n            for (var j = 0; j < Encoder_1.CBANDS; ++j) {\n                gfc.nb_1[i][j] = 1e20;\n                gfc.nb_2[i][j] = 1e20;\n                gfc.nb_s1[i][j] = gfc.nb_s2[i][j] = 1.0;\n            }\n            for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n                gfc.en[i].l[sb] = 1e20;\n                gfc.thm[i].l[sb] = 1e20;\n            }\n            for (var j = 0; j < 3; ++j) {\n                for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    gfc.en[i].s[sb][j] = 1e20;\n                    gfc.thm[i].s[sb][j] = 1e20;\n                }\n                gfc.nsPsy.lastAttacks[i] = 0;\n            }\n            for (var j = 0; j < 9; j++)\n                gfc.nsPsy.last_en_subshort[i][j] = 10.;\n        }\n\n        /* init. for loudness approx. -jd 2001 mar 27 */\n        gfc.loudness_sq_save[0] = gfc.loudness_sq_save[1] = 0.0;\n\n        /*************************************************************************\n         * now compute the psychoacoustic model specific constants\n         ************************************************************************/\n        /* compute numlines, bo, bm, bval, bval_width, mld */\n\n        gfc.npart_l = init_numline(gfc.numlines_l, gfc.bo_l, gfc.bm_l, bval,\n            bval_width, gfc.mld_l, gfc.PSY.bo_l_weight, sfreq,\n            Encoder_1.BLKSIZE, gfc.scalefac_band.l, Encoder_1.BLKSIZE\n            / (2.0 * 576), Encoder_1.SBMAX_l);\n        assert$3(gfc.npart_l < Encoder_1.CBANDS);\n        /* compute the spreading function */\n        for (i = 0; i < gfc.npart_l; i++) {\n            var snr = snr_l_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_l_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_l_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n            if (gfc.numlines_l[i] > 0) {\n                gfc.rnumlines_l[i] = 1.0 / gfc.numlines_l[i];\n            } else {\n                gfc.rnumlines_l[i] = 0;\n            }\n        }\n        gfc.s3_ll = init_s3_values(gfc.s3ind, gfc.npart_l, bval, bval_width,\n            norm, useOldS3);\n\n        /* compute long block specific values, ATH and MINVAL */\n        var j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var x;\n\n            /* ATH */\n            x = Float$3.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_l[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder_1.BLKSIZE);\n                var level;\n                /*\n                 * ATH below 100 Hz constant, not further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_l[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_l[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            /*\n             * FIXME: it does work to reduce low-freq problems in S53-Wind-Sax\n             * and lead-voice samples, but introduces some 3 kbps bit bloat too.\n             * TODO: Further refinement of the shape of this hack.\n             */\n            x = -20 + bval[i] * 20 / 10;\n            if (x > 6) {\n                x = 100;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8.;\n            gfc.minval_l[i] = (Math.pow(10.0, x / 10.) * gfc.numlines_l[i]);\n        }\n\n        /************************************************************************\n         * do the same things for short blocks\n         ************************************************************************/\n        gfc.npart_s = init_numline(gfc.numlines_s, gfc.bo_s, gfc.bm_s, bval,\n            bval_width, gfc.mld_s, gfc.PSY.bo_s_weight, sfreq,\n            Encoder_1.BLKSIZE_s, gfc.scalefac_band.s, Encoder_1.BLKSIZE_s\n            / (2.0 * 192), Encoder_1.SBMAX_s);\n        assert$3(gfc.npart_s < Encoder_1.CBANDS);\n\n        /* SNR formula. short block is normalized by SNR. is it still right ? */\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var x;\n            var snr = snr_s_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_s_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_s_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n\n            /* ATH */\n            x = Float$3.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_s[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder_1.BLKSIZE_s);\n                var level;\n                /* freq = Min(.1,freq); */\n                /*\n                 * ATH below 100 Hz constant, not\n                 * further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_s[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_s[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            x = (-7.0 + bval[i] * 7.0 / 12.0);\n            if (bval[i] > 12) {\n                x *= 1 + Math.log(1 + x) * 3.1;\n            }\n            if (bval[i] < 12) {\n                x *= 1 + Math.log(1 - x) * 2.3;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8;\n            gfc.minval_s[i] = Math.pow(10.0, x / 10)\n                * gfc.numlines_s[i];\n        }\n\n        gfc.s3_ss = init_s3_values(gfc.s3ind_s, gfc.npart_s, bval, bval_width,\n            norm, useOldS3);\n\n        init_mask_add_max_values();\n        fft.init_fft(gfc);\n\n        /* setup temporal masking */\n        gfc.decay = Math.exp(-1.0 * LOG10\n            / (temporalmask_sustain_sec * sfreq / 192.0));\n\n        {\n            var msfix;\n            msfix = NS_MSFIX;\n            if ((gfp.exp_nspsytune & 2) != 0)\n                msfix = 1.0;\n            if (Math.abs(gfp.msfix) > 0.0)\n                msfix = gfp.msfix;\n            gfp.msfix = msfix;\n\n            /*\n             * spread only from npart_l bands. Normally, we use the spreading\n             * function to convolve from npart_l down to npart_l bands\n             */\n            for (var b = 0; b < gfc.npart_l; b++)\n                if (gfc.s3ind[b][1] > gfc.npart_l - 1)\n                    gfc.s3ind[b][1] = gfc.npart_l - 1;\n        }\n\n        /*\n         * prepare for ATH auto adjustment: we want to decrease the ATH by 12 dB\n         * per second\n         */\n        var frame_duration = (576. * gfc.mode_gr / sfreq);\n        gfc.ATH.decay = Math.pow(10., -12. / 10. * frame_duration);\n        gfc.ATH.adjust = 0.01;\n        /* minimum, for leading low loudness */\n        gfc.ATH.adjustLimit = 1.0;\n        /* on lead, allow adjust up to maximum */\n\n        assert$3(gfc.bo_l[Encoder_1.SBMAX_l - 1] <= gfc.npart_l);\n        assert$3(gfc.bo_s[Encoder_1.SBMAX_s - 1] <= gfc.npart_s);\n\n        if (gfp.ATHtype != -1) {\n            /* compute equal loudness weights (eql_w) */\n            var freq;\n            var freq_inc = gfp.out_samplerate\n                / (Encoder_1.BLKSIZE);\n            var eql_balance = 0.0;\n            freq = 0.0;\n            for (i = 0; i < Encoder_1.BLKSIZE / 2; ++i) {\n                /* convert ATH dB to relative power (not dB) */\n                /* to determine eql_w */\n                freq += freq_inc;\n                gfc.ATH.eql_w[i] = 1. / Math.pow(10, this.ATHformula(freq, gfp) / 10);\n                eql_balance += gfc.ATH.eql_w[i];\n            }\n            eql_balance = 1.0 / eql_balance;\n            for (i = Encoder_1.BLKSIZE / 2; --i >= 0;) { /* scale weights */\n                gfc.ATH.eql_w[i] *= eql_balance;\n            }\n        }\n        {\n            for (var b = j = 0; b < gfc.npart_s; ++b) {\n                for (i = 0; i < gfc.numlines_s[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert$3(j == 129);\n            for (var b = j = 0; b < gfc.npart_l; ++b) {\n                for (i = 0; i < gfc.numlines_l[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert$3(j == 513);\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var freq = sfreq * (j + gfc.numlines_l[i] / 2) / (1.0 * Encoder_1.BLKSIZE);\n            gfc.mld_cb_l[i] = stereo_demask(freq);\n            j += gfc.numlines_l[i];\n        }\n        for (; i < Encoder_1.CBANDS; ++i) {\n            gfc.mld_cb_l[i] = 1;\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var freq = sfreq * (j + gfc.numlines_s[i] / 2) / (1.0 * Encoder_1.BLKSIZE_s);\n            gfc.mld_cb_s[i] = stereo_demask(freq);\n            j += gfc.numlines_s[i];\n        }\n        for (; i < Encoder_1.CBANDS; ++i) {\n            gfc.mld_cb_s[i] = 1;\n        }\n        return 0;\n    };\n\n    /**\n     * Those ATH formulas are returning their minimum value for input = -1\n     */\n    function ATHformula_GB(f, value) {\n        /**\n         * <PRE>\n         *  from Painter & Spanias\n         *           modified by Gabriel Bouvigne to better fit the reality\n         *           ath =    3.640 * pow(f,-0.8)\n         *           - 6.800 * exp(-0.6*pow(f-3.4,2.0))\n         *           + 6.000 * exp(-0.15*pow(f-8.7,2.0))\n         *           + 0.6* 0.001 * pow(f,4.0);\n         *\n         *\n         *           In the past LAME was using the Painter &Spanias formula.\n         *           But we had some recurrent problems with HF content.\n         *           We measured real ATH values, and found the older formula\n         *           to be inaccurate in the higher part. So we made this new\n         *           formula and this solved most of HF problematic test cases.\n         *           The tradeoff is that in VBR mode it increases a lot the\n         *           bitrate.\n         * </PRE>\n         */\n\n        /*\n         * This curve can be adjusted according to the VBR scale: it adjusts\n         * from something close to Painter & Spanias on V9 up to Bouvigne's\n         * formula for V0. This way the VBR bitrate is more balanced according\n         * to the -V value.\n         */\n\n        // the following Hack allows to ask for the lowest value\n        if (f < -.3)\n            f = 3410;\n\n        // convert to khz\n        f /= 1000;\n        f = Math.max(0.1, f);\n        var ath = 3.640 * Math.pow(f, -0.8) - 6.800\n            * Math.exp(-0.6 * Math.pow(f - 3.4, 2.0)) + 6.000\n            * Math.exp(-0.15 * Math.pow(f - 8.7, 2.0))\n            + (0.6 + 0.04 * value) * 0.001 * Math.pow(f, 4.0);\n        return ath;\n    }\n\n    this.ATHformula = function (f, gfp) {\n        var ath;\n        switch (gfp.ATHtype) {\n            case 0:\n                ath = ATHformula_GB(f, 9);\n                break;\n            case 1:\n                // over sensitive, should probably be removed\n                ath = ATHformula_GB(f, -1);\n                break;\n            case 2:\n                ath = ATHformula_GB(f, 0);\n                break;\n            case 3:\n                // modification of GB formula by Roel\n                ath = ATHformula_GB(f, 1) + 6;\n                break;\n            case 4:\n                ath = ATHformula_GB(f, gfp.ATHcurve);\n                break;\n            default:\n                ath = ATHformula_GB(f, 0);\n                break;\n        }\n        return ath;\n    };\n\n}\n\nvar PsyModel_1 = PsyModel;\n\n//package mp3;\n\n/* MPEG modes */\nfunction MPEGMode$1(ordinal) {\n    var _ordinal = ordinal;\n    this.ordinal = function () {\n        return _ordinal;\n    };\n}\n\nMPEGMode$1.STEREO = new MPEGMode$1(0);\nMPEGMode$1.JOINT_STEREO = new MPEGMode$1(1);\nMPEGMode$1.DUAL_CHANNEL = new MPEGMode$1(2);\nMPEGMode$1.MONO = new MPEGMode$1(3);\nMPEGMode$1.NOT_SET = new MPEGMode$1(4);\n\nvar MPEGMode_1 = MPEGMode$1;\n\nfunction LameGlobalFlags() {\n\n    this.class_id = 0;\n\n    /* input description */\n\n    /**\n     * number of samples. default=-1\n     */\n    this.num_samples = 0;\n    /**\n     * input number of channels. default=2\n     */\n    this.num_channels = 0;\n    /**\n     * input_samp_rate in Hz. default=44.1 kHz\n     */\n    this.in_samplerate = 0;\n    /**\n     * output_samp_rate. default: LAME picks best value at least not used for\n     * MP3 decoding: Remember 44.1 kHz MP3s and AC97\n     */\n    this.out_samplerate = 0;\n    /**\n     * scale input by this amount before encoding at least not used for MP3\n     * decoding\n     */\n    this.scale = 0.;\n    /**\n     * scale input of channel 0 (left) by this amount before encoding\n     */\n    this.scale_left = 0.;\n    /**\n     * scale input of channel 1 (right) by this amount before encoding\n     */\n    this.scale_right = 0.;\n\n    /* general control params */\n    /**\n     * collect data for a MP3 frame analyzer?\n     */\n    this.analysis = false;\n    /**\n     * add Xing VBR tag?\n     */\n    this.bWriteVbrTag = false;\n\n    /**\n     * use lame/mpglib to convert mp3 to wav\n     */\n    this.decode_only = false;\n    /**\n     * quality setting 0=best, 9=worst default=5\n     */\n    this.quality = 0;\n    /**\n     * see enum default = LAME picks best value\n     */\n    this.mode = MPEGMode_1.STEREO;\n    /**\n     * force M/S mode. requires mode=1\n     */\n    this.force_ms = false;\n    /**\n     * use free format? default=0\n     */\n    this.free_format = false;\n    /**\n     * find the RG value? default=0\n     */\n    this.findReplayGain = false;\n    /**\n     * decode on the fly? default=0\n     */\n    this.decode_on_the_fly = false;\n    /**\n     * 1 (default) writes ID3 tags, 0 not\n     */\n    this.write_id3tag_automatic = false;\n\n    /*\n     * set either brate>0 or compression_ratio>0, LAME will compute the value of\n     * the variable not set. Default is compression_ratio = 11.025\n     */\n    /**\n     * bitrate\n     */\n    this.brate = 0;\n    /**\n     * sizeof(wav file)/sizeof(mp3 file)\n     */\n    this.compression_ratio = 0.;\n\n    /* frame params */\n    /**\n     * mark as copyright. default=0\n     */\n    this.copyright = 0;\n    /**\n     * mark as original. default=1\n     */\n    this.original = 0;\n    /**\n     * the MP3 'private extension' bit. Meaningless\n     */\n    this.extension = 0;\n    /**\n     * Input PCM is emphased PCM (for instance from one of the rarely emphased\n     * CDs), it is STRONGLY not recommended to use this, because psycho does not\n     * take it into account, and last but not least many decoders don't care\n     * about these bits\n     */\n    this.emphasis = 0;\n    /**\n     * use 2 bytes per frame for a CRC checksum. default=0\n     */\n    this.error_protection = 0;\n    /**\n     * enforce ISO spec as much as possible\n     */\n    this.strict_ISO = false;\n\n    /**\n     * use bit reservoir?\n     */\n    this.disable_reservoir = false;\n\n    /* quantization/noise shaping */\n    this.quant_comp = 0;\n    this.quant_comp_short = 0;\n    this.experimentalY = false;\n    this.experimentalZ = 0;\n    this.exp_nspsytune = 0;\n\n    this.preset = 0;\n\n    /* VBR control */\n    this.VBR = null;\n    /**\n     * Range [0,...,1[\n     */\n    this.VBR_q_frac = 0.;\n    /**\n     * Range [0,...,9]\n     */\n    this.VBR_q = 0;\n    this.VBR_mean_bitrate_kbps = 0;\n    this.VBR_min_bitrate_kbps = 0;\n    this.VBR_max_bitrate_kbps = 0;\n    /**\n     * strictly enforce VBR_min_bitrate normaly, it will be violated for analog\n     * silence\n     */\n    this.VBR_hard_min = 0;\n\n    /* resampling and filtering */\n\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.lowpassfreq = 0;\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.highpassfreq = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.lowpasswidth = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.highpasswidth = 0;\n\n    /*\n     * psycho acoustics and other arguments which you should not change unless\n     * you know what you are doing\n     */\n\n    this.maskingadjust = 0.;\n    this.maskingadjust_short = 0.;\n    /**\n     * only use ATH\n     */\n    this.ATHonly = false;\n    /**\n     * only use ATH for short blocks\n     */\n    this.ATHshort = false;\n    /**\n     * disable ATH\n     */\n    this.noATH = false;\n    /**\n     * select ATH formula\n     */\n    this.ATHtype = 0;\n    /**\n     * change ATH formula 4 shape\n     */\n    this.ATHcurve = 0.;\n    /**\n     * lower ATH by this many db\n     */\n    this.ATHlower = 0.;\n    /**\n     * select ATH auto-adjust scheme\n     */\n    this.athaa_type = 0;\n    /**\n     * select ATH auto-adjust loudness calc\n     */\n    this.athaa_loudapprox = 0;\n    /**\n     * dB, tune active region of auto-level\n     */\n    this.athaa_sensitivity = 0.;\n    this.short_blocks = null;\n    /**\n     * use temporal masking effect\n     */\n    this.useTemporal = false;\n    this.interChRatio = 0.;\n    /**\n     * Naoki's adjustment of Mid/Side maskings\n     */\n    this.msfix = 0.;\n\n    /**\n     * 0 off, 1 on\n     */\n    this.tune = false;\n    /**\n     * used to pass values for debugging and stuff\n     */\n    this.tune_value_a = 0.;\n\n    /************************************************************************/\n    /* internal variables, do not set... */\n    /* provided because they may be of use to calling application */\n    /************************************************************************/\n\n    /**\n     * 0=MPEG-2/2.5 1=MPEG-1\n     */\n    this.version = 0;\n    this.encoder_delay = 0;\n    /**\n     * number of samples of padding appended to input\n     */\n    this.encoder_padding = 0;\n    this.framesize = 0;\n    /**\n     * number of frames encoded\n     */\n    this.frameNum = 0;\n    /**\n     * is this struct owned by calling program or lame?\n     */\n    this.lame_allocated_gfp = 0;\n    /**************************************************************************/\n    /* more internal variables are stored in this structure: */\n    /**************************************************************************/\n    this.internal_flags = null;\n}\n\nvar LameGlobalFlags_1 = LameGlobalFlags;\n\nvar L3Side$1 = {};\n\n\n\t/**\n\t * max scalefactor band, max(SBMAX_l, SBMAX_s*3, (SBMAX_s-3)*3+8)\n\t */\nL3Side$1.SFBMAX = (Encoder_1.SBMAX_s * 3);\n\nvar L3Side_1 = L3Side$1;\n\nvar new_float$10 = common.new_float;\nvar new_int$10 = common.new_int;\nfunction GrInfo() {\n    //float xr[] = new float[576];\n    this.xr = new_float$10(576);\n    //int l3_enc[] = new int[576];\n    this.l3_enc = new_int$10(576);\n    //int scalefac[] = new int[L3Side.SFBMAX];\n    this.scalefac = new_int$10(L3Side_1.SFBMAX);\n    this.xrpow_max = 0.;\n\n    this.part2_3_length = 0;\n    this.big_values = 0;\n    this.count1 = 0;\n    this.global_gain = 0;\n    this.scalefac_compress = 0;\n    this.block_type = 0;\n    this.mixed_block_flag = 0;\n    this.table_select = new_int$10(3);\n    this.subblock_gain = new_int$10(3 + 1);\n    this.region0_count = 0;\n    this.region1_count = 0;\n    this.preflag = 0;\n    this.scalefac_scale = 0;\n    this.count1table_select = 0;\n\n    this.part2_length = 0;\n    this.sfb_lmax = 0;\n    this.sfb_smin = 0;\n    this.psy_lmax = 0;\n    this.sfbmax = 0;\n    this.psymax = 0;\n    this.sfbdivide = 0;\n    this.width = new_int$10(L3Side_1.SFBMAX);\n    this.window = new_int$10(L3Side_1.SFBMAX);\n    this.count1bits = 0;\n    /**\n     * added for LSF\n     */\n    this.sfb_partition_table = null;\n    this.slen = new_int$10(4);\n\n    this.max_nonzero_coeff = 0;\n\n    var self = this;\n    function clone_int(array) {\n        return new Int32Array(array);\n    }\n    function clone_float(array) {\n        return new Float32Array(array);\n    }\n    this.assign = function (other) {\n        self.xr = clone_float(other.xr); //.slice(0); //clone();\n        self.l3_enc = clone_int(other.l3_enc); //.slice(0); //clone();\n        self.scalefac = clone_int(other.scalefac);//.slice(0); //clone();\n        self.xrpow_max = other.xrpow_max;\n\n        self.part2_3_length = other.part2_3_length;\n        self.big_values = other.big_values;\n        self.count1 = other.count1;\n        self.global_gain = other.global_gain;\n        self.scalefac_compress = other.scalefac_compress;\n        self.block_type = other.block_type;\n        self.mixed_block_flag = other.mixed_block_flag;\n        self.table_select = clone_int(other.table_select);//.slice(0); //clone();\n        self.subblock_gain = clone_int(other.subblock_gain); //.slice(0); //.clone();\n        self.region0_count = other.region0_count;\n        self.region1_count = other.region1_count;\n        self.preflag = other.preflag;\n        self.scalefac_scale = other.scalefac_scale;\n        self.count1table_select = other.count1table_select;\n\n        self.part2_length = other.part2_length;\n        self.sfb_lmax = other.sfb_lmax;\n        self.sfb_smin = other.sfb_smin;\n        self.psy_lmax = other.psy_lmax;\n        self.sfbmax = other.sfbmax;\n        self.psymax = other.psymax;\n        self.sfbdivide = other.sfbdivide;\n        self.width = clone_int(other.width); //.slice(0); //.clone();\n        self.window = clone_int(other.window); //.slice(0); //.clone();\n        self.count1bits = other.count1bits;\n\n        self.sfb_partition_table = other.sfb_partition_table.slice(0); //.clone();\n        self.slen = clone_int(other.slen); //.slice(0); //.clone();\n        self.max_nonzero_coeff = other.max_nonzero_coeff;\n    };\n}\n\nvar GrInfo_1 = GrInfo;\n\nvar new_int$9 = common.new_int;\nfunction IIISideInfo() {\n    this.tt = [[null, null], [null, null]];\n    this.main_data_begin = 0;\n    this.private_bits = 0;\n    this.resvDrain_pre = 0;\n    this.resvDrain_post = 0;\n    this.scfsi = [new_int$9(4), new_int$9(4)];\n\n    for (var gr = 0; gr < 2; gr++) {\n        for (var ch = 0; ch < 2; ch++) {\n            this.tt[gr][ch] = new GrInfo_1();\n        }\n    }\n}\n\nvar IIISideInfo_1 = IIISideInfo;\n\n//package mp3;\n\n/**\n * Layer III side information.\n *\n * @author Ken\n *\n */\n\n\nvar System$11 = common.System;\nvar new_int$11 = common.new_int;\nfunction ScaleFac(arrL, arrS, arr21, arr12) {\n\n    this.l = new_int$11(1 + Encoder_1.SBMAX_l);\n    this.s = new_int$11(1 + Encoder_1.SBMAX_s);\n    this.psfb21 = new_int$11(1 + Encoder_1.PSFB21);\n    this.psfb12 = new_int$11(1 + Encoder_1.PSFB12);\n    var l = this.l;\n    var s = this.s;\n\n    if (arguments.length == 4) {\n        //public ScaleFac(final int[] arrL, final int[] arrS, final int[] arr21,\n        //    final int[] arr12) {\n        this.arrL = arguments[0];\n        this.arrS = arguments[1];\n        this.arr21 = arguments[2];\n        this.arr12 = arguments[3];\n\n        System$11.arraycopy(this.arrL, 0, l, 0, Math.min(this.arrL.length, this.l.length));\n        System$11.arraycopy(this.arrS, 0, s, 0, Math.min(this.arrS.length, this.s.length));\n        System$11.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length));\n        System$11.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length));\n    }\n}\n\nvar ScaleFac_1 = ScaleFac;\n\nvar new_float$12 = common.new_float;\nvar new_float_n$12 = common.new_float_n;\nvar new_int$12 = common.new_int;\n//package mp3;\n\n/**\n * Variables used for --nspsytune\n *\n * @author Ken\n *\n */\nfunction NsPsy() {\n    this.last_en_subshort = new_float_n$12([4, 9]);\n    this.lastAttacks = new_int$12(4);\n    this.pefirbuf = new_float$12(19);\n    this.longfact = new_float$12(Encoder_1.SBMAX_l);\n    this.shortfact = new_float$12(Encoder_1.SBMAX_s);\n\n    /**\n     * short block tuning\n     */\n    this.attackthre = 0.;\n    this.attackthre_s = 0.;\n}\n\nvar NsPsy_1 = NsPsy;\n\n//package mp3;\n\nfunction VBRSeekInfo() {\n    /**\n     * What we have seen so far.\n     */\n    this.sum = 0;\n    /**\n     * How many frames we have seen in this chunk.\n     */\n    this.seen = 0;\n    /**\n     * How many frames we want to collect into one chunk.\n     */\n    this.want = 0;\n    /**\n     * Actual position in our bag.\n     */\n    this.pos = 0;\n    /**\n     * Size of our bag.\n     */\n    this.size = 0;\n    /**\n     * Pointer to our bag.\n     */\n    this.bag = null;\n    this.nVbrNumFrames = 0;\n    this.nBytesWritten = 0;\n    /* VBR tag data */\n    this.TotalFrameSize = 0;\n}\n\nvar VBRSeekInfo_1 = VBRSeekInfo;\n\nvar new_byte$8 = common.new_byte;\nvar new_double$8 = common.new_double;\nvar new_float$8 = common.new_float;\nvar new_float_n$8 = common.new_float_n;\nvar new_int$8 = common.new_int;\nvar new_int_n$8 = common.new_int_n;\nLameInternalFlags$1.MFSIZE = (3 * 1152 + Encoder_1.ENCDELAY - Encoder_1.MDCTDELAY);\nLameInternalFlags$1.MAX_HEADER_BUF = 256;\nLameInternalFlags$1.MAX_BITS_PER_CHANNEL = 4095;\nLameInternalFlags$1.MAX_BITS_PER_GRANULE = 7680;\nLameInternalFlags$1.BPC = 320;\n\nfunction LameInternalFlags$1() {\n    var MAX_HEADER_LEN = 40;\n\n\n    /********************************************************************\n     * internal variables NOT set by calling program, and should not be *\n     * modified by the calling program *\n     ********************************************************************/\n\n    /**\n     * Some remarks to the Class_ID field: The Class ID is an Identifier for a\n     * pointer to this struct. It is very unlikely that a pointer to\n     * lame_global_flags has the same 32 bits in it's structure (large and other\n     * special properties, for instance prime).\n     *\n     * To test that the structure is right and initialized, use: if ( gfc .\n     * Class_ID == LAME_ID ) ... Other remark: If you set a flag to 0 for uninit\n     * data and 1 for init data, the right test should be \"if (flag == 1)\" and\n     * NOT \"if (flag)\". Unintended modification of this element will be\n     * otherwise misinterpreted as an init.\n     */\n    this.Class_ID = 0;\n\n    this.lame_encode_frame_init = 0;\n    this.iteration_init_init = 0;\n    this.fill_buffer_resample_init = 0;\n\n    //public float mfbuf[][] = new float[2][MFSIZE];\n    this.mfbuf = new_float_n$8([2, LameInternalFlags$1.MFSIZE]);\n\n    /**\n     * granules per frame\n     */\n    this.mode_gr = 0;\n    /**\n     * number of channels in the input data stream (PCM or decoded PCM)\n     */\n    this.channels_in = 0;\n    /**\n     * number of channels in the output data stream (not used for decoding)\n     */\n    this.channels_out = 0;\n    /**\n     * input_samp_rate/output_samp_rate\n     */\n        //public double resample_ratio;\n    this.resample_ratio = 0.;\n\n    this.mf_samples_to_encode = 0;\n    this.mf_size = 0;\n    /**\n     * min bitrate index\n     */\n    this.VBR_min_bitrate = 0;\n    /**\n     * max bitrate index\n     */\n    this.VBR_max_bitrate = 0;\n    this.bitrate_index = 0;\n    this.samplerate_index = 0;\n    this.mode_ext = 0;\n\n    /* lowpass and highpass filter control */\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.lowpass1 = 0.;\n    this.lowpass2 = 0.;\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.highpass1 = 0.;\n    this.highpass2 = 0.;\n\n    /**\n     * 0 = none 1 = ISO AAC model 2 = allow scalefac_select=1\n     */\n    this.noise_shaping = 0;\n\n    /**\n     * 0 = ISO model: amplify all distorted bands<BR>\n     * 1 = amplify within 50% of max (on db scale)<BR>\n     * 2 = amplify only most distorted band<BR>\n     * 3 = method 1 and refine with method 2<BR>\n     */\n    this.noise_shaping_amp = 0;\n    /**\n     * 0 = no substep<BR>\n     * 1 = use substep shaping at last step(VBR only)<BR>\n     * (not implemented yet)<BR>\n     * 2 = use substep inside loop<BR>\n     * 3 = use substep inside loop and last step<BR>\n     */\n    this.substep_shaping = 0;\n\n    /**\n     * 1 = gpsycho. 0 = none\n     */\n    this.psymodel = 0;\n    /**\n     * 0 = stop at over=0, all scalefacs amplified or<BR>\n     * a scalefac has reached max value<BR>\n     * 1 = stop when all scalefacs amplified or a scalefac has reached max value<BR>\n     * 2 = stop when all scalefacs amplified\n     */\n    this.noise_shaping_stop = 0;\n\n    /**\n     * 0 = no, 1 = yes\n     */\n    this.subblock_gain = 0;\n    /**\n     * 0 = no. 1=outside loop 2=inside loop(slow)\n     */\n    this.use_best_huffman = 0;\n\n    /**\n     * 0 = stop early after 0 distortion found. 1 = full search\n     */\n    this.full_outer_loop = 0;\n\n    //public IIISideInfo l3_side = new IIISideInfo();\n    this.l3_side = new IIISideInfo_1();\n    this.ms_ratio = new_float$8(2);\n\n    /* used for padding */\n    /**\n     * padding for the current frame?\n     */\n    this.padding = 0;\n    this.frac_SpF = 0;\n    this.slot_lag = 0;\n\n    /**\n     * optional ID3 tags\n     */\n        //public ID3TagSpec tag_spec;\n    this.tag_spec = null;\n    this.nMusicCRC = 0;\n\n    /* variables used by Quantize */\n    //public int OldValue[] = new int[2];\n    this.OldValue = new_int$8(2);\n    //public int CurrentStep[] = new int[2];\n    this.CurrentStep = new_int$8(2);\n\n    this.masking_lower = 0.;\n    //public int bv_scf[] = new int[576];\n    this.bv_scf = new_int$8(576);\n    //public int pseudohalf[] = new int[L3Side.SFBMAX];\n    this.pseudohalf = new_int$8(L3Side_1.SFBMAX);\n\n    /**\n     * will be set in lame_init_params\n     */\n    this.sfb21_extra = false;\n\n    /* BPC = maximum number of filter convolution windows to precompute */\n    //public float[][] inbuf_old = new float[2][];\n    this.inbuf_old = new Array(2);\n    //public float[][] blackfilt = new float[2 * BPC + 1][];\n    this.blackfilt = new Array(2 * LameInternalFlags$1.BPC + 1);\n    //public double itime[] = new double[2];\n    this.itime = new_double$8(2);\n    this.sideinfo_len = 0;\n\n    /* variables for newmdct.c */\n    //public float sb_sample[][][][] = new float[2][2][18][Encoder.SBLIMIT];\n    this.sb_sample = new_float_n$8([2, 2, 18, Encoder_1.SBLIMIT]);\n    this.amp_filter = new_float$8(32);\n\n    /* variables for BitStream */\n\n    /**\n     * <PRE>\n     * mpeg1: buffer=511 bytes  smallest frame: 96-38(sideinfo)=58\n     * max number of frames in reservoir:  8\n     * mpeg2: buffer=255 bytes.  smallest frame: 24-23bytes=1\n     * with VBR, if you are encoding all silence, it is possible to\n     * have 8kbs/24khz frames with 1byte of data each, which means we need\n     * to buffer up to 255 headers!\n     * </PRE>\n     */\n    /**\n     * also, max_header_buf has to be a power of two\n     */\n    /**\n     * max size of header is 38\n     */\n\n    function Header() {\n        this.write_timing = 0;\n        this.ptr = 0;\n        //public byte buf[] = new byte[MAX_HEADER_LEN];\n        this.buf = new_byte$8(MAX_HEADER_LEN);\n    }\n\n    this.header = new Array(LameInternalFlags$1.MAX_HEADER_BUF);\n\n    this.h_ptr = 0;\n    this.w_ptr = 0;\n    this.ancillary_flag = 0;\n\n    /* variables for Reservoir */\n    /**\n     * in bits\n     */\n    this.ResvSize = 0;\n    /**\n     * in bits\n     */\n    this.ResvMax = 0;\n\n    //public ScaleFac scalefac_band = new ScaleFac();\n    this.scalefac_band = new ScaleFac_1();\n\n    /* daa from PsyModel */\n    /* The static variables \"r\", \"phi_sav\", \"new\", \"old\" and \"oldest\" have */\n    /* to be remembered for the unpredictability measure. For \"r\" and */\n    /* \"phi_sav\", the first index from the left is the channel select and */\n    /* the second index is the \"age\" of the data. */\n    this.minval_l = new_float$8(Encoder_1.CBANDS);\n    this.minval_s = new_float$8(Encoder_1.CBANDS);\n    this.nb_1 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_2 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_s1 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_s2 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.s3_ss = null;\n    this.s3_ll = null;\n    this.decay = 0.;\n\n    //public III_psy_xmin[] thm = new III_psy_xmin[4];\n    //public III_psy_xmin[] en = new III_psy_xmin[4];\n    this.thm = new Array(4);\n    this.en = new Array(4);\n\n    /**\n     * fft and energy calculation\n     */\n    this.tot_ener = new_float$8(4);\n\n    /* loudness calculation (for adaptive threshold of hearing) */\n    /**\n     * loudness^2 approx. per granule and channel\n     */\n    this.loudness_sq = new_float_n$8([2, 2]);\n    /**\n     * account for granule delay of L3psycho_anal\n     */\n    this.loudness_sq_save = new_float$8(2);\n\n    /**\n     * Scale Factor Bands\n     */\n    this.mld_l = new_float$8(Encoder_1.SBMAX_l);\n    this.mld_s = new_float$8(Encoder_1.SBMAX_s);\n    this.bm_l = new_int$8(Encoder_1.SBMAX_l);\n    this.bo_l = new_int$8(Encoder_1.SBMAX_l);\n    this.bm_s = new_int$8(Encoder_1.SBMAX_s);\n    this.bo_s = new_int$8(Encoder_1.SBMAX_s);\n    this.npart_l = 0;\n    this.npart_s = 0;\n\n    this.s3ind = new_int_n$8([Encoder_1.CBANDS, 2]);\n    this.s3ind_s = new_int_n$8([Encoder_1.CBANDS, 2]);\n\n    this.numlines_s = new_int$8(Encoder_1.CBANDS);\n    this.numlines_l = new_int$8(Encoder_1.CBANDS);\n    this.rnumlines_l = new_float$8(Encoder_1.CBANDS);\n    this.mld_cb_l = new_float$8(Encoder_1.CBANDS);\n    this.mld_cb_s = new_float$8(Encoder_1.CBANDS);\n    this.numlines_s_num1 = 0;\n    this.numlines_l_num1 = 0;\n\n    /* ratios */\n    this.pe = new_float$8(4);\n    this.ms_ratio_s_old = 0.;\n    this.ms_ratio_l_old = 0.;\n    this.ms_ener_ratio_old = 0.;\n\n    /**\n     * block type\n     */\n    this.blocktype_old = new_int$8(2);\n\n    /**\n     * variables used for --nspsytune\n     */\n    this.nsPsy = new NsPsy_1();\n\n    /**\n     * used for Xing VBR header\n     */\n    this.VBR_seek_table = new VBRSeekInfo_1();\n\n    /**\n     * all ATH related stuff\n     */\n        //public ATH ATH;\n    this.ATH = null;\n\n    this.PSY = null;\n\n    this.nogap_total = 0;\n    this.nogap_current = 0;\n\n    /* ReplayGain */\n    this.decode_on_the_fly = true;\n    this.findReplayGain = true;\n    this.findPeakSample = true;\n    this.PeakSample = 0.;\n    this.RadioGain = 0;\n    this.AudiophileGain = 0;\n    //public ReplayGain rgdata;\n    this.rgdata = null;\n\n    /**\n     * gain change required for preventing clipping\n     */\n    this.noclipGainChange = 0;\n    /**\n     * user-specified scale factor required for preventing clipping\n     */\n    this.noclipScale = 0.;\n\n    /* simple statistics */\n    this.bitrate_stereoMode_Hist = new_int_n$8([16, 4 + 1]);\n    /**\n     * norm/start/short/stop/mixed(short)/sum\n     */\n    this.bitrate_blockType_Hist = new_int_n$8([16, 4 + 1 + 1]);\n\n    //public PlottingData pinfo;\n    //public MPGLib.mpstr_tag hip;\n    this.pinfo = null;\n    this.hip = null;\n\n    this.in_buffer_nsamples = 0;\n    //public float[] in_buffer_0;\n    //public float[] in_buffer_1;\n    this.in_buffer_0 = null;\n    this.in_buffer_1 = null;\n\n    //public IIterationLoop iteration_loop;\n    this.iteration_loop = null;\n\n    for (var i = 0; i < this.en.length; i++) {\n        this.en[i] = new III_psy_xmin_1();\n    }\n    for (var i = 0; i < this.thm.length; i++) {\n        this.thm[i] = new III_psy_xmin_1();\n    }\n    for (var i = 0; i < this.header.length; i++) {\n        this.header[i] = new Header();\n    }\n\n}\n\nvar LameInternalFlags_1 = LameInternalFlags$1;\n\nvar new_float$13 = common.new_float;\n/**\n * ATH related stuff, if something new ATH related has to be added, please plug\n * it here into the ATH.\n */\nfunction ATH() {\n    /**\n     * Method for the auto adjustment.\n     */\n    this.useAdjust = 0;\n    /**\n     * factor for tuning the (sample power) point below which adaptive threshold\n     * of hearing adjustment occurs\n     */\n    this.aaSensitivityP = 0.;\n    /**\n     * Lowering based on peak volume, 1 = no lowering.\n     */\n    this.adjust = 0.;\n    /**\n     * Limit for dynamic ATH adjust.\n     */\n    this.adjustLimit = 0.;\n    /**\n     * Determined to lower x dB each second.\n     */\n    this.decay = 0.;\n    /**\n     * Lowest ATH value.\n     */\n    this.floor = 0.;\n    /**\n     * ATH for sfbs in long blocks.\n     */\n    this.l = new_float$13(Encoder_1.SBMAX_l);\n    /**\n     * ATH for sfbs in short blocks.\n     */\n    this.s = new_float$13(Encoder_1.SBMAX_s);\n    /**\n     * ATH for partitioned sfb21 in long blocks.\n     */\n    this.psfb21 = new_float$13(Encoder_1.PSFB21);\n    /**\n     * ATH for partitioned sfb12 in short blocks.\n     */\n    this.psfb12 = new_float$13(Encoder_1.PSFB12);\n    /**\n     * ATH for long block convolution bands.\n     */\n    this.cb_l = new_float$13(Encoder_1.CBANDS);\n    /**\n     * ATH for short block convolution bands.\n     */\n    this.cb_s = new_float$13(Encoder_1.CBANDS);\n    /**\n     * Equal loudness weights (based on ATH).\n     */\n    this.eql_w = new_float$13(Encoder_1.BLKSIZE / 2);\n}\n\nvar ATH_1 = ATH;\n\n/*\n *  ReplayGainAnalysis - analyzes input samples and give the recommended dB change\n *  Copyright (C) 2001 David Robinson and Glen Sawyer\n *  Improvements and optimizations added by Frank Klemm, and by Marcel Muller \n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation; either\n *  version 2.1 of the License, or (at your option) any later version.\n *\n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public\n *  License along with this library; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n *\n *  concept and filter values by David Robinson (David@Robinson.org)\n *    -- blame him if you think the idea is flawed\n *  original coding by Glen Sawyer (mp3gain@hotmail.com)\n *    -- blame him if you think this runs too slowly, or the coding is otherwise flawed\n *\n *  lots of code improvements by Frank Klemm ( http://www.uni-jena.de/~pfk/mpp/ )\n *    -- credit him for all the _good_ programming ;)\n *\n *\n *  For an explanation of the concepts and the basic algorithms involved, go to:\n *    http://www.replaygain.org/\n */\n\n/*\n *  Here's the deal. Call\n *\n *    InitGainAnalysis ( long samplefreq );\n *\n *  to initialize everything. Call\n *\n *    AnalyzeSamples ( var Float_t*  left_samples,\n *                     var Float_t*  right_samples,\n *                     size_t          num_samples,\n *                     int             num_channels );\n *\n *  as many times as you want, with as many or as few samples as you want.\n *  If mono, pass the sample buffer in through left_samples, leave\n *  right_samples NULL, and make sure num_channels = 1.\n *\n *    GetTitleGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  SINCE THE LAST TIME you called GetTitleGain() OR InitGainAnalysis().\n *\n *    GetAlbumGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  since InitGainAnalysis() was called and finalized with GetTitleGain().\n *\n *  Pseudo-code to process an album:\n *\n *    Float_t       l_samples [4096];\n *    Float_t       r_samples [4096];\n *    size_t        num_samples;\n *    unsigned int  num_songs;\n *    unsigned int  i;\n *\n *    InitGainAnalysis ( 44100 );\n *    for ( i = 1; i <= num_songs; i++ ) {\n *        while ( ( num_samples = getSongSamples ( song[i], left_samples, right_samples ) ) > 0 )\n *            AnalyzeSamples ( left_samples, right_samples, num_samples, 2 );\n *        fprintf (\"Recommended dB change for song %2d: %+6.2 dB\\n\", i, GetTitleGain() );\n *    }\n *    fprintf (\"Recommended dB change for whole album: %+6.2 dB\\n\", GetAlbumGain() );\n */\n\n/*\n *  So here's the main source of potential code confusion:\n *\n *  The filters applied to the incoming samples are IIR filters,\n *  meaning they rely on up to <filter order> number of previous samples\n *  AND up to <filter order> number of previous filtered samples.\n *\n *  I set up the AnalyzeSamples routine to minimize memory usage and interface\n *  complexity. The speed isn't compromised too much (I don't think), but the\n *  internal complexity is higher than it should be for such a relatively\n *  simple routine.\n *\n *  Optimization/clarity suggestions are welcome.\n */\n\nvar System$15 = common.System;\nvar Arrays$15 = common.Arrays;\n/**\n * Table entries per dB\n */\nGainAnalysis$1.STEPS_per_dB = 100.;\n/**\n * Table entries for 0...MAX_dB (normal max. values are 70...80 dB)\n */\nGainAnalysis$1.MAX_dB = 120.;\nGainAnalysis$1.GAIN_NOT_ENOUGH_SAMPLES = -24601;\nGainAnalysis$1.GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis$1.GAIN_ANALYSIS_OK = 1;\nGainAnalysis$1.INIT_GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis$1.INIT_GAIN_ANALYSIS_OK = 1;\n\nGainAnalysis$1.YULE_ORDER = 10;\nGainAnalysis$1.MAX_ORDER = GainAnalysis$1.YULE_ORDER;\n\nGainAnalysis$1.MAX_SAMP_FREQ = 48000;\nGainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR = 1;\nGainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR = 20;\nGainAnalysis$1.MAX_SAMPLES_PER_WINDOW = ((GainAnalysis$1.MAX_SAMP_FREQ * GainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR) / GainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR + 1);\n\nfunction GainAnalysis$1() {\n    /**\n     * calibration value for 89dB\n     */\n    var PINK_REF = 64.82;\n\n    var YULE_ORDER = GainAnalysis$1.YULE_ORDER;\n    /**\n     * percentile which is louder than the proposed level\n     */\n    var RMS_PERCENTILE = 0.95;\n    /**\n     * maximum allowed sample frequency [Hz]\n     */\n    var MAX_SAMP_FREQ = GainAnalysis$1.MAX_SAMP_FREQ;\n    var RMS_WINDOW_TIME_NUMERATOR = GainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR;\n    /**\n     * numerator / denominator = time slice size [s]\n     */\n    var RMS_WINDOW_TIME_DENOMINATOR = GainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR;\n    /**\n     * max. Samples per Time slice\n     */\n    var MAX_SAMPLES_PER_WINDOW = GainAnalysis$1.MAX_SAMPLES_PER_WINDOW;\n\n\n    var ABYule = [\n        [0.03857599435200, -3.84664617118067, -0.02160367184185,\n            7.81501653005538, -0.00123395316851, -11.34170355132042,\n            -0.00009291677959, 13.05504219327545, -0.01655260341619,\n            -12.28759895145294, 0.02161526843274, 9.48293806319790,\n            -0.02074045215285, -5.87257861775999, 0.00594298065125,\n            2.75465861874613, 0.00306428023191, -0.86984376593551,\n            0.00012025322027, 0.13919314567432, 0.00288463683916],\n        [0.05418656406430, -3.47845948550071, -0.02911007808948,\n            6.36317777566148, -0.00848709379851, -8.54751527471874,\n            -0.00851165645469, 9.47693607801280, -0.00834990904936,\n            -8.81498681370155, 0.02245293253339, 6.85401540936998,\n            -0.02596338512915, -4.39470996079559, 0.01624864962975,\n            2.19611684890774, -0.00240879051584, -0.75104302451432,\n            0.00674613682247, 0.13149317958808, -0.00187763777362],\n        [0.15457299681924, -2.37898834973084, -0.09331049056315,\n            2.84868151156327, -0.06247880153653, -2.64577170229825,\n            0.02163541888798, 2.23697657451713, -0.05588393329856,\n            -1.67148153367602, 0.04781476674921, 1.00595954808547,\n            0.00222312597743, -0.45953458054983, 0.03174092540049,\n            0.16378164858596, -0.01390589421898, -0.05032077717131,\n            0.00651420667831, 0.02347897407020, -0.00881362733839],\n        [0.30296907319327, -1.61273165137247, -0.22613988682123,\n            1.07977492259970, -0.08587323730772, -0.25656257754070,\n            0.03282930172664, -0.16276719120440, -0.00915702933434,\n            -0.22638893773906, -0.02364141202522, 0.39120800788284,\n            -0.00584456039913, -0.22138138954925, 0.06276101321749,\n            0.04500235387352, -0.00000828086748, 0.02005851806501,\n            0.00205861885564, 0.00302439095741, -0.02950134983287],\n        [0.33642304856132, -1.49858979367799, -0.25572241425570,\n            0.87350271418188, -0.11828570177555, 0.12205022308084,\n            0.11921148675203, -0.80774944671438, -0.07834489609479,\n            0.47854794562326, -0.00469977914380, -0.12453458140019,\n            -0.00589500224440, -0.04067510197014, 0.05724228140351,\n            0.08333755284107, 0.00832043980773, -0.04237348025746,\n            -0.01635381384540, 0.02977207319925, -0.01760176568150],\n        [0.44915256608450, -0.62820619233671, -0.14351757464547,\n            0.29661783706366, -0.22784394429749, -0.37256372942400,\n            -0.01419140100551, 0.00213767857124, 0.04078262797139,\n            -0.42029820170918, -0.12398163381748, 0.22199650564824,\n            0.04097565135648, 0.00613424350682, 0.10478503600251,\n            0.06747620744683, -0.01863887810927, 0.05784820375801,\n            -0.03193428438915, 0.03222754072173, 0.00541907748707],\n        [0.56619470757641, -1.04800335126349, -0.75464456939302,\n            0.29156311971249, 0.16242137742230, -0.26806001042947,\n            0.16744243493672, 0.00819999645858, -0.18901604199609,\n            0.45054734505008, 0.30931782841830, -0.33032403314006,\n            -0.27562961986224, 0.06739368333110, 0.00647310677246,\n            -0.04784254229033, 0.08647503780351, 0.01639907836189,\n            -0.03788984554840, 0.01807364323573, -0.00588215443421],\n        [0.58100494960553, -0.51035327095184, -0.53174909058578,\n            -0.31863563325245, -0.14289799034253, -0.20256413484477,\n            0.17520704835522, 0.14728154134330, 0.02377945217615,\n            0.38952639978999, 0.15558449135573, -0.23313271880868,\n            -0.25344790059353, -0.05246019024463, 0.01628462406333,\n            -0.02505961724053, 0.06920467763959, 0.02442357316099,\n            -0.03721611395801, 0.01818801111503, -0.00749618797172],\n        [0.53648789255105, -0.25049871956020, -0.42163034350696,\n            -0.43193942311114, -0.00275953611929, -0.03424681017675,\n            0.04267842219415, -0.04678328784242, -0.10214864179676,\n            0.26408300200955, 0.14590772289388, 0.15113130533216,\n            -0.02459864859345, -0.17556493366449, -0.11202315195388,\n            -0.18823009262115, -0.04060034127000, 0.05477720428674,\n            0.04788665548180, 0.04704409688120, -0.02217936801134]];\n\n    var ABButter = [\n        [0.98621192462708, -1.97223372919527, -1.97242384925416,\n            0.97261396931306, 0.98621192462708],\n        [0.98500175787242, -1.96977855582618, -1.97000351574484,\n            0.97022847566350, 0.98500175787242],\n        [0.97938932735214, -1.95835380975398, -1.95877865470428,\n            0.95920349965459, 0.97938932735214],\n        [0.97531843204928, -1.95002759149878, -1.95063686409857,\n            0.95124613669835, 0.97531843204928],\n        [0.97316523498161, -1.94561023566527, -1.94633046996323,\n            0.94705070426118, 0.97316523498161],\n        [0.96454515552826, -1.92783286977036, -1.92909031105652,\n            0.93034775234268, 0.96454515552826],\n        [0.96009142950541, -1.91858953033784, -1.92018285901082,\n            0.92177618768381, 0.96009142950541],\n        [0.95856916599601, -1.91542108074780, -1.91713833199203,\n            0.91885558323625, 0.95856916599601],\n        [0.94597685600279, -1.88903307939452, -1.89195371200558,\n            0.89487434461664, 0.94597685600279]];\n\n\n    /**\n     * When calling this procedure, make sure that ip[-order] and op[-order]\n     * point to real data\n     */\n    //private void filterYule(final float[] input, int inputPos, float[] output,\n    //int outputPos, int nSamples, final float[] kernel) {\n    function filterYule(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            /* 1e-10 is a hack to avoid slowdown because of denormals */\n            output[outputPos] = 1e-10 + input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4] - output[outputPos - 3]\n                * kernel[5] + input[inputPos - 3] * kernel[6]\n                - output[outputPos - 4] * kernel[7] + input[inputPos - 4]\n                * kernel[8] - output[outputPos - 5] * kernel[9]\n                + input[inputPos - 5] * kernel[10] - output[outputPos - 6]\n                * kernel[11] + input[inputPos - 6] * kernel[12]\n                - output[outputPos - 7] * kernel[13] + input[inputPos - 7]\n                * kernel[14] - output[outputPos - 8] * kernel[15]\n                + input[inputPos - 8] * kernel[16] - output[outputPos - 9]\n                * kernel[17] + input[inputPos - 9] * kernel[18]\n                - output[outputPos - 10] * kernel[19]\n                + input[inputPos - 10] * kernel[20];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n//private void filterButter(final float[] input, int inputPos,\n//    float[] output, int outputPos, int nSamples, final float[] kernel) {\n    function filterButter(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            output[outputPos] = input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n    /**\n     * @return INIT_GAIN_ANALYSIS_OK if successful, INIT_GAIN_ANALYSIS_ERROR if\n     *         not\n     */\n    function ResetSampleFrequency(rgData, samplefreq) {\n        /* zero out initial values */\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        switch (0 | (samplefreq)) {\n            case 48000:\n                rgData.reqindex = 0;\n                break;\n            case 44100:\n                rgData.reqindex = 1;\n                break;\n            case 32000:\n                rgData.reqindex = 2;\n                break;\n            case 24000:\n                rgData.reqindex = 3;\n                break;\n            case 22050:\n                rgData.reqindex = 4;\n                break;\n            case 16000:\n                rgData.reqindex = 5;\n                break;\n            case 12000:\n                rgData.reqindex = 6;\n                break;\n            case 11025:\n                rgData.reqindex = 7;\n                break;\n            case 8000:\n                rgData.reqindex = 8;\n                break;\n            default:\n                return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.sampleWindow = 0 | ((samplefreq * RMS_WINDOW_TIME_NUMERATOR\n            + RMS_WINDOW_TIME_DENOMINATOR - 1) / RMS_WINDOW_TIME_DENOMINATOR);\n\n        rgData.lsum = 0.;\n        rgData.rsum = 0.;\n        rgData.totsamp = 0;\n\n        Arrays$15.ill(rgData.A, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    }\n\n    this.InitGainAnalysis = function (rgData, samplefreq) {\n        if (ResetSampleFrequency(rgData, samplefreq) != INIT_GAIN_ANALYSIS_OK) {\n            return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.linpre = MAX_ORDER;\n        rgData.rinpre = MAX_ORDER;\n        rgData.lstep = MAX_ORDER;\n        rgData.rstep = MAX_ORDER;\n        rgData.lout = MAX_ORDER;\n        rgData.rout = MAX_ORDER;\n\n        Arrays$15.fill(rgData.B, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    };\n\n    /**\n     * square\n     */\n    function fsqr(d) {\n        return d * d;\n    }\n\n    this.AnalyzeSamples = function (rgData, left_samples, left_samplesPos, right_samples, right_samplesPos, num_samples,\n                                    num_channels) {\n        var curleft;\n        var curleftBase;\n        var curright;\n        var currightBase;\n        var batchsamples;\n        var cursamples;\n        var cursamplepos;\n\n        if (num_samples == 0)\n            return GAIN_ANALYSIS_OK;\n\n        cursamplepos = 0;\n        batchsamples = num_samples;\n\n        switch (num_channels) {\n            case 1:\n                right_samples = left_samples;\n                right_samplesPos = left_samplesPos;\n                break;\n            case 2:\n                break;\n            default:\n                return GAIN_ANALYSIS_ERROR;\n        }\n\n        if (num_samples < MAX_ORDER) {\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, num_samples);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, num_samples);\n        } else {\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, MAX_ORDER);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, MAX_ORDER);\n        }\n\n        while (batchsamples > 0) {\n            cursamples = batchsamples > rgData.sampleWindow - rgData.totsamp ? rgData.sampleWindow\n            - rgData.totsamp\n                : batchsamples;\n            if (cursamplepos < MAX_ORDER) {\n                curleft = rgData.linpre + cursamplepos;\n                curleftBase = rgData.linprebuf;\n                curright = rgData.rinpre + cursamplepos;\n                currightBase = rgData.rinprebuf;\n                if (cursamples > MAX_ORDER - cursamplepos)\n                    cursamples = MAX_ORDER - cursamplepos;\n            } else {\n                curleft = left_samplesPos + cursamplepos;\n                curleftBase = left_samples;\n                curright = right_samplesPos + cursamplepos;\n                currightBase = right_samples;\n            }\n\n            filterYule(curleftBase, curleft, rgData.lstepbuf, rgData.lstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n            filterYule(currightBase, curright, rgData.rstepbuf, rgData.rstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n\n            filterButter(rgData.lstepbuf, rgData.lstep + rgData.totsamp,\n                rgData.loutbuf, rgData.lout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n            filterButter(rgData.rstepbuf, rgData.rstep + rgData.totsamp,\n                rgData.routbuf, rgData.rout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n\n            curleft = rgData.lout + rgData.totsamp;\n            /* Get the squared values */\n            curleftBase = rgData.loutbuf;\n            curright = rgData.rout + rgData.totsamp;\n            currightBase = rgData.routbuf;\n\n            var i = cursamples % 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft++]);\n                rgData.rsum += fsqr(currightBase[curright++]);\n            }\n            i = cursamples / 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft + 0])\n                    + fsqr(curleftBase[curleft + 1])\n                    + fsqr(curleftBase[curleft + 2])\n                    + fsqr(curleftBase[curleft + 3])\n                    + fsqr(curleftBase[curleft + 4])\n                    + fsqr(curleftBase[curleft + 5])\n                    + fsqr(curleftBase[curleft + 6])\n                    + fsqr(curleftBase[curleft + 7]);\n                curleft += 8;\n                rgData.rsum += fsqr(currightBase[curright + 0])\n                    + fsqr(currightBase[curright + 1])\n                    + fsqr(currightBase[curright + 2])\n                    + fsqr(currightBase[curright + 3])\n                    + fsqr(currightBase[curright + 4])\n                    + fsqr(currightBase[curright + 5])\n                    + fsqr(currightBase[curright + 6])\n                    + fsqr(currightBase[curright + 7]);\n                curright += 8;\n            }\n\n            batchsamples -= cursamples;\n            cursamplepos += cursamples;\n            rgData.totsamp += cursamples;\n            if (rgData.totsamp == rgData.sampleWindow) {\n                /* Get the Root Mean Square (RMS) for this set of samples */\n                var val = GainAnalysis$1.STEPS_per_dB\n                    * 10.\n                    * Math.log10((rgData.lsum + rgData.rsum)\n                        / rgData.totsamp * 0.5 + 1.e-37);\n                var ival = (val <= 0) ? 0 : 0 | val;\n                if (ival >= rgData.A.length)\n                    ival = rgData.A.length - 1;\n                rgData.A[ival]++;\n                rgData.lsum = rgData.rsum = 0.;\n\n                System$15.arraycopy(rgData.loutbuf, rgData.totsamp,\n                    rgData.loutbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.routbuf, rgData.totsamp,\n                    rgData.routbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.lstepbuf, rgData.totsamp,\n                    rgData.lstepbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.rstepbuf, rgData.totsamp,\n                    rgData.rstepbuf, 0, MAX_ORDER);\n                rgData.totsamp = 0;\n            }\n            if (rgData.totsamp > rgData.sampleWindow) {\n                /*\n                 * somehow I really screwed up: Error in programming! Contact\n                 * author about totsamp > sampleWindow\n                 */\n                return GAIN_ANALYSIS_ERROR;\n            }\n        }\n        if (num_samples < MAX_ORDER) {\n            System$15.arraycopy(rgData.linprebuf, num_samples, rgData.linprebuf,\n                0, MAX_ORDER - num_samples);\n            System$15.arraycopy(rgData.rinprebuf, num_samples, rgData.rinprebuf,\n                0, MAX_ORDER - num_samples);\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER - num_samples, num_samples);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER - num_samples, num_samples);\n        } else {\n            System$15.arraycopy(left_samples, left_samplesPos + num_samples\n                - MAX_ORDER, rgData.linprebuf, 0, MAX_ORDER);\n            System$15.arraycopy(right_samples, right_samplesPos + num_samples\n                - MAX_ORDER, rgData.rinprebuf, 0, MAX_ORDER);\n        }\n\n        return GAIN_ANALYSIS_OK;\n    };\n\n    function analyzeResult(Array, len) {\n        var i;\n\n        var elems = 0;\n        for (i = 0; i < len; i++)\n            elems += Array[i];\n        if (elems == 0)\n            return GAIN_NOT_ENOUGH_SAMPLES;\n\n        var upper = 0 | Math.ceil(elems * (1. - RMS_PERCENTILE));\n        for (i = len; i-- > 0;) {\n            if ((upper -= Array[i]) <= 0)\n                break;\n        }\n\n        //return (float) ((float) PINK_REF - (float) i / (float) STEPS_per_dB);\n        return (PINK_REF - i / GainAnalysis$1.STEPS_per_dB);\n    }\n\n    this.GetTitleGain = function (rgData) {\n        var retval = analyzeResult(rgData.A, rgData.A.length);\n\n        for (var i = 0; i < rgData.A.length; i++) {\n            rgData.B[i] += rgData.A[i];\n            rgData.A[i] = 0;\n        }\n\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        rgData.totsamp = 0;\n        rgData.lsum = rgData.rsum = 0.;\n        return retval;\n    };\n\n}\n\nvar GainAnalysis_1 = GainAnalysis$1;\n\nvar new_float$14 = common.new_float;\nvar new_int$14 = common.new_int;\nfunction ReplayGain() {\n    this.linprebuf = new_float$14(GainAnalysis_1.MAX_ORDER * 2);\n    /**\n     * left input samples, with pre-buffer\n     */\n    this.linpre = 0;\n    this.lstepbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    /**\n     * left \"first step\" (i.e. post first filter) samples\n     */\n    this.lstep = 0;\n    this.loutbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    /**\n     * left \"out\" (i.e. post second filter) samples\n     */\n    this.lout = 0;\n    this.rinprebuf = new_float$14(GainAnalysis_1.MAX_ORDER * 2);\n    /**\n     * right input samples ...\n     */\n    this.rinpre = 0;\n    this.rstepbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    this.rstep = 0;\n    this.routbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    this.rout = 0;\n    /**\n     * number of samples required to reach number of milliseconds required\n     * for RMS window\n     */\n    this.sampleWindow = 0;\n    this.totsamp = 0;\n    this.lsum = 0.;\n    this.rsum = 0.;\n    this.freqindex = 0;\n    this.first = 0;\n    this.A = new_int$14(0 | (GainAnalysis_1.STEPS_per_dB * GainAnalysis_1.MAX_dB));\n    this.B = new_int$14(0 | (GainAnalysis_1.STEPS_per_dB * GainAnalysis_1.MAX_dB));\n\n}\n\nvar ReplayGain_1 = ReplayGain;\n\nfunction MeanBits$1(meanBits) {\n    this.bits = meanBits;\n}\n\nvar MeanBits_1 = MeanBits$1;\n\nvar new_float$16 = common.new_float;\nvar new_int$16 = common.new_int;\nvar assert$16 = common.assert;\n\n\n\n\n\n\nfunction CBRNewIterationLoop(_quantize)  {\n    var quantize = _quantize;\n    this.quantize = quantize;\n\tthis.iteration_loop = function(gfp, pe, ms_ener_ratio, ratio) {\n\t\tvar gfc = gfp.internal_flags;\n        var l3_xmin = new_float$16(L3Side_1.SFBMAX);\n\t\tvar xrpow = new_float$16(576);\n\t\tvar targ_bits = new_int$16(2);\n\t\tvar mean_bits = 0, max_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar mb = new MeanBits_1(mean_bits);\n\t\tthis.quantize.rv.ResvFrameBegin(gfp, mb);\n\t\tmean_bits = mb.bits;\n\n\t\t/* quantize! */\n\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\n\t\t\t/*\n\t\t\t * calculate needed bits\n\t\t\t */\n\t\t\tmax_bits = this.quantize.qupvt.on_pe(gfp, pe, targ_bits, mean_bits,\n\t\t\t\t\tgr, gr);\n\n\t\t\tif (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n\t\t\t\tthis.quantize.ms_convert(gfc.l3_side, gr);\n\t\t\t\tthis.quantize.qupvt.reduce_side(targ_bits, ms_ener_ratio[gr],\n\t\t\t\t\t\tmean_bits, max_bits);\n\t\t\t}\n\n\t\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\t\tvar adjust, masking_lower_db;\n\t\t\t\tvar cod_info = l3_side.tt[gr][ch];\n\n\t\t\t\tif (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n\t\t\t\t\t// NORM, START or STOP type\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust - adjust;\n\t\t\t\t} else {\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n\t\t\t\t}\n\t\t\t\tgfc.masking_lower =  Math.pow(10.0,\n\t\t\t\t\t\tmasking_lower_db * 0.1);\n\n\t\t\t\t/*\n\t\t\t\t * init_outer_loop sets up cod_info, scalefac and xrpow\n\t\t\t\t */\n\t\t\t\tthis.quantize.init_outer_loop(gfc, cod_info);\n\t\t\t\tif (this.quantize.init_xrpow(gfc, cod_info, xrpow)) {\n\t\t\t\t\t/*\n\t\t\t\t\t * xr contains energy we will have to encode calculate the\n\t\t\t\t\t * masking abilities find some good quantization in\n\t\t\t\t\t * outer_loop\n\t\t\t\t\t */\n\t\t\t\t\tthis.quantize.qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n\t\t\t\t\t\t\tl3_xmin);\n\t\t\t\t\tthis.quantize.outer_loop(gfp, cod_info, l3_xmin, xrpow, ch,\n\t\t\t\t\t\t\ttarg_bits[ch]);\n\t\t\t\t}\n\n\t\t\t\tthis.quantize.iteration_finish_one(gfc, gr, ch);\n\t\t\t\tassert$16 (cod_info.part2_3_length <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n\t\t\t\tassert$16 (cod_info.part2_3_length <= targ_bits[ch]);\n\t\t\t} /* for ch */\n\t\t} /* for gr */\n\n\t\tthis.quantize.rv.ResvFrameEnd(gfc, mean_bits);\n\t};\n}\nvar CBRNewIterationLoop_1 = CBRNewIterationLoop;\n\nfunction HuffCodeTab(len, max, tab, hl) {\n    this.xlen = len;\n    this.linmax = max;\n    this.table = tab;\n    this.hlen = hl;\n}\n\nvar Tables$1 = {};\n\n\nTables$1.t1HB = [\n    1, 1,\n    1, 0\n];\n\nTables$1.t2HB = [\n    1, 2, 1,\n    3, 1, 1,\n    3, 2, 0\n];\n\nTables$1.t3HB = [\n    3, 2, 1,\n    1, 1, 1,\n    3, 2, 0\n];\n\nTables$1.t5HB = [\n    1, 2, 6, 5,\n    3, 1, 4, 4,\n    7, 5, 7, 1,\n    6, 1, 1, 0\n];\n\nTables$1.t6HB = [\n    7, 3, 5, 1,\n    6, 2, 3, 2,\n    5, 4, 4, 1,\n    3, 3, 2, 0\n];\n\nTables$1.t7HB = [\n    1, 2, 10, 19, 16, 10,\n    3, 3, 7, 10, 5, 3,\n    11, 4, 13, 17, 8, 4,\n    12, 11, 18, 15, 11, 2,\n    7, 6, 9, 14, 3, 1,\n    6, 4, 5, 3, 2, 0\n];\n\nTables$1.t8HB = [\n    3, 4, 6, 18, 12, 5,\n    5, 1, 2, 16, 9, 3,\n    7, 3, 5, 14, 7, 3,\n    19, 17, 15, 13, 10, 4,\n    13, 5, 8, 11, 5, 1,\n    12, 4, 4, 1, 1, 0\n];\n\nTables$1.t9HB = [\n    7, 5, 9, 14, 15, 7,\n    6, 4, 5, 5, 6, 7,\n    7, 6, 8, 8, 8, 5,\n    15, 6, 9, 10, 5, 1,\n    11, 7, 9, 6, 4, 1,\n    14, 4, 6, 2, 6, 0\n];\n\nTables$1.t10HB = [\n    1, 2, 10, 23, 35, 30, 12, 17,\n    3, 3, 8, 12, 18, 21, 12, 7,\n    11, 9, 15, 21, 32, 40, 19, 6,\n    14, 13, 22, 34, 46, 23, 18, 7,\n    20, 19, 33, 47, 27, 22, 9, 3,\n    31, 22, 41, 26, 21, 20, 5, 3,\n    14, 13, 10, 11, 16, 6, 5, 1,\n    9, 8, 7, 8, 4, 4, 2, 0\n];\n\nTables$1.t11HB = [\n    3, 4, 10, 24, 34, 33, 21, 15,\n    5, 3, 4, 10, 32, 17, 11, 10,\n    11, 7, 13, 18, 30, 31, 20, 5,\n    25, 11, 19, 59, 27, 18, 12, 5,\n    35, 33, 31, 58, 30, 16, 7, 5,\n    28, 26, 32, 19, 17, 15, 8, 14,\n    14, 12, 9, 13, 14, 9, 4, 1,\n    11, 4, 6, 6, 6, 3, 2, 0\n];\n\nTables$1.t12HB = [\n    9, 6, 16, 33, 41, 39, 38, 26,\n    7, 5, 6, 9, 23, 16, 26, 11,\n    17, 7, 11, 14, 21, 30, 10, 7,\n    17, 10, 15, 12, 18, 28, 14, 5,\n    32, 13, 22, 19, 18, 16, 9, 5,\n    40, 17, 31, 29, 17, 13, 4, 2,\n    27, 12, 11, 15, 10, 7, 4, 1,\n    27, 12, 8, 12, 6, 3, 1, 0\n];\n\nTables$1.t13HB = [\n    1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19,\n    3, 4, 12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14,\n    15, 13, 23, 36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16,\n    22, 20, 37, 61, 56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14,\n    35, 16, 60, 57, 97, 75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24,\n    58, 27, 50, 96, 76, 70, 93, 84, 77, 58, 79, 29, 74, 49, 41, 17,\n    47, 45, 78, 74, 115, 94, 90, 79, 69, 83, 71, 50, 59, 38, 36, 15,\n    72, 34, 56, 95, 92, 85, 91, 90, 86, 73, 77, 65, 51, 44, 43, 42,\n    43, 20, 30, 44, 55, 78, 72, 87, 78, 61, 46, 54, 37, 30, 20, 16,\n    53, 25, 41, 37, 44, 59, 54, 81, 66, 76, 57, 54, 37, 18, 39, 11,\n    35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55, 21, 22, 26, 38, 22,\n    53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23, 27, 14, 9, 7,\n    34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18, 17, 9, 5,\n    45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6, 3,\n    48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2,\n    16, 15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1\n];\n\nTables$1.t15HB = [\n    7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122, 63,\n    13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36,\n    19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33,\n    29, 28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29,\n    52, 22, 42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27,\n    77, 37, 35, 66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38,\n    125, 32, 60, 56, 50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30,\n    109, 53, 49, 94, 88, 75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25,\n    90, 43, 41, 77, 73, 63, 56, 92, 77, 66, 47, 67, 48, 53, 36, 20,\n    71, 34, 67, 60, 58, 49, 88, 76, 67, 106, 71, 54, 38, 39, 23, 15,\n    109, 53, 51, 47, 90, 82, 58, 57, 48, 72, 57, 41, 23, 27, 62, 9,\n    86, 42, 40, 37, 70, 64, 52, 43, 70, 55, 42, 25, 29, 18, 11, 11,\n    118, 68, 30, 55, 50, 46, 74, 65, 49, 39, 24, 16, 22, 13, 14, 7,\n    91, 44, 39, 38, 34, 63, 52, 45, 31, 52, 28, 19, 14, 8, 9, 3,\n    123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17, 12, 15, 10, 2, 1,\n    71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8, 6, 2, 0\n];\n\nTables$1.t16HB = [\n    1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376, 17,\n    3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9,\n    15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206, 16,\n    45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387, 365, 26,\n    75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226, 395, 382, 362, 9,\n    66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232, 400, 388, 378, 445, 16,\n    111, 54, 52, 100, 184, 178, 160, 133, 257, 244, 228, 217, 385, 366, 715, 10,\n    98, 48, 91, 88, 165, 157, 148, 261, 248, 407, 397, 372, 380, 889, 884, 8,\n    85, 84, 81, 159, 156, 143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7,\n    154, 76, 73, 141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11,\n    139, 129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439, 4,\n    243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706, 223, 436, 6,\n    202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443, 707, 440, 437, 1728, 4,\n    747, 211, 210, 208, 370, 379, 734, 723, 714, 1735, 883, 877, 876, 3459, 865, 2,\n    377, 369, 102, 187, 726, 722, 358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0,\n    12, 10, 7, 11, 10, 17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3\n];\n\nTables$1.t24HB = [\n    15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517, 1032, 88,\n    14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345, 319, 297, 279, 42,\n    47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182, 340, 315, 295, 541, 18,\n    81, 39, 75, 70, 134, 125, 116, 220, 204, 190, 178, 325, 311, 293, 271, 16,\n    147, 72, 69, 135, 127, 118, 112, 210, 200, 188, 352, 323, 306, 285, 540, 14,\n    263, 66, 129, 126, 119, 114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12,\n    249, 123, 121, 117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10,\n    435, 115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531, 381, 17,\n    427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286, 268, 514, 377, 16,\n    335, 199, 197, 191, 189, 181, 174, 333, 321, 305, 289, 275, 521, 379, 371, 11,\n    668, 184, 183, 179, 175, 344, 331, 314, 304, 290, 277, 530, 383, 373, 366, 10,\n    652, 346, 171, 168, 164, 318, 309, 299, 287, 276, 263, 513, 375, 368, 362, 6,\n    648, 322, 316, 312, 307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4,\n    620, 300, 296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2,\n    1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360, 358, 356, 0,\n    43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3\n];\n\nTables$1.t32HB = [\n    1 << 0, 5 << 1, 4 << 1, 5 << 2, 6 << 1, 5 << 2, 4 << 2, 4 << 3,\n    7 << 1, 3 << 2, 6 << 2, 0 << 3, 7 << 2, 2 << 3, 3 << 3, 1 << 4\n];\n\nTables$1.t33HB = [\n    15 << 0, 14 << 1, 13 << 1, 12 << 2, 11 << 1, 10 << 2, 9 << 2, 8 << 3,\n    7 << 1, 6 << 2, 5 << 2, 4 << 3, 3 << 2, 2 << 3, 1 << 3, 0 << 4\n];\n\nTables$1.t1l = [\n    1, 4,\n    3, 5\n];\n\nTables$1.t2l = [\n    1, 4, 7,\n    4, 5, 7,\n    6, 7, 8\n];\n\nTables$1.t3l = [\n    2, 3, 7,\n    4, 4, 7,\n    6, 7, 8\n];\n\nTables$1.t5l = [\n    1, 4, 7, 8,\n    4, 5, 8, 9,\n    7, 8, 9, 10,\n    8, 8, 9, 10\n];\n\nTables$1.t6l = [\n    3, 4, 6, 8,\n    4, 4, 6, 7,\n    5, 6, 7, 8,\n    7, 7, 8, 9\n];\n\nTables$1.t7l = [\n    1, 4, 7, 9, 9, 10,\n    4, 6, 8, 9, 9, 10,\n    7, 7, 9, 10, 10, 11,\n    8, 9, 10, 11, 11, 11,\n    8, 9, 10, 11, 11, 12,\n    9, 10, 11, 12, 12, 12\n];\n\nTables$1.t8l = [\n    2, 4, 7, 9, 9, 10,\n    4, 4, 6, 10, 10, 10,\n    7, 6, 8, 10, 10, 11,\n    9, 10, 10, 11, 11, 12,\n    9, 9, 10, 11, 12, 12,\n    10, 10, 11, 11, 13, 13\n];\n\nTables$1.t9l = [\n    3, 4, 6, 7, 9, 10,\n    4, 5, 6, 7, 8, 10,\n    5, 6, 7, 8, 9, 10,\n    7, 7, 8, 9, 9, 10,\n    8, 8, 9, 9, 10, 11,\n    9, 9, 10, 10, 11, 11\n];\n\nTables$1.t10l = [\n    1, 4, 7, 9, 10, 10, 10, 11,\n    4, 6, 8, 9, 10, 11, 10, 10,\n    7, 8, 9, 10, 11, 12, 11, 11,\n    8, 9, 10, 11, 12, 12, 11, 12,\n    9, 10, 11, 12, 12, 12, 12, 12,\n    10, 11, 12, 12, 13, 13, 12, 13,\n    9, 10, 11, 12, 12, 12, 13, 13,\n    10, 10, 11, 12, 12, 13, 13, 13\n];\n\nTables$1.t11l = [\n    2, 4, 6, 8, 9, 10, 9, 10,\n    4, 5, 6, 8, 10, 10, 9, 10,\n    6, 7, 8, 9, 10, 11, 10, 10,\n    8, 8, 9, 11, 10, 12, 10, 11,\n    9, 10, 10, 11, 11, 12, 11, 12,\n    9, 10, 11, 12, 12, 13, 12, 13,\n    9, 9, 9, 10, 11, 12, 12, 12,\n    9, 9, 10, 11, 12, 12, 12, 12\n];\n\nTables$1.t12l = [\n    4, 4, 6, 8, 9, 10, 10, 10,\n    4, 5, 6, 7, 9, 9, 10, 10,\n    6, 6, 7, 8, 9, 10, 9, 10,\n    7, 7, 8, 8, 9, 10, 10, 10,\n    8, 8, 9, 9, 10, 10, 10, 11,\n    9, 9, 10, 10, 10, 11, 10, 11,\n    9, 9, 9, 10, 10, 11, 11, 12,\n    10, 10, 10, 11, 11, 11, 11, 12\n];\n\nTables$1.t13l = [\n    1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14,\n    4, 6, 8, 9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14,\n    7, 8, 9, 10, 11, 11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15,\n    8, 9, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 15,\n    9, 9, 11, 11, 12, 12, 13, 13, 12, 13, 13, 14, 14, 15, 15, 16,\n    10, 10, 11, 12, 12, 12, 13, 13, 13, 13, 14, 13, 15, 15, 16, 16,\n    10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16,\n    11, 11, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 18, 18,\n    10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 17, 17,\n    11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16, 16, 16, 18, 17,\n    11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16, 17, 18, 19,\n    12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17, 17, 18,\n    12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18, 18,\n    13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18,\n    14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18,\n    13, 14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18\n];\n\nTables$1.t15l = [\n    3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14,\n    5, 5, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13,\n    6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13,\n    7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14,\n    10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14,\n    10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15,\n    12, 12, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15,\n    12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15,\n    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15,\n    13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15\n];\n\nTables$1.t16_5l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 13,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 12,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 13,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 13,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 13,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 13,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 14,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 13,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 14,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 14,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14,\n    11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12\n];\n\nTables$1.t16l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 12,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 11,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 12,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 12,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 12,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 12,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 13,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 12,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 13,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 13,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13,\n    10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10\n];\n\nTables$1.t24l = [\n    4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10,\n    5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10,\n    7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 9,\n    8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 9,\n    9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 9,\n    10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 9,\n    10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 9,\n    11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 10,\n    12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10,\n    13, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10,\n    9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6\n];\n\nTables$1.t32l = [\n    1 + 0, 4 + 1, 4 + 1, 5 + 2, 4 + 1, 6 + 2, 5 + 2, 6 + 3,\n    4 + 1, 5 + 2, 5 + 2, 6 + 3, 5 + 2, 6 + 3, 6 + 3, 6 + 4\n];\n\nTables$1.t33l = [\n    4 + 0, 4 + 1, 4 + 1, 4 + 2, 4 + 1, 4 + 2, 4 + 2, 4 + 3,\n    4 + 1, 4 + 2, 4 + 2, 4 + 3, 4 + 2, 4 + 3, 4 + 3, 4 + 4\n];\n\nTables$1.ht = [\n    /* xlen, linmax, table, hlen */\n    new HuffCodeTab(0, 0, null, null),\n    new HuffCodeTab(2, 0, Tables$1.t1HB, Tables$1.t1l),\n    new HuffCodeTab(3, 0, Tables$1.t2HB, Tables$1.t2l),\n    new HuffCodeTab(3, 0, Tables$1.t3HB, Tables$1.t3l),\n    new HuffCodeTab(0, 0, null, null), /* Apparently not used */\n    new HuffCodeTab(4, 0, Tables$1.t5HB, Tables$1.t5l),\n    new HuffCodeTab(4, 0, Tables$1.t6HB, Tables$1.t6l),\n    new HuffCodeTab(6, 0, Tables$1.t7HB, Tables$1.t7l),\n    new HuffCodeTab(6, 0, Tables$1.t8HB, Tables$1.t8l),\n    new HuffCodeTab(6, 0, Tables$1.t9HB, Tables$1.t9l),\n    new HuffCodeTab(8, 0, Tables$1.t10HB, Tables$1.t10l),\n    new HuffCodeTab(8, 0, Tables$1.t11HB, Tables$1.t11l),\n    new HuffCodeTab(8, 0, Tables$1.t12HB, Tables$1.t12l),\n    new HuffCodeTab(16, 0, Tables$1.t13HB, Tables$1.t13l),\n    new HuffCodeTab(0, 0, null, Tables$1.t16_5l), /* Apparently not used */\n    new HuffCodeTab(16, 0, Tables$1.t15HB, Tables$1.t15l),\n\n    new HuffCodeTab(1, 1, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(2, 3, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(3, 7, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(4, 15, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(6, 63, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(8, 255, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(10, 1023, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(13, 8191, Tables$1.t16HB, Tables$1.t16l),\n\n    new HuffCodeTab(4, 15, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(5, 31, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(6, 63, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(7, 127, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(8, 255, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(9, 511, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(11, 2047, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(13, 8191, Tables$1.t24HB, Tables$1.t24l),\n\n    new HuffCodeTab(0, 0, Tables$1.t32HB, Tables$1.t32l),\n    new HuffCodeTab(0, 0, Tables$1.t33HB, Tables$1.t33l),\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 16*16; i++) [\n *      largetbl[i] = ((ht[16].hlen[i]) << 16) + ht[24].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables$1.largetbl = [\n    0x010004, 0x050005, 0x070007, 0x090008, 0x0a0009, 0x0a000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000c, 0x0c000c, 0x0d000c, 0x0d000c, 0x0d000c, 0x0e000d, 0x0a000a,\n    0x040005, 0x060006, 0x080007, 0x090008, 0x0a0009, 0x0b000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000b, 0x0c000c, 0x0d000c, 0x0e000c, 0x0d000c, 0x0e000c, 0x0a000a,\n    0x070007, 0x080007, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0c000b, 0x0d000b, 0x0d000c, 0x0d000c, 0x0e000c, 0x0e000d, 0x0b0009,\n    0x090008, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0c0009,\n    0x0a0009, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000a, 0x0d000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000d, 0x0b0009,\n    0x0a000a, 0x0a0009, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0e000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0c0009,\n    0x0b000a, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0d000b, 0x0d000b,\n    0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000d, 0x0c0009,\n    0x0b000b, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b,\n    0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x11000d, 0x11000d, 0x0c000a,\n    0x0b000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b,\n    0x0f000b, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000d, 0x10000d, 0x0c000a,\n    0x0c000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b, 0x0f000c,\n    0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0f000d, 0x10000d, 0x0f000d, 0x0d000a,\n    0x0c000c, 0x0d000b, 0x0c000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c,\n    0x0f000c, 0x10000c, 0x10000c, 0x10000d, 0x11000d, 0x11000d, 0x10000d, 0x0c000a,\n    0x0d000c, 0x0d000c, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x10000c,\n    0x10000c, 0x10000c, 0x10000c, 0x10000d, 0x10000d, 0x0f000d, 0x10000d, 0x0d000a,\n    0x0d000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c,\n    0x0f000c, 0x11000c, 0x10000d, 0x10000d, 0x10000d, 0x10000d, 0x12000d, 0x0d000a,\n    0x0f000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000c,\n    0x10000d, 0x12000d, 0x11000d, 0x11000d, 0x11000d, 0x13000d, 0x11000d, 0x0d000a,\n    0x0e000d, 0x0f000c, 0x0d000c, 0x0e000c, 0x10000c, 0x10000c, 0x0f000c, 0x10000d,\n    0x10000d, 0x11000d, 0x12000d, 0x11000d, 0x13000d, 0x11000d, 0x10000d, 0x0d000a,\n    0x0a0009, 0x0a0009, 0x0a0009, 0x0b0009, 0x0b0009, 0x0c0009, 0x0c0009, 0x0c0009,\n    0x0d0009, 0x0d0009, 0x0d0009, 0x0d000a, 0x0d000a, 0x0d000a, 0x0d000a, 0x0a0006\n];\n/**\n * <CODE>\n *  for (i = 0; i < 3*3; i++) [\n *      table23[i] = ((ht[2].hlen[i]) << 16) + ht[3].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables$1.table23 = [\n    0x010002, 0x040003, 0x070007,\n    0x040004, 0x050004, 0x070007,\n    0x060006, 0x070007, 0x080008\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 4*4; i++) [\n *       table56[i] = ((ht[5].hlen[i]) << 16) + ht[6].hlen[i];\n *   ]\n * </CODE>\n *\n */\nTables$1.table56 = [\n    0x010003, 0x040004, 0x070006, 0x080008, 0x040004, 0x050004, 0x080006, 0x090007,\n    0x070005, 0x080006, 0x090007, 0x0a0008, 0x080007, 0x080007, 0x090008, 0x0a0009\n];\n\nTables$1.bitrate_table = [\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1], /* MPEG 2 */\n    [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1], /* MPEG 1 */\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1], /* MPEG 2.5 */\n];\n\n/**\n * MPEG 2, MPEG 1, MPEG 2.5.\n */\nTables$1.samplerate_table = [\n    [22050, 24000, 16000, -1],\n    [44100, 48000, 32000, -1],\n    [11025, 12000, 8000, -1],\n];\n\n/**\n * This is the scfsi_band table from 2.4.2.7 of the IS.\n */\nTables$1.scfsi_band = [0, 6, 11, 16, 21];\n\nvar Tables_1 = Tables$1;\n\nvar VbrMode$19 = common.VbrMode;\nvar Float$19 = common.Float;\nvar Util$19 = common.Util;\nvar new_float$19 = common.new_float;\nvar new_int$19 = common.new_int;\nvar assert$19 = common.assert;\n\n\n\n\n\nQuantizePVT$1.Q_MAX = (256 + 1);\nQuantizePVT$1.Q_MAX2 = 116;\nQuantizePVT$1.LARGE_BITS = 100000;\nQuantizePVT$1.IXMAX_VAL = 8206;\n\nfunction QuantizePVT$1() {\n\n    var tak = null;\n    var rv = null;\n    var psy = null;\n\n    this.setModules = function (_tk, _rv, _psy) {\n        tak = _tk;\n        rv = _rv;\n        psy = _psy;\n    };\n\n    function POW20(x) {\n        assert$19(0 <= (x + QuantizePVT$1.Q_MAX2) && x < QuantizePVT$1.Q_MAX);\n        return pow20[x + QuantizePVT$1.Q_MAX2];\n    }\n\n    this.IPOW20 = function (x) {\n        assert$19(0 <= x && x < QuantizePVT$1.Q_MAX);\n        return ipow20[x];\n    };\n\n    /**\n     * smallest such that 1.0+DBL_EPSILON != 1.0\n     */\n    var DBL_EPSILON = 2.2204460492503131e-016;\n\n    /**\n     * ix always <= 8191+15. see count_bits()\n     */\n    var IXMAX_VAL = QuantizePVT$1.IXMAX_VAL;\n\n    var PRECALC_SIZE = (IXMAX_VAL + 2);\n\n    var Q_MAX = QuantizePVT$1.Q_MAX;\n\n\n    /**\n     * <CODE>\n     * minimum possible number of\n     * -cod_info.global_gain + ((scalefac[] + (cod_info.preflag ? pretab[sfb] : 0))\n     * << (cod_info.scalefac_scale + 1)) + cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n     *\n     * for long block, 0+((15+3)<<2) = 18*4 = 72\n     * for short block, 0+(15<<2)+7*8 = 15*4+56 = 116\n     * </CODE>\n     */\n    var Q_MAX2 = QuantizePVT$1.Q_MAX2;\n\n    var LARGE_BITS = QuantizePVT$1.LARGE_BITS;\n\n\n    /**\n     * Assuming dynamic range=96dB, this value should be 92\n     */\n    var NSATHSCALE = 100;\n\n    /**\n     * The following table is used to implement the scalefactor partitioning for\n     * MPEG2 as described in section 2.4.3.2 of the IS. The indexing corresponds\n     * to the way the tables are presented in the IS:\n     *\n     * [table_number][row_in_table][column of nr_of_sfb]\n     */\n    this.nr_of_sfb_block = [\n        [[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]],\n        [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]],\n        [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]],\n        [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]],\n        [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]],\n        [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]];\n\n    /**\n     * Table B.6: layer3 preemphasis\n     */\n    var pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n        2, 2, 3, 3, 3, 2, 0];\n    this.pretab = pretab;\n\n    /**\n     * Here are MPEG1 Table B.8 and MPEG2 Table B.1 -- Layer III scalefactor\n     * bands. <BR>\n     * Index into this using a method such as:<BR>\n     * idx = fr_ps.header.sampling_frequency + (fr_ps.header.version * 3)\n     */\n    this.sfBandIndex = [\n        // Table B.2.b: 22.05 kHz\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb21 pseudo sub bands\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb12 pseudo sub bands\n        ),\n        /* Table B.2.c: 24 kHz */ /* docs: 332. mpg123(broken): 330 */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 332, 394, 464,\n                540, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.2.a: 16 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.b: 44.1 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.c: 48 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384,\n                576],\n            [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.a: 32 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 11.025 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 12 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 8 kHz */\n        new ScaleFac_1([0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570,\n                572, 574, 576],\n            [0 / 3, 24 / 3, 48 / 3, 72 / 3, 108 / 3, 156 / 3, 216 / 3, 288 / 3, 372 / 3, 480 / 3, 486 / 3,\n                492 / 3, 498 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        )\n    ];\n\n    var pow20 = new_float$19(Q_MAX + Q_MAX2 + 1);\n    var ipow20 = new_float$19(Q_MAX);\n    var pow43 = new_float$19(PRECALC_SIZE);\n\n    var adj43 = new_float$19(PRECALC_SIZE);\n    this.adj43 = adj43;\n\n    /**\n     * <PRE>\n     * compute the ATH for each scalefactor band cd range: 0..96db\n     *\n     * Input: 3.3kHz signal 32767 amplitude (3.3kHz is where ATH is smallest =\n     * -5db) longblocks: sfb=12 en0/bw=-11db max_en0 = 1.3db shortblocks: sfb=5\n     * -9db 0db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) longblocks: amp=1\n     * sfb=12 en0/bw=-103 db max_en0 = -92db amp=32767 sfb=12 -12 db -1.4db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) shortblocks: amp=1\n     * sfb=5 en0/bw= -99 -86 amp=32767 sfb=5 -9 db 4db\n     *\n     *\n     * MAX energy of largest wave at 3.3kHz = 1db AVE energy of largest wave at\n     * 3.3kHz = -11db Let's take AVE: -11db = maximum signal in sfb=12. Dynamic\n     * range of CD: 96db. Therefor energy of smallest audible wave in sfb=12 =\n     * -11 - 96 = -107db = ATH at 3.3kHz.\n     *\n     * ATH formula for this wave: -5db. To adjust to LAME scaling, we need ATH =\n     * ATH_formula - 103 (db) ATH = ATH * 2.5e-10 (ener)\n     * </PRE>\n     */\n    function ATHmdct(gfp, f) {\n        var ath = psy.ATHformula(f, gfp);\n\n        ath -= NSATHSCALE;\n\n        /* modify the MDCT scaling for the ATH and convert to energy */\n        ath = Math.pow(10.0, ath / 10.0 + gfp.ATHlower);\n        return ath;\n    }\n\n    function compute_ath(gfp) {\n        var ATH_l = gfp.internal_flags.ATH.l;\n        var ATH_psfb21 = gfp.internal_flags.ATH.psfb21;\n        var ATH_s = gfp.internal_flags.ATH.s;\n        var ATH_psfb12 = gfp.internal_flags.ATH.psfb12;\n        var gfc = gfp.internal_flags;\n        var samp_freq = gfp.out_samplerate;\n\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            ATH_l[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_l[sfb] = Math.min(ATH_l[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.PSFB21; sfb++) {\n            var start = gfc.scalefac_band.psfb21[sfb];\n            var end = gfc.scalefac_band.psfb21[sfb + 1];\n            ATH_psfb21[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb21[sfb] = Math.min(ATH_psfb21[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_s; sfb++) {\n            var start = gfc.scalefac_band.s[sfb];\n            var end = gfc.scalefac_band.s[sfb + 1];\n            ATH_s[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_s[sfb] = Math.min(ATH_s[sfb], ATH_f);\n            }\n            ATH_s[sfb] *= (gfc.scalefac_band.s[sfb + 1] - gfc.scalefac_band.s[sfb]);\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.PSFB12; sfb++) {\n            var start = gfc.scalefac_band.psfb12[sfb];\n            var end = gfc.scalefac_band.psfb12[sfb + 1];\n            ATH_psfb12[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb12[sfb] = Math.min(ATH_psfb12[sfb], ATH_f);\n            }\n            /* not sure about the following */\n            ATH_psfb12[sfb] *= (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12]);\n        }\n\n        /*\n         * no-ATH mode: reduce ATH to -200 dB\n         */\n        if (gfp.noATH) {\n            for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n                ATH_l[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.PSFB21; sfb++) {\n                ATH_psfb21[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.SBMAX_s; sfb++) {\n                ATH_s[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.PSFB12; sfb++) {\n                ATH_psfb12[sfb] = 1E-20;\n            }\n        }\n\n        /*\n         * work in progress, don't rely on it too much\n         */\n        gfc.ATH.floor = 10. * Math.log10(ATHmdct(gfp, -1.));\n    }\n\n    /**\n     * initialization for iteration_loop\n     */\n    this.iteration_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var i;\n\n        if (gfc.iteration_init_init == 0) {\n            gfc.iteration_init_init = 1;\n\n            l3_side.main_data_begin = 0;\n            compute_ath(gfp);\n\n            pow43[0] = 0.0;\n            for (i = 1; i < PRECALC_SIZE; i++)\n                pow43[i] = Math.pow(i, 4.0 / 3.0);\n\n            for (i = 0; i < PRECALC_SIZE - 1; i++)\n                adj43[i] = ((i + 1) - Math.pow(\n                    0.5 * (pow43[i] + pow43[i + 1]), 0.75));\n            adj43[i] = 0.5;\n\n            for (i = 0; i < Q_MAX; i++)\n                ipow20[i] = Math.pow(2.0, (i - 210) * -0.1875);\n            for (i = 0; i <= Q_MAX + Q_MAX2; i++)\n                pow20[i] = Math.pow(2.0, (i - 210 - Q_MAX2) * 0.25);\n\n            tak.huffman_init(gfc);\n\n            {\n                var bass, alto, treble, sfb21;\n\n                i = (gfp.exp_nspsytune >> 2) & 63;\n                if (i >= 32)\n                    i -= 64;\n                bass = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 8) & 63;\n                if (i >= 32)\n                    i -= 64;\n                alto = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 14) & 63;\n                if (i >= 32)\n                    i -= 64;\n                treble = Math.pow(10, i / 4.0 / 10.0);\n\n                /*\n                 * to be compatible with Naoki's original code, the next 6 bits\n                 * define only the amount of changing treble for sfb21\n                 */\n                i = (gfp.exp_nspsytune >> 20) & 63;\n                if (i >= 32)\n                    i -= 64;\n                sfb21 = treble * Math.pow(10, i / 4.0 / 10.0);\n                for (i = 0; i < Encoder_1.SBMAX_l; i++) {\n                    var f;\n                    if (i <= 6)\n                        f = bass;\n                    else if (i <= 13)\n                        f = alto;\n                    else if (i <= 20)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.longfact[i] = f;\n                }\n                for (i = 0; i < Encoder_1.SBMAX_s; i++) {\n                    var f;\n                    if (i <= 5)\n                        f = bass;\n                    else if (i <= 10)\n                        f = alto;\n                    else if (i <= 11)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.shortfact[i] = f;\n                }\n            }\n        }\n    };\n\n    /**\n     * allocate bits among 2 channels based on PE<BR>\n     * mt 6/99<BR>\n     * bugfixes rh 8/01: often allocated more than the allowed 4095 bits\n     */\n    this.on_pe = function (gfp, pe,\n                           targ_bits, mean_bits, gr, cbr) {\n        var gfc = gfp.internal_flags;\n        var tbits = 0, bits;\n        var add_bits = new_int$19(2);\n        var ch;\n\n        /* allocate targ_bits for granule */\n        var mb = new MeanBits_1(tbits);\n        var extra_bits = rv.ResvMaxBits(gfp, mean_bits, mb, cbr);\n        tbits = mb.bits;\n        /* maximum allowed bits for this granule */\n        var max_bits = tbits + extra_bits;\n        if (max_bits > LameInternalFlags_1.MAX_BITS_PER_GRANULE) {\n            // hard limit per granule\n            max_bits = LameInternalFlags_1.MAX_BITS_PER_GRANULE;\n        }\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            /******************************************************************\n             * allocate bits for each channel\n             ******************************************************************/\n            targ_bits[ch] = Math.min(LameInternalFlags_1.MAX_BITS_PER_CHANNEL,\n                tbits / gfc.channels_out);\n\n            add_bits[ch] = 0 | (targ_bits[ch] * pe[gr][ch] / 700.0 - targ_bits[ch]);\n\n            /* at most increase bits by 1.5*average */\n            if (add_bits[ch] > mean_bits * 3 / 4)\n                add_bits[ch] = mean_bits * 3 / 4;\n            if (add_bits[ch] < 0)\n                add_bits[ch] = 0;\n\n            if (add_bits[ch] + targ_bits[ch] > LameInternalFlags_1.MAX_BITS_PER_CHANNEL)\n                add_bits[ch] = Math.max(0,\n                    LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[ch]);\n\n            bits += add_bits[ch];\n        }\n        if (bits > extra_bits) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                add_bits[ch] = extra_bits * add_bits[ch] / bits;\n            }\n        }\n\n        for (ch = 0; ch < gfc.channels_out; ++ch) {\n            targ_bits[ch] += add_bits[ch];\n            extra_bits -= add_bits[ch];\n        }\n\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            bits += targ_bits[ch];\n        }\n        if (bits > LameInternalFlags_1.MAX_BITS_PER_GRANULE) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                targ_bits[ch] *= LameInternalFlags_1.MAX_BITS_PER_GRANULE;\n                targ_bits[ch] /= bits;\n                sum += targ_bits[ch];\n            }\n            assert$19(sum <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n        }\n\n        return max_bits;\n    };\n\n    this.reduce_side = function (targ_bits, ms_ener_ratio, mean_bits, max_bits) {\n        assert$19(max_bits <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n        assert$19(targ_bits[0] + targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n\n        /*\n         * ms_ener_ratio = 0: allocate 66/33 mid/side fac=.33 ms_ener_ratio =.5:\n         * allocate 50/50 mid/side fac= 0\n         */\n        /* 75/25 split is fac=.5 */\n        var fac = .33 * (.5 - ms_ener_ratio) / .5;\n        if (fac < 0)\n            fac = 0;\n        if (fac > .5)\n            fac = .5;\n\n        /* number of bits to move from side channel to mid channel */\n        /* move_bits = fac*targ_bits[1]; */\n        var move_bits = 0 | (fac * .5 * (targ_bits[0] + targ_bits[1]));\n\n        if (move_bits > LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[0]) {\n            move_bits = LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[0];\n        }\n        if (move_bits < 0)\n            move_bits = 0;\n\n        if (targ_bits[1] >= 125) {\n            /* dont reduce side channel below 125 bits */\n            if (targ_bits[1] - move_bits > 125) {\n\n                /* if mid channel already has 2x more than average, dont bother */\n                /* mean_bits = bits per granule (for both channels) */\n                if (targ_bits[0] < mean_bits)\n                    targ_bits[0] += move_bits;\n                targ_bits[1] -= move_bits;\n            } else {\n                targ_bits[0] += targ_bits[1] - 125;\n                targ_bits[1] = 125;\n            }\n        }\n\n        move_bits = targ_bits[0] + targ_bits[1];\n        if (move_bits > max_bits) {\n            targ_bits[0] = (max_bits * targ_bits[0]) / move_bits;\n            targ_bits[1] = (max_bits * targ_bits[1]) / move_bits;\n        }\n        assert$19(targ_bits[0] <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n        assert$19(targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n        assert$19(targ_bits[0] + targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n    };\n\n    /**\n     *  Robert Hegemann 2001-04-27:\n     *  this adjusts the ATH, keeping the original noise floor\n     *  affects the higher frequencies more than the lower ones\n     */\n    this.athAdjust = function (a, x, athFloor) {\n        /*\n         * work in progress\n         */\n        var o = 90.30873362;\n        var p = 94.82444863;\n        var u = Util$19.FAST_LOG10_X(x, 10.0);\n        var v = a * a;\n        var w = 0.0;\n        u -= athFloor;\n        /* undo scaling */\n        if (v > 1E-20)\n            w = 1. + Util$19.FAST_LOG10_X(v, 10.0 / o);\n        if (w < 0)\n            w = 0.;\n        u *= w;\n        u += athFloor + o - p;\n        /* redo scaling */\n\n        return Math.pow(10., 0.1 * u);\n    };\n\n    /**\n     * Calculate the allowed distortion for each scalefactor band, as determined\n     * by the psychoacoustic model. xmin(sb) = ratio(sb) * en(sb) / bw(sb)\n     *\n     * returns number of sfb's with energy > ATH\n     */\n    this.calc_xmin = function (gfp, ratio, cod_info, pxmin) {\n        var pxminPos = 0;\n        var gfc = gfp.internal_flags;\n        var gsfb, j = 0, ath_over = 0;\n        var ATH = gfc.ATH;\n        var xr = cod_info.xr;\n        var enable_athaa_fix = (gfp.VBR == VbrMode$19.vbr_mtrh) ? 1 : 0;\n        var masking_lower = gfc.masking_lower;\n\n        if (gfp.VBR == VbrMode$19.vbr_mtrh || gfp.VBR == VbrMode$19.vbr_mt) {\n            /* was already done in PSY-Model */\n            masking_lower = 1.0;\n        }\n\n        for (gsfb = 0; gsfb < cod_info.psy_lmax; gsfb++) {\n            var en0, xmin;\n            var rh1, rh2;\n            var width, l;\n\n            if (gfp.VBR == VbrMode$19.vbr_rh || gfp.VBR == VbrMode$19.vbr_mtrh)\n                xmin = athAdjust(ATH.adjust, ATH.l[gsfb], ATH.floor);\n            else\n                xmin = ATH.adjust * ATH.l[gsfb];\n\n            width = cod_info.width[gsfb];\n            rh1 = xmin / width;\n            rh2 = DBL_EPSILON;\n            l = width >> 1;\n            en0 = 0.0;\n            do {\n                var xa, xb;\n                xa = xr[j] * xr[j];\n                en0 += xa;\n                rh2 += (xa < rh1) ? xa : rh1;\n                j++;\n                xb = xr[j] * xr[j];\n                en0 += xb;\n                rh2 += (xb < rh1) ? xb : rh1;\n                j++;\n            } while (--l > 0);\n            if (en0 > xmin)\n                ath_over++;\n\n            if (gsfb == Encoder_1.SBPSY_l) {\n                var x = xmin * gfc.nsPsy.longfact[gsfb];\n                if (rh2 < x) {\n                    rh2 = x;\n                }\n            }\n            if (enable_athaa_fix != 0) {\n                xmin = rh2;\n            }\n            if (!gfp.ATHonly) {\n                var e = ratio.en.l[gsfb];\n                if (e > 0.0) {\n                    var x;\n                    x = en0 * ratio.thm.l[gsfb] * masking_lower / e;\n                    if (enable_athaa_fix != 0)\n                        x *= gfc.nsPsy.longfact[gsfb];\n                    if (xmin < x)\n                        xmin = x;\n                }\n            }\n            if (enable_athaa_fix != 0)\n                pxmin[pxminPos++] = xmin;\n            else\n                pxmin[pxminPos++] = xmin * gfc.nsPsy.longfact[gsfb];\n        }\n        /* end of long block loop */\n\n        /* use this function to determine the highest non-zero coeff */\n        var max_nonzero = 575;\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n            // NORM, START or STOP type, but not SHORT\n            var k = 576;\n            while (k-- != 0 && BitStream.EQ(xr[k], 0)) {\n                max_nonzero = k;\n            }\n        }\n        cod_info.max_nonzero_coeff = max_nonzero;\n\n        for (var sfb = cod_info.sfb_smin; gsfb < cod_info.psymax; sfb++, gsfb += 3) {\n            var width, b;\n            var tmpATH;\n            if (gfp.VBR == VbrMode$19.vbr_rh || gfp.VBR == VbrMode$19.vbr_mtrh)\n                tmpATH = athAdjust(ATH.adjust, ATH.s[sfb], ATH.floor);\n            else\n                tmpATH = ATH.adjust * ATH.s[sfb];\n\n            width = cod_info.width[gsfb];\n            for (b = 0; b < 3; b++) {\n                var en0 = 0.0, xmin;\n                var rh1, rh2;\n                var l = width >> 1;\n\n                rh1 = tmpATH / width;\n                rh2 = DBL_EPSILON;\n                do {\n                    var xa, xb;\n                    xa = xr[j] * xr[j];\n                    en0 += xa;\n                    rh2 += (xa < rh1) ? xa : rh1;\n                    j++;\n                    xb = xr[j] * xr[j];\n                    en0 += xb;\n                    rh2 += (xb < rh1) ? xb : rh1;\n                    j++;\n                } while (--l > 0);\n                if (en0 > tmpATH)\n                    ath_over++;\n                if (sfb == Encoder_1.SBPSY_s) {\n                    var x = tmpATH * gfc.nsPsy.shortfact[sfb];\n                    if (rh2 < x) {\n                        rh2 = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    xmin = rh2;\n                else\n                    xmin = tmpATH;\n\n                if (!gfp.ATHonly && !gfp.ATHshort) {\n                    var e = ratio.en.s[sfb][b];\n                    if (e > 0.0) {\n                        var x;\n                        x = en0 * ratio.thm.s[sfb][b] * masking_lower / e;\n                        if (enable_athaa_fix != 0)\n                            x *= gfc.nsPsy.shortfact[sfb];\n                        if (xmin < x)\n                            xmin = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    pxmin[pxminPos++] = xmin;\n                else\n                    pxmin[pxminPos++] = xmin * gfc.nsPsy.shortfact[sfb];\n            }\n            /* b */\n            if (gfp.useTemporal) {\n                if (pxmin[pxminPos - 3] > pxmin[pxminPos - 3 + 1])\n                    pxmin[pxminPos - 3 + 1] += (pxmin[pxminPos - 3] - pxmin[pxminPos - 3 + 1])\n                        * gfc.decay;\n                if (pxmin[pxminPos - 3 + 1] > pxmin[pxminPos - 3 + 2])\n                    pxmin[pxminPos - 3 + 2] += (pxmin[pxminPos - 3 + 1] - pxmin[pxminPos - 3 + 2])\n                        * gfc.decay;\n            }\n        }\n        /* end of short block sfb loop */\n\n        return ath_over;\n    };\n\n    function StartLine(j) {\n        this.s = j;\n    }\n\n    this.calc_noise_core = function (cod_info, startline, l, step) {\n        var noise = 0;\n        var j = startline.s;\n        var ix = cod_info.l3_enc;\n\n        if (j > cod_info.count1) {\n            while ((l--) != 0) {\n                var temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n            }\n        } else if (j > cod_info.big_values) {\n            var ix01 = new_float$19(2);\n            ix01[0] = 0;\n            ix01[1] = step;\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n            }\n        } else {\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n            }\n        }\n\n        startline.s = j;\n        return noise;\n    };\n\n    /**\n     * <PRE>\n     * -oo dB  =>  -1.00\n     * - 6 dB  =>  -0.97\n     * - 3 dB  =>  -0.80\n     * - 2 dB  =>  -0.64\n     * - 1 dB  =>  -0.38\n     *   0 dB  =>   0.00\n     * + 1 dB  =>  +0.49\n     * + 2 dB  =>  +1.06\n     * + 3 dB  =>  +1.68\n     * + 6 dB  =>  +3.69\n     * +10 dB  =>  +6.45\n     * </PRE>\n     */\n    this.calc_noise = function (cod_info, l3_xmin, distort, res, prev_noise) {\n        var distortPos = 0;\n        var l3_xminPos = 0;\n        var sfb, l, over = 0;\n        var over_noise_db = 0;\n        /* 0 dB relative to masking */\n        var tot_noise_db = 0;\n        /* -200 dB relative to masking */\n        var max_noise = -20.0;\n        var j = 0;\n        var scalefac = cod_info.scalefac;\n        var scalefacPos = 0;\n\n        res.over_SSD = 0;\n\n        for (sfb = 0; sfb < cod_info.psymax; sfb++) {\n            var s = cod_info.global_gain\n                - (((scalefac[scalefacPos++]) + (cod_info.preflag != 0 ? pretab[sfb]\n                    : 0)) << (cod_info.scalefac_scale + 1))\n                - cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n            var noise = 0.0;\n\n            if (prev_noise != null && (prev_noise.step[sfb] == s)) {\n\n                /* use previously computed values */\n                noise = prev_noise.noise[sfb];\n                j += cod_info.width[sfb];\n                distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                noise = prev_noise.noise_log[sfb];\n\n            } else {\n                var step = POW20(s);\n                l = cod_info.width[sfb] >> 1;\n\n                if ((j + cod_info.width[sfb]) > cod_info.max_nonzero_coeff) {\n                    var usefullsize;\n                    usefullsize = cod_info.max_nonzero_coeff - j + 1;\n\n                    if (usefullsize > 0)\n                        l = usefullsize >> 1;\n                    else\n                        l = 0;\n                }\n\n                var sl = new StartLine(j);\n                noise = this.calc_noise_core(cod_info, sl, l, step);\n                j = sl.s;\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.step[sfb] = s;\n                    prev_noise.noise[sfb] = noise;\n                }\n\n                noise = distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                /* multiplying here is adding in dB, but can overflow */\n                noise = Util$19.FAST_LOG10(Math.max(noise, 1E-20));\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.noise_log[sfb] = noise;\n                }\n            }\n\n            if (prev_noise != null) {\n                /* save noise values */\n                prev_noise.global_gain = cod_info.global_gain;\n            }\n\n            tot_noise_db += noise;\n\n            if (noise > 0.0) {\n                var tmp;\n\n                tmp = Math.max(0 | (noise * 10 + .5), 1);\n                res.over_SSD += tmp * tmp;\n\n                over++;\n                /* multiplying here is adding in dB -but can overflow */\n                /* over_noise *= noise; */\n                over_noise_db += noise;\n            }\n            max_noise = Math.max(max_noise, noise);\n\n        }\n\n        res.over_count = over;\n        res.tot_noise = tot_noise_db;\n        res.over_noise = over_noise_db;\n        res.max_noise = max_noise;\n\n        return over;\n    };\n\n    /**\n     * updates plotting data\n     *\n     * Mark Taylor 2000-??-??\n     *\n     * Robert Hegemann: moved noise/distortion calc into it\n     */\n    this.set_pinfo = function (gfp, cod_info, ratio, gr, ch) {\n        var gfc = gfp.internal_flags;\n        var sfb, sfb2;\n        var l;\n        var en0, en1;\n        var ifqstep = (cod_info.scalefac_scale == 0) ? .5 : 1.0;\n        var scalefac = cod_info.scalefac;\n\n        var l3_xmin = new_float$19(L3Side.SFBMAX);\n        var xfsf = new_float$19(L3Side.SFBMAX);\n        var noise = new CalcNoiseResult();\n\n        calc_xmin(gfp, ratio, cod_info, l3_xmin);\n        calc_noise(cod_info, l3_xmin, xfsf, noise, null);\n\n        var j = 0;\n        sfb2 = cod_info.sfb_lmax;\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE\n            && 0 == cod_info.mixed_block_flag)\n            sfb2 = 22;\n        for (sfb = 0; sfb < sfb2; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            var bw = end - start;\n            for (en0 = 0.0; j < end; j++)\n                en0 += cod_info.xr[j] * cod_info.xr[j];\n            en0 /= bw;\n            /* convert to MDCT units */\n            /* scaling so it shows up on FFT plot */\n            en1 = 1e15;\n            gfc.pinfo.en[gr][ch][sfb] = en1 * en0;\n            gfc.pinfo.xfsf[gr][ch][sfb] = en1 * l3_xmin[sfb] * xfsf[sfb] / bw;\n\n            if (ratio.en.l[sfb] > 0 && !gfp.ATHonly)\n                en0 = en0 / ratio.en.l[sfb];\n            else\n                en0 = 0.0;\n\n            gfc.pinfo.thr[gr][ch][sfb] = en1\n                * Math.max(en0 * ratio.thm.l[sfb], gfc.ATH.l[sfb]);\n\n            /* there is no scalefactor bands >= SBPSY_l */\n            gfc.pinfo.LAMEsfb[gr][ch][sfb] = 0;\n            if (cod_info.preflag != 0 && sfb >= 11)\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] = -ifqstep * pretab[sfb];\n\n            if (sfb < Encoder_1.SBPSY_l) {\n                /* scfsi should be decoded by caller side */\n                assert$19(scalefac[sfb] >= 0);\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] -= ifqstep * scalefac[sfb];\n            }\n        }\n        /* for sfb */\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            sfb2 = sfb;\n            for (sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                var bw = end - start;\n                for (var i = 0; i < 3; i++) {\n                    for (en0 = 0.0, l = start; l < end; l++) {\n                        en0 += cod_info.xr[j] * cod_info.xr[j];\n                        j++;\n                    }\n                    en0 = Math.max(en0 / bw, 1e-20);\n                    /* convert to MDCT units */\n                    /* scaling so it shows up on FFT plot */\n                    en1 = 1e15;\n\n                    gfc.pinfo.en_s[gr][ch][3 * sfb + i] = en1 * en0;\n                    gfc.pinfo.xfsf_s[gr][ch][3 * sfb + i] = en1 * l3_xmin[sfb2]\n                        * xfsf[sfb2] / bw;\n                    if (ratio.en.s[sfb][i] > 0)\n                        en0 = en0 / ratio.en.s[sfb][i];\n                    else\n                        en0 = 0.0;\n                    if (gfp.ATHonly || gfp.ATHshort)\n                        en0 = 0;\n\n                    gfc.pinfo.thr_s[gr][ch][3 * sfb + i] = en1\n                        * Math.max(en0 * ratio.thm.s[sfb][i],\n                            gfc.ATH.s[sfb]);\n\n                    /* there is no scalefactor bands >= SBPSY_s */\n                    gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] = -2.0\n                        * cod_info.subblock_gain[i];\n                    if (sfb < Encoder_1.SBPSY_s) {\n                        gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] -= ifqstep\n                            * scalefac[sfb2];\n                    }\n                    sfb2++;\n                }\n            }\n        }\n        /* block type short */\n        gfc.pinfo.LAMEqss[gr][ch] = cod_info.global_gain;\n        gfc.pinfo.LAMEmainbits[gr][ch] = cod_info.part2_3_length\n            + cod_info.part2_length;\n        gfc.pinfo.LAMEsfbits[gr][ch] = cod_info.part2_length;\n\n        gfc.pinfo.over[gr][ch] = noise.over_count;\n        gfc.pinfo.max_noise[gr][ch] = noise.max_noise * 10.0;\n        gfc.pinfo.over_noise[gr][ch] = noise.over_noise * 10.0;\n        gfc.pinfo.tot_noise[gr][ch] = noise.tot_noise * 10.0;\n        gfc.pinfo.over_SSD[gr][ch] = noise.over_SSD;\n    };\n\n    /**\n     * updates plotting data for a whole frame\n     *\n     * Robert Hegemann 2000-10-21\n     */\n    \n\n}\n\nvar QuantizePVT_1 = QuantizePVT$1;\n\n/*\n *\tMP3 huffman table selecting and bit counting\n *\n *\tCopyright (c) 1999-2005 Takehiro TOMINAGA\n *\tCopyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\t See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Takehiro.java,v 1.26 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$18 = common.System;\nvar Arrays$18 = common.Arrays;\nvar new_int$18 = common.new_int;\nvar assert$18 = common.assert;\n\n\n\n\n\n\n\nfunction Takehiro$1() {\n\n    var qupvt = null;\n    this.qupvt = null;\n\n    this.setModules = function (_qupvt) {\n        this.qupvt = _qupvt;\n        qupvt = _qupvt;\n    };\n\n    function Bits(b) {\n        this.bits = 0 | b;\n    }\n\n    var subdv_table = [[0, 0], /* 0 bands */\n        [0, 0], /* 1 bands */\n        [0, 0], /* 2 bands */\n        [0, 0], /* 3 bands */\n        [0, 0], /* 4 bands */\n        [0, 1], /* 5 bands */\n        [1, 1], /* 6 bands */\n        [1, 1], /* 7 bands */\n        [1, 2], /* 8 bands */\n        [2, 2], /* 9 bands */\n        [2, 3], /* 10 bands */\n        [2, 3], /* 11 bands */\n        [3, 4], /* 12 bands */\n        [3, 4], /* 13 bands */\n        [3, 4], /* 14 bands */\n        [4, 5], /* 15 bands */\n        [4, 5], /* 16 bands */\n        [4, 6], /* 17 bands */\n        [5, 6], /* 18 bands */\n        [5, 6], /* 19 bands */\n        [5, 7], /* 20 bands */\n        [6, 7], /* 21 bands */\n        [6, 7], /* 22 bands */\n    ];\n\n    /**\n     * nonlinear quantization of xr More accurate formula than the ISO formula.\n     * Takes into account the fact that we are quantizing xr . ix, but we want\n     * ix^4/3 to be as close as possible to x^4/3. (taking the nearest int would\n     * mean ix is as close as possible to xr, which is different.)\n     *\n     * From Segher Boessenkool <segher@eastsite.nl> 11/1999\n     *\n     * 09/2000: ASM code removed in favor of IEEE754 hack by Takehiro Tominaga.\n     * If you need the ASM code, check CVS circa Aug 2000.\n     *\n     * 01/2004: Optimizations by Gabriel Bouvigne\n     */\n    function quantize_lines_xrpow_01(l, istep, xr, xrPos, ix, ixPos) {\n        var compareval0 = (1.0 - 0.4054) / istep;\n\n        assert$18(l > 0);\n        l = l >> 1;\n        while ((l--) != 0) {\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n        }\n    }\n\n    /**\n     * XRPOW_FTOI is a macro to convert floats to ints.<BR>\n     * if XRPOW_FTOI(x) = nearest_int(x), then QUANTFAC(x)=adj43asm[x]<BR>\n     * ROUNDFAC= -0.0946<BR>\n     *\n     * if XRPOW_FTOI(x) = floor(x), then QUANTFAC(x)=asj43[x]<BR>\n     * ROUNDFAC=0.4054<BR>\n     *\n     * Note: using floor() or 0| is extremely slow. On machines where the\n     * TAKEHIRO_IEEE754_HACK code above does not work, it is worthwile to write\n     * some ASM for XRPOW_FTOI().\n     */\n    function quantize_lines_xrpow(l, istep, xr, xrPos, ix, ixPos) {\n        assert$18(l > 0);\n\n        l = l >> 1;\n        var remaining = l % 2;\n        l = l >> 1;\n        while (l-- != 0) {\n            var x0, x1, x2, x3;\n            var rx0, rx1, rx2, rx3;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            x2 = xr[xrPos++] * istep;\n            rx1 = 0 | x1;\n            x3 = xr[xrPos++] * istep;\n            rx2 = 0 | x2;\n            x0 += qupvt.adj43[rx0];\n            rx3 = 0 | x3;\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            x2 += qupvt.adj43[rx2];\n            ix[ixPos++] = 0 | x1;\n            x3 += qupvt.adj43[rx3];\n            ix[ixPos++] = 0 | x2;\n            ix[ixPos++] = 0 | x3;\n        }\n        if (remaining != 0) {\n            var x0, x1;\n            var rx0, rx1;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            rx1 = 0 | x1;\n            x0 += qupvt.adj43[rx0];\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            ix[ixPos++] = 0 | x1;\n        }\n    }\n\n    /**\n     * Quantization function This function will select which lines to quantize\n     * and call the proper quantization function\n     */\n    function quantize_xrpow(xp, pi, istep, codInfo, prevNoise) {\n        /* quantize on xr^(3/4) instead of xr */\n        var sfb;\n        var sfbmax;\n        var j = 0;\n        var prev_data_use;\n        var accumulate = 0;\n        var accumulate01 = 0;\n        var xpPos = 0;\n        var iData = pi;\n        var iDataPos = 0;\n        var acc_iData = iData;\n        var acc_iDataPos = 0;\n        var acc_xp = xp;\n        var acc_xpPos = 0;\n\n        /*\n         * Reusing previously computed data does not seems to work if global\n         * gain is changed. Finding why it behaves this way would allow to use a\n         * cache of previously computed values (let's 10 cached values per sfb)\n         * that would probably provide a noticeable speedup\n         */\n        prev_data_use = (prevNoise != null && (codInfo.global_gain == prevNoise.global_gain));\n\n        if (codInfo.block_type == Encoder_1.SHORT_TYPE)\n            sfbmax = 38;\n        else\n            sfbmax = 21;\n\n        for (sfb = 0; sfb <= sfbmax; sfb++) {\n            var step = -1;\n\n            if (prev_data_use || codInfo.block_type == Encoder_1.NORM_TYPE) {\n                step = codInfo.global_gain\n                    - ((codInfo.scalefac[sfb] + (codInfo.preflag != 0 ? qupvt.pretab[sfb]\n                        : 0)) << (codInfo.scalefac_scale + 1))\n                    - codInfo.subblock_gain[codInfo.window[sfb]] * 8;\n            }\n            assert$18(codInfo.width[sfb] >= 0);\n            if (prev_data_use && (prevNoise.step[sfb] == step)) {\n                /*\n                 * do not recompute this part, but compute accumulated lines\n                 */\n                if (accumulate != 0) {\n                    quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                        acc_iData, acc_iDataPos);\n                    accumulate = 0;\n                }\n                if (accumulate01 != 0) {\n                    quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                        acc_xpPos, acc_iData, acc_iDataPos);\n                    accumulate01 = 0;\n                }\n            } else { /* should compute this part */\n                var l = codInfo.width[sfb];\n\n                if ((j + codInfo.width[sfb]) > codInfo.max_nonzero_coeff) {\n                    /* do not compute upper zero part */\n                    var usefullsize;\n                    usefullsize = codInfo.max_nonzero_coeff - j + 1;\n                    Arrays$18.fill(pi, codInfo.max_nonzero_coeff, 576, 0);\n                    l = usefullsize;\n\n                    if (l < 0) {\n                        l = 0;\n                    }\n\n                    /* no need to compute higher sfb values */\n                    sfb = sfbmax + 1;\n                }\n\n                /* accumulate lines to quantize */\n                if (0 == accumulate && 0 == accumulate01) {\n                    acc_iData = iData;\n                    acc_iDataPos = iDataPos;\n                    acc_xp = xp;\n                    acc_xpPos = xpPos;\n                }\n                if (prevNoise != null && prevNoise.sfb_count1 > 0\n                    && sfb >= prevNoise.sfb_count1\n                    && prevNoise.step[sfb] > 0\n                    && step >= prevNoise.step[sfb]) {\n\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate01 += l;\n                } else {\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate += l;\n                }\n\n                if (l <= 0) {\n                    /*\n                     * rh: 20040215 may happen due to \"prev_data_use\"\n                     * optimization\n                     */\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                    }\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                    }\n\n                    break;\n                    /* ends for-loop */\n                }\n            }\n            if (sfb <= sfbmax) {\n                iDataPos += codInfo.width[sfb];\n                xpPos += codInfo.width[sfb];\n                j += codInfo.width[sfb];\n            }\n        }\n        if (accumulate != 0) { /* last data part */\n            quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate = 0;\n        }\n        if (accumulate01 != 0) { /* last data part */\n            quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate01 = 0;\n        }\n\n    }\n\n    /**\n     * ix_max\n     */\n    function ix_max(ix, ixPos, endPos) {\n        var max1 = 0, max2 = 0;\n\n        do {\n            var x1 = ix[ixPos++];\n            var x2 = ix[ixPos++];\n            if (max1 < x1)\n                max1 = x1;\n\n            if (max2 < x2)\n                max2 = x2;\n        } while (ixPos < endPos);\n        if (max1 < max2)\n            max1 = max2;\n        return max1;\n    }\n\n    function count_bit_ESC(ix, ixPos, end, t1, t2, s) {\n        /* ESC-table is used */\n        var linbits = Tables_1.ht[t1].xlen * 65536 + Tables_1.ht[t2].xlen;\n        var sum = 0, sum2;\n\n        do {\n            var x = ix[ixPos++];\n            var y = ix[ixPos++];\n\n            if (x != 0) {\n                if (x > 14) {\n                    x = 15;\n                    sum += linbits;\n                }\n                x *= 16;\n            }\n\n            if (y != 0) {\n                if (y > 14) {\n                    y = 15;\n                    sum += linbits;\n                }\n                x += y;\n            }\n\n            sum += Tables_1.largetbl[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1 = t2;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC(ix, ixPos, end, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var hlen1 = Tables_1.ht[1].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * 2 + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n        } while (ixPos < end);\n\n        s.bits += sum1;\n        return 1;\n    }\n\n    function count_bit_noESC_from2(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum = 0, sum2;\n        var xlen = Tables_1.ht[t1].xlen;\n        var hlen;\n        if (t1 == 2)\n            hlen = Tables_1.table23;\n        else\n            hlen = Tables_1.table56;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum += hlen[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1++;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC_from3(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var sum2 = 0;\n        var sum3 = 0;\n        var xlen = Tables_1.ht[t1].xlen;\n        var hlen1 = Tables_1.ht[t1].hlen;\n        var hlen2 = Tables_1.ht[t1 + 1].hlen;\n        var hlen3 = Tables_1.ht[t1 + 2].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n            sum2 += hlen2[x];\n            sum3 += hlen3[x];\n        } while (ixPos < end);\n        var t = t1;\n        if (sum1 > sum2) {\n            sum1 = sum2;\n            t++;\n        }\n        if (sum1 > sum3) {\n            sum1 = sum3;\n            t = t1 + 2;\n        }\n        s.bits += sum1;\n\n        return t;\n    }\n\n    /*************************************************************************/\n    /* choose table */\n    /*************************************************************************/\n\n    var huf_tbl_noESC = [1, 2, 5, 7, 7, 10, 10, 13, 13,\n        13, 13, 13, 13, 13, 13];\n\n    /**\n     * Choose the Huffman table that will encode ix[begin..end] with the fewest\n     * bits.\n     *\n     * Note: This code contains knowledge about the sizes and characteristics of\n     * the Huffman tables as defined in the IS (Table B.7), and will not work\n     * with any arbitrary tables.\n     */\n    function choose_table(ix, ixPos, endPos, s) {\n        var max = ix_max(ix, ixPos, endPos);\n\n        switch (max) {\n            case 0:\n                return max;\n\n            case 1:\n                return count_bit_noESC(ix, ixPos, endPos, s);\n\n            case 2:\n            case 3:\n                return count_bit_noESC_from2(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                return count_bit_noESC_from3(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            default:\n                /* try tables with linbits */\n                if (max > QuantizePVT_1.IXMAX_VAL) {\n                    s.bits = QuantizePVT_1.LARGE_BITS;\n                    return -1;\n                }\n                max -= 15;\n                var choice2;\n                for (choice2 = 24; choice2 < 32; choice2++) {\n                    if (Tables_1.ht[choice2].linmax >= max) {\n                        break;\n                    }\n                }\n                var choice;\n                for (choice = choice2 - 8; choice < 24; choice++) {\n                    if (Tables_1.ht[choice].linmax >= max) {\n                        break;\n                    }\n                }\n                return count_bit_ESC(ix, ixPos, endPos, choice, choice2, s);\n        }\n    }\n\n    /**\n     * count_bit\n     */\n    this.noquant_count_bits = function (gfc, gi, prev_noise) {\n        var ix = gi.l3_enc;\n        var i = Math.min(576, ((gi.max_nonzero_coeff + 2) >> 1) << 1);\n\n        if (prev_noise != null)\n            prev_noise.sfb_count1 = 0;\n\n        /* Determine count1 region */\n        for (; i > 1; i -= 2)\n            if ((ix[i - 1] | ix[i - 2]) != 0)\n                break;\n        gi.count1 = i;\n\n        /* Determines the number of bits to encode the quadruples. */\n        var a1 = 0;\n        var a2 = 0;\n        for (; i > 3; i -= 4) {\n            var p;\n            /* hack to check if all values <= 1 */\n            //throw \"TODO: HACK         if ((((long) ix[i - 1] | (long) ix[i - 2] | (long) ix[i - 3] | (long) ix[i - 4]) & 0xffffffffL) > 1L        \"\n            //if (true) {\n            if (((ix[i - 1] | ix[i - 2] | ix[i - 3] | ix[i - 4]) & 0x7fffffff) > 1) {\n                break;\n            }\n            p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2 + ix[i - 1];\n            a1 += Tables_1.t32l[p];\n            a2 += Tables_1.t33l[p];\n        }\n        var bits = a1;\n        gi.count1table_select = 0;\n        if (a1 > a2) {\n            bits = a2;\n            gi.count1table_select = 1;\n        }\n\n        gi.count1bits = bits;\n        gi.big_values = i;\n        if (i == 0)\n            return bits;\n\n        if (gi.block_type == Encoder_1.SHORT_TYPE) {\n            a1 = 3 * gfc.scalefac_band.s[3];\n            if (a1 > gi.big_values)\n                a1 = gi.big_values;\n            a2 = gi.big_values;\n\n        } else if (gi.block_type == Encoder_1.NORM_TYPE) {\n            assert$18(i <= 576);\n            /* bv_scf has 576 entries (0..575) */\n            a1 = gi.region0_count = gfc.bv_scf[i - 2];\n            a2 = gi.region1_count = gfc.bv_scf[i - 1];\n\n            assert$18(a1 + a2 + 2 < Encoder_1.SBPSY_l);\n            a2 = gfc.scalefac_band.l[a1 + a2 + 2];\n            a1 = gfc.scalefac_band.l[a1 + 1];\n            if (a2 < i) {\n                var bi = new Bits(bits);\n                gi.table_select[2] = choose_table(ix, a2, i, bi);\n                bits = bi.bits;\n            }\n        } else {\n            gi.region0_count = 7;\n            /* gi.region1_count = SBPSY_l - 7 - 1; */\n            gi.region1_count = Encoder_1.SBMAX_l - 1 - 7 - 1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            a2 = i;\n            if (a1 > a2) {\n                a1 = a2;\n            }\n        }\n\n        /* have to allow for the case when bigvalues < region0 < region1 */\n        /* (and region0, region1 are ignored) */\n        a1 = Math.min(a1, i);\n        a2 = Math.min(a2, i);\n\n        assert$18(a1 >= 0);\n        assert$18(a2 >= 0);\n\n        /* Count the number of bits necessary to code the bigvalues region. */\n        if (0 < a1) {\n            var bi = new Bits(bits);\n            gi.table_select[0] = choose_table(ix, 0, a1, bi);\n            bits = bi.bits;\n        }\n        if (a1 < a2) {\n            var bi = new Bits(bits);\n            gi.table_select[1] = choose_table(ix, a1, a2, bi);\n            bits = bi.bits;\n        }\n        if (gfc.use_best_huffman == 2) {\n            gi.part2_3_length = bits;\n            best_huffman_divide(gfc, gi);\n            bits = gi.part2_3_length;\n        }\n\n        if (prev_noise != null) {\n            if (gi.block_type == Encoder_1.NORM_TYPE) {\n                var sfb = 0;\n                while (gfc.scalefac_band.l[sfb] < gi.big_values) {\n                    sfb++;\n                }\n                prev_noise.sfb_count1 = sfb;\n            }\n        }\n\n        return bits;\n    };\n\n    this.count_bits = function (gfc, xr, gi, prev_noise) {\n        var ix = gi.l3_enc;\n\n        /* since quantize_xrpow uses table lookup, we need to check this first: */\n        var w = (QuantizePVT_1.IXMAX_VAL) / qupvt.IPOW20(gi.global_gain);\n\n        if (gi.xrpow_max > w)\n            return QuantizePVT_1.LARGE_BITS;\n\n        quantize_xrpow(xr, ix, qupvt.IPOW20(gi.global_gain), gi, prev_noise);\n\n        if ((gfc.substep_shaping & 2) != 0) {\n            var j = 0;\n            /* 0.634521682242439 = 0.5946*2**(.5*0.1875) */\n            var gain = gi.global_gain + gi.scalefac_scale;\n            var roundfac = 0.634521682242439 / qupvt.IPOW20(gain);\n            for (var sfb = 0; sfb < gi.sfbmax; sfb++) {\n                var width = gi.width[sfb];\n                assert$18(width >= 0);\n                if (0 == gfc.pseudohalf[sfb]) {\n                    j += width;\n                } else {\n                    var k;\n                    for (k = j, j += width; k < j; ++k) {\n                        ix[k] = (xr[k] >= roundfac) ? ix[k] : 0;\n                    }\n                }\n            }\n        }\n        return this.noquant_count_bits(gfc, gi, prev_noise);\n    };\n\n    /**\n     * re-calculate the best scalefac_compress using scfsi the saved bits are\n     * kept in the bit reservoir.\n     */\n    function recalc_divide_init(gfc, cod_info, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info.big_values;\n\n        for (var r0 = 0; r0 <= 7 + 15; r0++) {\n            r01_bits[r0] = QuantizePVT_1.LARGE_BITS;\n        }\n\n        for (var r0 = 0; r0 < 16; r0++) {\n            var a1 = gfc.scalefac_band.l[r0 + 1];\n            if (a1 >= bigv)\n                break;\n            var r0bits = 0;\n            var bi = new Bits(r0bits);\n            var r0t = choose_table(ix, 0, a1, bi);\n            r0bits = bi.bits;\n\n            for (var r1 = 0; r1 < 8; r1++) {\n                var a2 = gfc.scalefac_band.l[r0 + r1 + 2];\n                if (a2 >= bigv)\n                    break;\n                var bits = r0bits;\n                bi = new Bits(bits);\n                var r1t = choose_table(ix, a1, a2, bi);\n                bits = bi.bits;\n                if (r01_bits[r0 + r1] > bits) {\n                    r01_bits[r0 + r1] = bits;\n                    r01_div[r0 + r1] = r0;\n                    r0_tbl[r0 + r1] = r0t;\n                    r1_tbl[r0 + r1] = r1t;\n                }\n            }\n        }\n    }\n\n    function recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info2.big_values;\n\n        for (var r2 = 2; r2 < Encoder_1.SBMAX_l + 1; r2++) {\n            var a2 = gfc.scalefac_band.l[r2];\n            if (a2 >= bigv)\n                break;\n            var bits = r01_bits[r2 - 2] + cod_info2.count1bits;\n            if (gi.part2_3_length <= bits)\n                break;\n\n            var bi = new Bits(bits);\n            var r2t = choose_table(ix, a2, bigv, bi);\n            bits = bi.bits;\n            if (gi.part2_3_length <= bits)\n                continue;\n\n            gi.assign(cod_info2);\n            gi.part2_3_length = bits;\n            gi.region0_count = r01_div[r2 - 2];\n            gi.region1_count = r2 - 2 - r01_div[r2 - 2];\n            gi.table_select[0] = r0_tbl[r2 - 2];\n            gi.table_select[1] = r1_tbl[r2 - 2];\n            gi.table_select[2] = r2t;\n        }\n    }\n\n    this.best_huffman_divide = function (gfc, gi) {\n        var cod_info2 = new GrInfo_1();\n        var ix = gi.l3_enc;\n        var r01_bits = new_int$18(7 + 15 + 1);\n        var r01_div = new_int$18(7 + 15 + 1);\n        var r0_tbl = new_int$18(7 + 15 + 1);\n        var r1_tbl = new_int$18(7 + 15 + 1);\n\n        /* SHORT BLOCK stuff fails for MPEG2 */\n        if (gi.block_type == Encoder_1.SHORT_TYPE && gfc.mode_gr == 1)\n            return;\n\n        cod_info2.assign(gi);\n        if (gi.block_type == Encoder_1.NORM_TYPE) {\n            recalc_divide_init(gfc, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        }\n        var i = cod_info2.big_values;\n        if (i == 0 || (ix[i - 2] | ix[i - 1]) > 1)\n            return;\n\n        i = gi.count1 + 2;\n        if (i > 576)\n            return;\n\n        /* Determines the number of bits to encode the quadruples. */\n        cod_info2.assign(gi);\n        cod_info2.count1 = i;\n        var a1 = 0;\n        var a2 = 0;\n\n        assert$18(i <= 576);\n\n        for (; i > cod_info2.big_values; i -= 4) {\n            var p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2\n                + ix[i - 1];\n            a1 += Tables_1.t32l[p];\n            a2 += Tables_1.t33l[p];\n        }\n        cod_info2.big_values = i;\n\n        cod_info2.count1table_select = 0;\n        if (a1 > a2) {\n            a1 = a2;\n            cod_info2.count1table_select = 1;\n        }\n\n        cod_info2.count1bits = a1;\n\n        if (cod_info2.block_type == Encoder_1.NORM_TYPE)\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        else {\n            /* Count the number of bits necessary to code the bigvalues region. */\n            cod_info2.part2_3_length = a1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            if (a1 > i) {\n                a1 = i;\n            }\n            if (a1 > 0) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[0] = choose_table(ix, 0, a1, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (i > a1) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[1] = choose_table(ix, a1, i, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (gi.part2_3_length > cod_info2.part2_3_length)\n                gi.assign(cod_info2);\n        }\n    };\n\n    var slen1_n = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16];\n    var slen2_n = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8];\n    var slen1_tab = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4];\n    var slen2_tab = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\n    Takehiro$1.slen1_tab = slen1_tab;\n    Takehiro$1.slen2_tab = slen2_tab;\n\n    function scfsi_calc(ch, l3_side) {\n        var sfb;\n        var gi = l3_side.tt[1][ch];\n        var g0 = l3_side.tt[0][ch];\n\n        for (var i = 0; i < Tables_1.scfsi_band.length - 1; i++) {\n            for (sfb = Tables_1.scfsi_band[i]; sfb < Tables_1.scfsi_band[i + 1]; sfb++) {\n                if (g0.scalefac[sfb] != gi.scalefac[sfb]\n                    && gi.scalefac[sfb] >= 0)\n                    break;\n            }\n            if (sfb == Tables_1.scfsi_band[i + 1]) {\n                for (sfb = Tables_1.scfsi_band[i]; sfb < Tables_1.scfsi_band[i + 1]; sfb++) {\n                    gi.scalefac[sfb] = -1;\n                }\n                l3_side.scfsi[ch][i] = 1;\n            }\n        }\n        var s1 = 0;\n        var c1 = 0;\n        for (sfb = 0; sfb < 11; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c1++;\n            if (s1 < gi.scalefac[sfb])\n                s1 = gi.scalefac[sfb];\n        }\n        var s2 = 0;\n        var c2 = 0;\n        for (; sfb < Encoder_1.SBPSY_l; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c2++;\n            if (s2 < gi.scalefac[sfb])\n                s2 = gi.scalefac[sfb];\n        }\n\n        for (var i = 0; i < 16; i++) {\n            if (s1 < slen1_n[i] && s2 < slen2_n[i]) {\n                var c = slen1_tab[i] * c1 + slen2_tab[i] * c2;\n                if (gi.part2_length > c) {\n                    gi.part2_length = c;\n                    gi.scalefac_compress = i;\n                }\n            }\n        }\n    }\n\n    /**\n     * Find the optimal way to store the scalefactors. Only call this routine\n     * after final scalefactors have been chosen and the channel/granule will\n     * not be re-encoded.\n     */\n    this.best_scalefac_store = function (gfc, gr, ch, l3_side) {\n        /* use scalefac_scale if we can */\n        var gi = l3_side.tt[gr][ch];\n        var sfb, i, j, l;\n        var recalc = 0;\n\n        /*\n         * remove scalefacs from bands with ix=0. This idea comes from the AAC\n         * ISO docs. added mt 3/00\n         */\n        /* check if l3_enc=0 */\n        j = 0;\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            var width = gi.width[sfb];\n            assert$18(width >= 0);\n            j += width;\n            for (l = -width; l < 0; l++) {\n                if (gi.l3_enc[l + j] != 0)\n                    break;\n            }\n            if (l == 0)\n                gi.scalefac[sfb] = recalc = -2;\n            /* anything goes. */\n            /*\n             * only best_scalefac_store and calc_scfsi know--and only they\n             * should know--about the magic number -2.\n             */\n        }\n\n        if (0 == gi.scalefac_scale && 0 == gi.preflag) {\n            var s = 0;\n            for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                if (gi.scalefac[sfb] > 0)\n                    s |= gi.scalefac[sfb];\n\n            if (0 == (s & 1) && s != 0) {\n                for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] >>= 1;\n\n                gi.scalefac_scale = recalc = 1;\n            }\n        }\n\n        if (0 == gi.preflag && gi.block_type != Encoder_1.SHORT_TYPE\n            && gfc.mode_gr == 2) {\n            for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                if (gi.scalefac[sfb] < qupvt.pretab[sfb]\n                    && gi.scalefac[sfb] != -2)\n                    break;\n            if (sfb == Encoder_1.SBPSY_l) {\n                for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] -= qupvt.pretab[sfb];\n\n                gi.preflag = recalc = 1;\n            }\n        }\n\n        for (i = 0; i < 4; i++)\n            l3_side.scfsi[ch][i] = 0;\n\n        if (gfc.mode_gr == 2 && gr == 1\n            && l3_side.tt[0][ch].block_type != Encoder_1.SHORT_TYPE\n            && l3_side.tt[1][ch].block_type != Encoder_1.SHORT_TYPE) {\n            scfsi_calc(ch, l3_side);\n            recalc = 0;\n        }\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            if (gi.scalefac[sfb] == -2) {\n                gi.scalefac[sfb] = 0;\n                /* if anything goes, then 0 is a good choice */\n            }\n        }\n        if (recalc != 0) {\n            if (gfc.mode_gr == 2) {\n                this.scale_bitcount(gi);\n            } else {\n                this.scale_bitcount_lsf(gfc, gi);\n            }\n        }\n    };\n\n    function all_scalefactors_not_negative(scalefac, n) {\n        for (var i = 0; i < n; ++i) {\n            if (scalefac[i] < 0)\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 18*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_short = [0, 18, 36, 54, 54, 36, 54, 72,\n        54, 72, 90, 72, 90, 108, 108, 126];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 17*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_mixed = [0, 18, 36, 54, 51, 35, 53, 71,\n        52, 70, 88, 69, 87, 105, 104, 122];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 11*slen1_tab[i] + 10*slen2_tab[i]\n     */\n    var scale_long = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42,\n        52, 43, 53, 63, 64, 74];\n\n    /**\n     * Also calculates the number of bits necessary to code the scalefactors.\n     */\n    this.scale_bitcount = function (cod_info) {\n        var k, sfb, max_slen1 = 0, max_slen2 = 0;\n\n        /* maximum values */\n        var tab;\n        var scalefac = cod_info.scalefac;\n\n        assert$18(all_scalefactors_not_negative(scalefac, cod_info.sfbmax));\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            tab = scale_short;\n            if (cod_info.mixed_block_flag != 0)\n                tab = scale_mixed;\n        } else { /* block_type == 1,2,or 3 */\n            tab = scale_long;\n            if (0 == cod_info.preflag) {\n                for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                    if (scalefac[sfb] < qupvt.pretab[sfb])\n                        break;\n\n                if (sfb == Encoder_1.SBPSY_l) {\n                    cod_info.preflag = 1;\n                    for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                        scalefac[sfb] -= qupvt.pretab[sfb];\n                }\n            }\n        }\n\n        for (sfb = 0; sfb < cod_info.sfbdivide; sfb++)\n            if (max_slen1 < scalefac[sfb])\n                max_slen1 = scalefac[sfb];\n\n        for (; sfb < cod_info.sfbmax; sfb++)\n            if (max_slen2 < scalefac[sfb])\n                max_slen2 = scalefac[sfb];\n\n        /*\n         * from Takehiro TOMINAGA <tominaga@isoternet.org> 10/99 loop over *all*\n         * posible values of scalefac_compress to find the one which uses the\n         * smallest number of bits. ISO would stop at first valid index\n         */\n        cod_info.part2_length = QuantizePVT_1.LARGE_BITS;\n        for (k = 0; k < 16; k++) {\n            if (max_slen1 < slen1_n[k] && max_slen2 < slen2_n[k]\n                && cod_info.part2_length > tab[k]) {\n                cod_info.part2_length = tab[k];\n                cod_info.scalefac_compress = k;\n            }\n        }\n        return cod_info.part2_length == QuantizePVT_1.LARGE_BITS;\n    };\n\n    /**\n     * table of largest scalefactor values for MPEG2\n     */\n    var max_range_sfac_tab = [[15, 15, 7, 7],\n        [15, 15, 7, 0], [7, 3, 0, 0], [15, 31, 31, 0],\n        [7, 7, 7, 0], [3, 3, 0, 0]];\n\n    /**\n     * Also counts the number of bits to encode the scalefacs but for MPEG 2\n     * Lower sampling frequencies (24, 22.05 and 16 kHz.)\n     *\n     * This is reverse-engineered from section 2.4.3.2 of the MPEG2 IS,\n     * \"Audio Decoding Layer III\"\n     */\n    this.scale_bitcount_lsf = function (gfc, cod_info) {\n        var table_number, row_in_table, partition, nr_sfb, window;\n        var over;\n        var i, sfb;\n        var max_sfac = new_int$18(4);\n//var partition_table;\n        var scalefac = cod_info.scalefac;\n\n        /*\n         * Set partition table. Note that should try to use table one, but do\n         * not yet...\n         */\n        if (cod_info.preflag != 0)\n            table_number = 2;\n        else\n            table_number = 0;\n\n        for (i = 0; i < 4; i++)\n            max_sfac[i] = 0;\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            row_in_table = 1;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition] / 3;\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    for (window = 0; window < 3; window++)\n                        if (scalefac[sfb * 3 + window] > max_sfac[partition])\n                            max_sfac[partition] = scalefac[sfb * 3 + window];\n            }\n        } else {\n            row_in_table = 0;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition];\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    if (scalefac[sfb] > max_sfac[partition])\n                        max_sfac[partition] = scalefac[sfb];\n            }\n        }\n\n        for (over = false, partition = 0; partition < 4; partition++) {\n            if (max_sfac[partition] > max_range_sfac_tab[table_number][partition])\n                over = true;\n        }\n        if (!over) {\n            var slen1, slen2, slen3, slen4;\n\n            cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (partition = 0; partition < 4; partition++)\n                cod_info.slen[partition] = log2tab[max_sfac[partition]];\n\n            /* set scalefac_compress */\n            slen1 = cod_info.slen[0];\n            slen2 = cod_info.slen[1];\n            slen3 = cod_info.slen[2];\n            slen4 = cod_info.slen[3];\n\n            switch (table_number) {\n                case 0:\n                    cod_info.scalefac_compress = (((slen1 * 5) + slen2) << 4)\n                        + (slen3 << 2) + slen4;\n                    break;\n\n                case 1:\n                    cod_info.scalefac_compress = 400 + (((slen1 * 5) + slen2) << 2)\n                        + slen3;\n                    break;\n\n                case 2:\n                    cod_info.scalefac_compress = 500 + (slen1 * 3) + slen2;\n                    break;\n\n                default:\n                    System$18.err.printf(\"intensity stereo not implemented yet\\n\");\n                    break;\n            }\n        }\n        if (!over) {\n            assert$18(cod_info.sfb_partition_table != null);\n            cod_info.part2_length = 0;\n            for (partition = 0; partition < 4; partition++)\n                cod_info.part2_length += cod_info.slen[partition]\n                    * cod_info.sfb_partition_table[partition];\n        }\n        return over;\n    };\n\n    /*\n     * Since no bands have been over-amplified, we can set scalefac_compress and\n     * slen[] for the formatter\n     */\n    var log2tab = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,\n        4, 4, 4, 4];\n\n    this.huffman_init = function (gfc) {\n        for (var i = 2; i <= 576; i += 2) {\n            var scfb_anz = 0, bv_index;\n            while (gfc.scalefac_band.l[++scfb_anz] < i)\n                ;\n\n            bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            while (gfc.scalefac_band.l[bv_index + 1] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                /*\n                 * this is an indication that everything is going to be encoded\n                 * as region0: bigvalues < region0 < region1 so lets set\n                 * region0, region1 to some value larger than bigvalues\n                 */\n                bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            }\n\n            gfc.bv_scf[i - 2] = bv_index;\n\n            bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            while (gfc.scalefac_band.l[bv_index + gfc.bv_scf[i - 2] + 2] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            }\n\n            gfc.bv_scf[i - 1] = bv_index;\n        }\n    };\n}\n\nvar Takehiro_1 = Takehiro$1;\n\nvar System$17 = common.System;\nvar Arrays$17 = common.Arrays;\nvar new_byte$17 = common.new_byte;\nvar new_float_n$17 = common.new_float_n;\nvar new_int$17 = common.new_int;\nvar assert$17 = common.assert;\n\n\n\n\n\n\nBitStream$1.EQ = function (a, b) {\n    return (Math.abs(a) > Math.abs(b)) ? (Math.abs((a) - (b)) <= (Math\n        .abs(a) * 1e-6))\n        : (Math.abs((a) - (b)) <= (Math.abs(b) * 1e-6));\n};\n\nBitStream$1.NEQ = function (a, b) {\n    return !BitStream$1.EQ(a, b);\n};\n\nfunction BitStream$1() {\n    var self = this;\n    var CRC16_POLYNOMIAL = 0x8005;\n\n    /*\n     * we work with ints, so when doing bit manipulation, we limit ourselves to\n     * MAX_LENGTH-2 just to be on the safe side\n     */\n    var MAX_LENGTH = 32;\n\n    //GainAnalysis ga;\n    //MPGLib mpg;\n    //Version ver;\n    //VBRTag vbr;\n    var ga = null;\n    var mpg = null;\n    var ver = null;\n    var vbr = null;\n\n    //public final void setModules(GainAnalysis ga, MPGLib mpg, Version ver,\n    //\tVBRTag vbr) {\n\n    this.setModules = function (_ga, _mpg, _ver, _vbr) {\n        ga = _ga;\n        mpg = _mpg;\n        ver = _ver;\n        vbr = _vbr;\n    };\n\n    /**\n     * Bit stream buffer.\n     */\n    //private byte[] buf;\n    var buf = null;\n    /**\n     * Bit counter of bit stream.\n     */\n    var totbit = 0;\n    /**\n     * Pointer to top byte in buffer.\n     */\n    var bufByteIdx = 0;\n    /**\n     * Pointer to top bit of top byte in buffer.\n     */\n    var bufBitIdx = 0;\n\n    /**\n     * compute bitsperframe and mean_bits for a layer III frame\n     */\n    this.getframebits = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var bit_rate;\n\n        /* get bitrate in kbps [?] */\n        if (gfc.bitrate_index != 0)\n            bit_rate = Tables_1.bitrate_table[gfp.version][gfc.bitrate_index];\n        else\n            bit_rate = gfp.brate;\n        assert$17(8 <= bit_rate && bit_rate <= 640);\n\n        /* main encoding routine toggles padding on and off */\n        /* one Layer3 Slot consists of 8 bits */\n        var bytes = 0 | (gfp.version + 1) * 72000 * bit_rate / gfp.out_samplerate + gfc.padding;\n        return 8 * bytes;\n    };\n\n    function putheader_bits(gfc) {\n        System$17.arraycopy(gfc.header[gfc.w_ptr].buf, 0, buf, bufByteIdx, gfc.sideinfo_len);\n        bufByteIdx += gfc.sideinfo_len;\n        totbit += gfc.sideinfo_len * 8;\n        gfc.w_ptr = (gfc.w_ptr + 1) & (LameInternalFlags_1.MAX_HEADER_BUF - 1);\n    }\n\n    /**\n     * write j bits into the bit stream\n     */\n    function putbits2(gfc, val, j) {\n        assert$17(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert$17(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                assert$17(gfc.header[gfc.w_ptr].write_timing >= totbit);\n                if (gfc.header[gfc.w_ptr].write_timing == totbit) {\n                    putheader_bits(gfc);\n                }\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert$17(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert$17(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * write j bits into the bit stream, ignoring frame headers\n     */\n    function putbits_noheaders(gfc, val, j) {\n        assert$17(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert$17(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert$17(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert$17(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * Some combinations of bitrate, Fs, and stereo make it impossible to stuff\n     * out a frame using just main_data, due to the limited number of bits to\n     * indicate main_data_length. In these situations, we put stuffing bits into\n     * the ancillary data...\n     */\n    function drain_into_ancillary(gfp, remainingBits) {\n        var gfc = gfp.internal_flags;\n        var i;\n        assert$17(remainingBits >= 0);\n\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4c, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x41, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4d, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x45, 8);\n            remainingBits -= 8;\n        }\n\n        if (remainingBits >= 32) {\n            var version = ver.getLameShortVersion();\n            if (remainingBits >= 32)\n                for (i = 0; i < version.length && remainingBits >= 8; ++i) {\n                    remainingBits -= 8;\n                    putbits2(gfc, version.charAt(i), 8);\n                }\n        }\n\n        for (; remainingBits >= 1; remainingBits -= 1) {\n            putbits2(gfc, gfc.ancillary_flag, 1);\n            gfc.ancillary_flag ^= (!gfp.disable_reservoir ? 1 : 0);\n        }\n\n        assert$17(remainingBits == 0);\n\n    }\n\n    /**\n     * write N bits into the header\n     */\n    function writeheader(gfc, val, j) {\n        var ptr = gfc.header[gfc.h_ptr].ptr;\n\n        while (j > 0) {\n            var k = Math.min(j, 8 - (ptr & 7));\n            j -= k;\n            assert$17(j < MAX_LENGTH);\n            /* >> 32 too large for 32 bit machines */\n\n            gfc.header[gfc.h_ptr].buf[ptr >> 3] |= ((val >> j)) << (8 - (ptr & 7) - k);\n            ptr += k;\n        }\n        gfc.header[gfc.h_ptr].ptr = ptr;\n    }\n\n    function CRC_update(value, crc) {\n        value <<= 8;\n        for (var i = 0; i < 8; i++) {\n            value <<= 1;\n            crc <<= 1;\n\n            if ((((crc ^ value) & 0x10000) != 0))\n                crc ^= CRC16_POLYNOMIAL;\n        }\n        return crc;\n    }\n\n    this.CRC_writeheader = function (gfc, header) {\n        var crc = 0xffff;\n        /* (jo) init crc16 for error_protection */\n\n        crc = CRC_update(header[2] & 0xff, crc);\n        crc = CRC_update(header[3] & 0xff, crc);\n        for (var i = 6; i < gfc.sideinfo_len; i++) {\n            crc = CRC_update(header[i] & 0xff, crc);\n        }\n\n        header[4] = (byte)(crc >> 8);\n        header[5] = (byte)(crc & 255);\n    };\n\n    function encodeSideInfo2(gfp, bitsPerFrame) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var gr, ch;\n\n        l3_side = gfc.l3_side;\n        gfc.header[gfc.h_ptr].ptr = 0;\n        Arrays$17.fill(gfc.header[gfc.h_ptr].buf, 0, gfc.sideinfo_len, 0);\n        if (gfp.out_samplerate < 16000)\n            writeheader(gfc, 0xffe, 12);\n        else\n            writeheader(gfc, 0xfff, 12);\n        writeheader(gfc, (gfp.version), 1);\n        writeheader(gfc, 4 - 3, 2);\n        writeheader(gfc, (!gfp.error_protection ? 1 : 0), 1);\n        writeheader(gfc, (gfc.bitrate_index), 4);\n        writeheader(gfc, (gfc.samplerate_index), 2);\n        writeheader(gfc, (gfc.padding), 1);\n        writeheader(gfc, (gfp.extension), 1);\n        writeheader(gfc, (gfp.mode.ordinal()), 2);\n        writeheader(gfc, (gfc.mode_ext), 2);\n        writeheader(gfc, (gfp.copyright), 1);\n        writeheader(gfc, (gfp.original), 1);\n        writeheader(gfc, (gfp.emphasis), 2);\n        if (gfp.error_protection) {\n            writeheader(gfc, 0, 16);\n            /* dummy */\n        }\n\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            assert$17(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 9);\n\n            if (gfc.channels_out == 2)\n                writeheader(gfc, l3_side.private_bits, 3);\n            else\n                writeheader(gfc, l3_side.private_bits, 5);\n\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var band;\n                for (band = 0; band < 4; band++) {\n                    writeheader(gfc, l3_side.scfsi[ch][band], 1);\n                }\n            }\n\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                    writeheader(gfc, gi.big_values / 2, 9);\n                    writeheader(gfc, gi.global_gain, 8);\n                    writeheader(gfc, gi.scalefac_compress, 4);\n\n                    if (gi.block_type != Encoder_1.NORM_TYPE) {\n                        writeheader(gfc, 1, 1);\n                        /* window_switching_flag */\n                        writeheader(gfc, gi.block_type, 2);\n                        writeheader(gfc, gi.mixed_block_flag, 1);\n\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n\n                        writeheader(gfc, gi.subblock_gain[0], 3);\n                        writeheader(gfc, gi.subblock_gain[1], 3);\n                        writeheader(gfc, gi.subblock_gain[2], 3);\n                    } else {\n                        writeheader(gfc, 0, 1);\n                        /* window_switching_flag */\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n                        if (gi.table_select[2] == 14)\n                            gi.table_select[2] = 16;\n                        writeheader(gfc, gi.table_select[2], 5);\n\n                        assert$17(0 <= gi.region0_count && gi.region0_count < 16);\n                        assert$17(0 <= gi.region1_count && gi.region1_count < 8);\n                        writeheader(gfc, gi.region0_count, 4);\n                        writeheader(gfc, gi.region1_count, 3);\n                    }\n                    writeheader(gfc, gi.preflag, 1);\n                    writeheader(gfc, gi.scalefac_scale, 1);\n                    writeheader(gfc, gi.count1table_select, 1);\n                }\n            }\n        } else {\n            /* MPEG2 */\n            assert$17(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 8);\n            writeheader(gfc, l3_side.private_bits, gfc.channels_out);\n\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                writeheader(gfc, gi.big_values / 2, 9);\n                writeheader(gfc, gi.global_gain, 8);\n                writeheader(gfc, gi.scalefac_compress, 9);\n\n                if (gi.block_type != Encoder_1.NORM_TYPE) {\n                    writeheader(gfc, 1, 1);\n                    /* window_switching_flag */\n                    writeheader(gfc, gi.block_type, 2);\n                    writeheader(gfc, gi.mixed_block_flag, 1);\n\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n\n                    writeheader(gfc, gi.subblock_gain[0], 3);\n                    writeheader(gfc, gi.subblock_gain[1], 3);\n                    writeheader(gfc, gi.subblock_gain[2], 3);\n                } else {\n                    writeheader(gfc, 0, 1);\n                    /* window_switching_flag */\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n                    if (gi.table_select[2] == 14)\n                        gi.table_select[2] = 16;\n                    writeheader(gfc, gi.table_select[2], 5);\n\n                    assert$17(0 <= gi.region0_count && gi.region0_count < 16);\n                    assert$17(0 <= gi.region1_count && gi.region1_count < 8);\n                    writeheader(gfc, gi.region0_count, 4);\n                    writeheader(gfc, gi.region1_count, 3);\n                }\n\n                writeheader(gfc, gi.scalefac_scale, 1);\n                writeheader(gfc, gi.count1table_select, 1);\n            }\n        }\n\n        if (gfp.error_protection) {\n            /* (jo) error_protection: add crc16 information to header */\n            CRC_writeheader(gfc, gfc.header[gfc.h_ptr].buf);\n        }\n\n        {\n            var old = gfc.h_ptr;\n            assert$17(gfc.header[old].ptr == gfc.sideinfo_len * 8);\n\n            gfc.h_ptr = (old + 1) & (LameInternalFlags_1.MAX_HEADER_BUF - 1);\n            gfc.header[gfc.h_ptr].write_timing = gfc.header[old].write_timing\n                + bitsPerFrame;\n\n            if (gfc.h_ptr == gfc.w_ptr) {\n                /* yikes! we are out of header buffer space */\n                System$17.err\n                    .println(\"Error: MAX_HEADER_BUF too small in bitstream.c \\n\");\n            }\n\n        }\n    }\n\n    function huffman_coder_count1(gfc, gi) {\n        /* Write count1 area */\n        var h = Tables_1.ht[gi.count1table_select + 32];\n        var i, bits = 0;\n\n        var ix = gi.big_values;\n        var xr = gi.big_values;\n        assert$17(gi.count1table_select < 2);\n\n        for (i = (gi.count1 - gi.big_values) / 4; i > 0; --i) {\n            var huffbits = 0;\n            var p = 0, v;\n\n            v = gi.l3_enc[ix + 0];\n            if (v != 0) {\n                p += 8;\n                if (gi.xr[xr + 0] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 1];\n            if (v != 0) {\n                p += 4;\n                huffbits *= 2;\n                if (gi.xr[xr + 1] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 2];\n            if (v != 0) {\n                p += 2;\n                huffbits *= 2;\n                if (gi.xr[xr + 2] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 3];\n            if (v != 0) {\n                p++;\n                huffbits *= 2;\n                if (gi.xr[xr + 3] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            ix += 4;\n            xr += 4;\n            putbits2(gfc, huffbits + h.table[p], h.hlen[p]);\n            bits += h.hlen[p];\n        }\n        return bits;\n    }\n\n    /**\n     * Implements the pseudocode of page 98 of the IS\n     */\n    function Huffmancode(gfc, tableindex, start, end, gi) {\n        var h = Tables_1.ht[tableindex];\n        var bits = 0;\n\n        assert$17(tableindex < 32);\n        if (0 == tableindex)\n            return bits;\n\n        for (var i = start; i < end; i += 2) {\n            var cbits = 0;\n            var xbits = 0;\n            var linbits = h.xlen;\n            var xlen = h.xlen;\n            var ext = 0;\n            var x1 = gi.l3_enc[i];\n            var x2 = gi.l3_enc[i + 1];\n\n            if (x1 != 0) {\n                if (gi.xr[i] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            if (tableindex > 15) {\n                /* use ESC-words */\n                if (x1 > 14) {\n                    var linbits_x1 = x1 - 15;\n                    assert$17(linbits_x1 <= h.linmax);\n                    ext |= linbits_x1 << 1;\n                    xbits = linbits;\n                    x1 = 15;\n                }\n\n                if (x2 > 14) {\n                    var linbits_x2 = x2 - 15;\n                    assert$17(linbits_x2 <= h.linmax);\n                    ext <<= linbits;\n                    ext |= linbits_x2;\n                    xbits += linbits;\n                    x2 = 15;\n                }\n                xlen = 16;\n            }\n\n            if (x2 != 0) {\n                ext <<= 1;\n                if (gi.xr[i + 1] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            assert$17((x1 | x2) < 16);\n\n            x1 = x1 * xlen + x2;\n            xbits -= cbits;\n            cbits += h.hlen[x1];\n\n            assert$17(cbits <= MAX_LENGTH);\n            assert$17(xbits <= MAX_LENGTH);\n\n            putbits2(gfc, h.table[x1], cbits);\n            putbits2(gfc, ext, xbits);\n            bits += cbits + xbits;\n        }\n        return bits;\n    }\n\n    /**\n     * Note the discussion of huffmancodebits() on pages 28 and 29 of the IS, as\n     * well as the definitions of the side information on pages 26 and 27.\n     */\n    function ShortHuffmancodebits(gfc, gi) {\n        var region1Start = 3 * gfc.scalefac_band.s[3];\n        if (region1Start > gi.big_values)\n            region1Start = gi.big_values;\n\n        /* short blocks do not have a region2 */\n        var bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            gi.big_values, gi);\n        return bits;\n    }\n\n    function LongHuffmancodebits(gfc, gi) {\n        var bigvalues, bits;\n        var region1Start, region2Start;\n\n        bigvalues = gi.big_values;\n        assert$17(0 <= bigvalues && bigvalues <= 576);\n\n        var i = gi.region0_count + 1;\n        assert$17(0 <= i);\n        assert$17(i < gfc.scalefac_band.l.length);\n        region1Start = gfc.scalefac_band.l[i];\n        i += gi.region1_count + 1;\n        assert$17(0 <= i);\n        assert$17(i < gfc.scalefac_band.l.length);\n        region2Start = gfc.scalefac_band.l[i];\n\n        if (region1Start > bigvalues)\n            region1Start = bigvalues;\n\n        if (region2Start > bigvalues)\n            region2Start = bigvalues;\n\n        bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            region2Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[2], region2Start, bigvalues,\n            gi);\n        return bits;\n    }\n\n    function writeMainData(gfp) {\n        var gr, ch, sfb, data_bits, tot_bits = 0;\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n\n        if (gfp.version == 1) {\n            /* MPEG 1 */\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    var slen1 = Takehiro_1.slen1_tab[gi.scalefac_compress];\n                    var slen2 = Takehiro_1.slen2_tab[gi.scalefac_compress];\n                    data_bits = 0;\n                    for (sfb = 0; sfb < gi.sfbdivide; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen1);\n                        data_bits += slen1;\n                    }\n                    for (; sfb < gi.sfbmax; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen2);\n                        data_bits += slen2;\n                    }\n                    assert$17(data_bits == gi.part2_length);\n\n                    if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                        data_bits += ShortHuffmancodebits(gfc, gi);\n                    } else {\n                        data_bits += LongHuffmancodebits(gfc, gi);\n                    }\n                    data_bits += huffman_coder_count1(gfc, gi);\n                    /* does bitcount in quantize.c agree with actual bit count? */\n                    assert$17(data_bits == gi.part2_3_length + gi.part2_length);\n                    tot_bits += data_bits;\n                }\n                /* for ch */\n            }\n            /* for gr */\n        } else {\n            /* MPEG 2 */\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                var i, sfb_partition, scale_bits = 0;\n                assert$17(gi.sfb_partition_table != null);\n                data_bits = 0;\n                sfb = 0;\n                sfb_partition = 0;\n\n                if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition] / 3;\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 0], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 1], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 2], 0), slen);\n                            scale_bits += 3 * slen;\n                        }\n                    }\n                    data_bits += ShortHuffmancodebits(gfc, gi);\n                } else {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition];\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc, Math.max(gi.scalefac[sfb], 0), slen);\n                            scale_bits += slen;\n                        }\n                    }\n                    data_bits += LongHuffmancodebits(gfc, gi);\n                }\n                data_bits += huffman_coder_count1(gfc, gi);\n                /* does bitcount in quantize.c agree with actual bit count? */\n                assert$17(data_bits == gi.part2_3_length);\n                assert$17(scale_bits == gi.part2_length);\n                tot_bits += scale_bits + data_bits;\n            }\n            /* for ch */\n        }\n        /* for gf */\n        return tot_bits;\n    }\n\n    /* main_data */\n\n    function TotalBytes() {\n        this.total = 0;\n    }\n\n    /*\n     * compute the number of bits required to flush all mp3 frames currently in\n     * the buffer. This should be the same as the reservoir size. Only call this\n     * routine between frames - i.e. only after all headers and data have been\n     * added to the buffer by format_bitstream().\n     *\n     * Also compute total_bits_output = size of mp3 buffer (including frame\n     * headers which may not have yet been send to the mp3 buffer) + number of\n     * bits needed to flush all mp3 frames.\n     *\n     * total_bytes_output is the size of the mp3 output buffer if\n     * lame_encode_flush_nogap() was called right now.\n     */\n    function compute_flushbits(gfp, total_bytes_output) {\n        var gfc = gfp.internal_flags;\n        var flushbits, remaining_headers;\n        var bitsPerFrame;\n        var last_ptr, first_ptr;\n        first_ptr = gfc.w_ptr;\n        /* first header to add to bitstream */\n        last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags_1.MAX_HEADER_BUF - 1;\n\n        /* add this many bits to bitstream so we can flush all headers */\n        flushbits = gfc.header[last_ptr].write_timing - totbit;\n        total_bytes_output.total = flushbits;\n\n        if (flushbits >= 0) {\n            /* if flushbits >= 0, some headers have not yet been written */\n            /* reduce flushbits by the size of the headers */\n            remaining_headers = 1 + last_ptr - first_ptr;\n            if (last_ptr < first_ptr)\n                remaining_headers = 1 + last_ptr - first_ptr\n                    + LameInternalFlags_1.MAX_HEADER_BUF;\n            flushbits -= remaining_headers * 8 * gfc.sideinfo_len;\n        }\n\n        /*\n         * finally, add some bits so that the last frame is complete these bits\n         * are not necessary to decode the last frame, but some decoders will\n         * ignore last frame if these bits are missing\n         */\n        bitsPerFrame = self.getframebits(gfp);\n        flushbits += bitsPerFrame;\n        total_bytes_output.total += bitsPerFrame;\n        /* round up: */\n        if ((total_bytes_output.total % 8) != 0)\n            total_bytes_output.total = 1 + (total_bytes_output.total / 8);\n        else\n            total_bytes_output.total = (total_bytes_output.total / 8);\n        total_bytes_output.total += bufByteIdx + 1;\n\n        if (flushbits < 0) {\n            System$17.err.println(\"strange error flushing buffer ... \\n\");\n        }\n        return flushbits;\n    }\n\n    this.flush_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var flushbits;\n        var last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags_1.MAX_HEADER_BUF - 1;\n        l3_side = gfc.l3_side;\n\n        if ((flushbits = compute_flushbits(gfp, new TotalBytes())) < 0)\n            return;\n        drain_into_ancillary(gfp, flushbits);\n\n        /* check that the 100% of the last frame has been written to bitstream */\n        assert$17(gfc.header[last_ptr].write_timing + this.getframebits(gfp) == totbit);\n\n        /*\n         * we have padded out all frames with ancillary data, which is the same\n         * as filling the bitreservoir with ancillary data, so :\n         */\n        gfc.ResvSize = 0;\n        l3_side.main_data_begin = 0;\n\n        /* save the ReplayGain value */\n        if (gfc.findReplayGain) {\n            var RadioGain = ga.GetTitleGain(gfc.rgdata);\n            assert$17(NEQ(RadioGain, GainAnalysis.GAIN_NOT_ENOUGH_SAMPLES));\n            gfc.RadioGain = Math.floor(RadioGain * 10.0 + 0.5) | 0;\n            /* round to nearest */\n        }\n\n        /* find the gain and scale change required for no clipping */\n        if (gfc.findPeakSample) {\n            gfc.noclipGainChange = Math.ceil(Math\n                        .log10(gfc.PeakSample / 32767.0) * 20.0 * 10.0) | 0;\n            /* round up */\n\n            if (gfc.noclipGainChange > 0) {\n                /* clipping occurs */\n                if (EQ(gfp.scale, 1.0) || EQ(gfp.scale, 0.0))\n                    gfc.noclipScale = (Math\n                        .floor((32767.0 / gfc.PeakSample) * 100.0) / 100.0);\n                /* round down */\n                else {\n                    /*\n                     * the user specified his own scaling factor. We could\n                     * suggest the scaling factor of\n                     * (32767.0/gfp.PeakSample)*(gfp.scale) but it's usually\n                     * very inaccurate. So we'd rather not advice him on the\n                     * scaling factor.\n                     */\n                    gfc.noclipScale = -1;\n                }\n            } else\n            /* no clipping */\n                gfc.noclipScale = -1;\n        }\n    };\n\n    this.add_dummy_byte = function (gfp, val, n) {\n        var gfc = gfp.internal_flags;\n        var i;\n\n        while (n-- > 0) {\n            putbits_noheaders(gfc, val, 8);\n\n            for (i = 0; i < LameInternalFlags_1.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing += 8;\n        }\n    };\n\n    /**\n     * This is called after a frame of audio has been quantized and coded. It\n     * will write the encoded audio to the bitstream. Note that from a layer3\n     * encoder's perspective the bit stream is primarily a series of main_data()\n     * blocks, with header and side information inserted at the proper locations\n     * to maintain framing. (See Figure A.7 in the IS).\n     */\n    this.format_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        l3_side = gfc.l3_side;\n\n        var bitsPerFrame = this.getframebits(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_pre);\n\n        encodeSideInfo2(gfp, bitsPerFrame);\n        var bits = 8 * gfc.sideinfo_len;\n        bits += writeMainData(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_post);\n        bits += l3_side.resvDrain_post;\n\n        l3_side.main_data_begin += (bitsPerFrame - bits) / 8;\n\n        /*\n         * compare number of bits needed to clear all buffered mp3 frames with\n         * what we think the resvsize is:\n         */\n        if (compute_flushbits(gfp, new TotalBytes()) != gfc.ResvSize) {\n            System$17.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\");\n        }\n\n        /*\n         * compare main_data_begin for the next frame with what we think the\n         * resvsize is:\n         */\n        if ((l3_side.main_data_begin * 8) != gfc.ResvSize) {\n            System$17.err.printf(\"bit reservoir error: \\n\"\n                + \"l3_side.main_data_begin: %d \\n\"\n                + \"Resvoir size:             %d \\n\"\n                + \"resv drain (post)         %d \\n\"\n                + \"resv drain (pre)          %d \\n\"\n                + \"header and sideinfo:      %d \\n\"\n                + \"data bits:                %d \\n\"\n                + \"total bits:               %d (remainder: %d) \\n\"\n                + \"bitsperframe:             %d \\n\",\n                8 * l3_side.main_data_begin, gfc.ResvSize,\n                l3_side.resvDrain_post, l3_side.resvDrain_pre,\n                8 * gfc.sideinfo_len, bits - l3_side.resvDrain_post - 8\n                * gfc.sideinfo_len, bits, bits % 8, bitsPerFrame);\n\n            System$17.err.println(\"This is a fatal error.  It has several possible causes:\");\n            System$17.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\");\n            System$17.err.println(\" 9%%  Your system is overclocked\");\n            System$17.err.println(\" 1%%  bug in LAME encoding library\");\n\n            gfc.ResvSize = l3_side.main_data_begin * 8;\n        }\n        //;\n        assert$17(totbit % 8 == 0);\n\n        if (totbit > 1000000000) {\n            /*\n             * to avoid totbit overflow, (at 8h encoding at 128kbs) lets reset\n             * bit counter\n             */\n            var i;\n            for (i = 0; i < LameInternalFlags_1.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing -= totbit;\n            totbit = 0;\n        }\n\n        return 0;\n    };\n\n    /**\n     * <PRE>\n     * copy data out of the internal MP3 bit buffer into a user supplied\n     *       unsigned char buffer.\n     *\n     *       mp3data=0      indicates data in buffer is an id3tags and VBR tags\n     *       mp3data=1      data is real mp3 frame data.\n     * </PRE>\n     */\n    this.copy_buffer = function (gfc, buffer, bufferPos, size, mp3data) {\n        var minimum = bufByteIdx + 1;\n        if (minimum <= 0)\n            return 0;\n        if (size != 0 && minimum > size) {\n            /* buffer is too small */\n            return -1;\n        }\n        System$17.arraycopy(buf, 0, buffer, bufferPos, minimum);\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n\n        if (mp3data != 0) {\n            var crc = new_int$17(1);\n            crc[0] = gfc.nMusicCRC;\n            vbr.updateMusicCRC(crc, buffer, bufferPos, minimum);\n            gfc.nMusicCRC = crc[0];\n\n            /**\n             * sum number of bytes belonging to the mp3 stream this info will be\n             * written into the Xing/LAME header for seeking\n             */\n            if (minimum > 0) {\n                gfc.VBR_seek_table.nBytesWritten += minimum;\n            }\n\n            if (gfc.decode_on_the_fly) { /* decode the frame */\n                var pcm_buf = new_float_n$17([2, 1152]);\n                var mp3_in = minimum;\n                var samples_out = -1;\n                var i;\n\n                /* re-synthesis to pcm. Repeat until we get a samples_out=0 */\n                while (samples_out != 0) {\n\n                    samples_out = mpg.hip_decode1_unclipped(gfc.hip, buffer,\n                        bufferPos, mp3_in, pcm_buf[0], pcm_buf[1]);\n                    /*\n                     * samples_out = 0: need more data to decode samples_out =\n                     * -1: error. Lets assume 0 pcm output samples_out = number\n                     * of samples output\n                     */\n\n                    /*\n                     * set the lenght of the mp3 input buffer to zero, so that\n                     * in the next iteration of the loop we will be querying\n                     * mpglib about buffered data\n                     */\n                    mp3_in = 0;\n\n                    if (samples_out == -1) {\n                        /*\n                         * error decoding. Not fatal, but might screw up the\n                         * ReplayGain tag. What should we do? Ignore for now\n                         */\n                        samples_out = 0;\n                    }\n                    if (samples_out > 0) {\n                        /* process the PCM data */\n\n                        /*\n                         * this should not be possible, and indicates we have\n                         * overflown the pcm_buf buffer\n                         */\n                        assert$17(samples_out <= 1152);\n\n                        if (gfc.findPeakSample) {\n                            for (i = 0; i < samples_out; i++) {\n                                if (pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = pcm_buf[0][i];\n                                else if (-pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = -pcm_buf[0][i];\n                            }\n                            if (gfc.channels_out > 1)\n                                for (i = 0; i < samples_out; i++) {\n                                    if (pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = pcm_buf[1][i];\n                                    else if (-pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = -pcm_buf[1][i];\n                                }\n                        }\n\n                        if (gfc.findReplayGain)\n                            if (ga.AnalyzeSamples(gfc.rgdata, pcm_buf[0], 0,\n                                    pcm_buf[1], 0, samples_out,\n                                    gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                                return -6;\n\n                    }\n                    /* if (samples_out>0) */\n                }\n                /* while (samples_out!=0) */\n            }\n            /* if (gfc.decode_on_the_fly) */\n\n        }\n        /* if (mp3data) */\n        return minimum;\n    };\n\n    this.init_bit_stream_w = function (gfc) {\n        buf = new_byte$17(Lame.LAME_MAXMP3BUFFER);\n\n        gfc.h_ptr = gfc.w_ptr = 0;\n        gfc.header[gfc.h_ptr].write_timing = 0;\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n        totbit = 0;\n    };\n\n    // From machine.h\n\n\n}\n\nvar BitStream_1 = BitStream$1;\n\nvar System$2 = common.System;\nvar VbrMode$2 = common.VbrMode;\nvar ShortBlock$2 = common.ShortBlock;\nvar new_float$2 = common.new_float;\nvar new_int_n$2 = common.new_int_n;\nvar new_short_n$1 = common.new_short_n;\nvar assert$2 = common.assert;\n\n\n\n\n\n\n\n\n\n\n\nfunction Lame$1() {\n    var self = this;\n    var LAME_MAXALBUMART = (128 * 1024);\n\n    Lame$1.V9 = 410;\n    Lame$1.V8 = 420;\n    Lame$1.V7 = 430;\n    Lame$1.V6 = 440;\n    Lame$1.V5 = 450;\n    Lame$1.V4 = 460;\n    Lame$1.V3 = 470;\n    Lame$1.V2 = 480;\n    Lame$1.V1 = 490;\n    Lame$1.V0 = 500;\n\n    /* still there for compatibility */\n\n    Lame$1.R3MIX = 1000;\n    Lame$1.STANDARD = 1001;\n    Lame$1.EXTREME = 1002;\n    Lame$1.INSANE = 1003;\n    Lame$1.STANDARD_FAST = 1004;\n    Lame$1.EXTREME_FAST = 1005;\n    Lame$1.MEDIUM = 1006;\n    Lame$1.MEDIUM_FAST = 1007;\n\n    /**\n     * maximum size of mp3buffer needed if you encode at most 1152 samples for\n     * each call to lame_encode_buffer. see lame_encode_buffer() below\n     * (LAME_MAXMP3BUFFER is now obsolete)\n     */\n    var LAME_MAXMP3BUFFER = (16384 + LAME_MAXALBUMART);\n    Lame$1.LAME_MAXMP3BUFFER = LAME_MAXMP3BUFFER;\n\n    var ga;\n    var bs;\n    var p;\n    var qupvt;\n    var qu;\n    var psy = new PsyModel_1();\n    var vbr;\n    var ver;\n    var id3;\n    var mpglib;\n    this.enc = new Encoder_1();\n\n    this.setModules = function (_ga, _bs, _p, _qupvt, _qu, _vbr, _ver, _id3, _mpglib) {\n        ga = _ga;\n        bs = _bs;\n        p = _p;\n        qupvt = _qupvt;\n        qu = _qu;\n        vbr = _vbr;\n        ver = _ver;\n        id3 = _id3;\n        mpglib = _mpglib;\n        this.enc.setModules(bs, psy, qupvt, vbr);\n    };\n\n    /**\n     * PSY Model related stuff\n     */\n    function PSY() {\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust = 0.;\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust_short = 0.;\n        /* at transition from one scalefactor band to next */\n        /**\n         * Band weight long scalefactor bands.\n         */\n        this.bo_l_weight = new_float$2(Encoder_1.SBMAX_l);\n        /**\n         * Band weight short scalefactor bands.\n         */\n        this.bo_s_weight = new_float$2(Encoder_1.SBMAX_s);\n    }\n\n    function LowPassHighPass() {\n        this.lowerlimit = 0.;\n    }\n\n    function BandPass(bitrate, lPass) {\n        this.lowpass = lPass;\n    }\n\n    var LAME_ID = 0xFFF88E3B;\n\n    function lame_init_old(gfp) {\n        var gfc;\n\n        gfp.class_id = LAME_ID;\n\n        gfc = gfp.internal_flags = new LameInternalFlags_1();\n\n        /* Global flags. set defaults here for non-zero values */\n        /* see lame.h for description */\n        /*\n         * set integer values to -1 to mean that LAME will compute the best\n         * value, UNLESS the calling program as set it (and the value is no\n         * longer -1)\n         */\n\n        gfp.mode = MPEGMode.NOT_SET;\n        gfp.original = 1;\n        gfp.in_samplerate = 44100;\n        gfp.num_channels = 2;\n        gfp.num_samples = -1;\n\n        gfp.bWriteVbrTag = true;\n        gfp.quality = -1;\n        gfp.short_blocks = null;\n        gfc.subblock_gain = -1;\n\n        gfp.lowpassfreq = 0;\n        gfp.highpassfreq = 0;\n        gfp.lowpasswidth = -1;\n        gfp.highpasswidth = -1;\n\n        gfp.VBR = VbrMode$2.vbr_off;\n        gfp.VBR_q = 4;\n        gfp.ATHcurve = -1;\n        gfp.VBR_mean_bitrate_kbps = 128;\n        gfp.VBR_min_bitrate_kbps = 0;\n        gfp.VBR_max_bitrate_kbps = 0;\n        gfp.VBR_hard_min = 0;\n        gfc.VBR_min_bitrate = 1;\n        /* not 0 ????? */\n        gfc.VBR_max_bitrate = 13;\n        /* not 14 ????? */\n\n        gfp.quant_comp = -1;\n        gfp.quant_comp_short = -1;\n\n        gfp.msfix = -1;\n\n        gfc.resample_ratio = 1;\n\n        gfc.OldValue[0] = 180;\n        gfc.OldValue[1] = 180;\n        gfc.CurrentStep[0] = 4;\n        gfc.CurrentStep[1] = 4;\n        gfc.masking_lower = 1;\n        gfc.nsPsy.attackthre = -1;\n        gfc.nsPsy.attackthre_s = -1;\n\n        gfp.scale = -1;\n\n        gfp.athaa_type = -1;\n        gfp.ATHtype = -1;\n        /* default = -1 = set in lame_init_params */\n        gfp.athaa_loudapprox = -1;\n        /* 1 = flat loudness approx. (total energy) */\n        /* 2 = equal loudness curve */\n        gfp.athaa_sensitivity = 0.0;\n        /* no offset */\n        gfp.useTemporal = null;\n        gfp.interChRatio = -1;\n\n        /*\n         * The reason for int mf_samples_to_encode = ENCDELAY + POSTDELAY;\n         * ENCDELAY = internal encoder delay. And then we have to add\n         * POSTDELAY=288 because of the 50% MDCT overlap. A 576 MDCT granule\n         * decodes to 1152 samples. To synthesize the 576 samples centered under\n         * this granule we need the previous granule for the first 288 samples\n         * (no problem), and the next granule for the next 288 samples (not\n         * possible if this is last granule). So we need to pad with 288 samples\n         * to make sure we can encode the 576 samples we are interested in.\n         */\n        gfc.mf_samples_to_encode = Encoder_1.ENCDELAY + Encoder_1.POSTDELAY;\n        gfp.encoder_padding = 0;\n        gfc.mf_size = Encoder_1.ENCDELAY - Encoder_1.MDCTDELAY;\n        /*\n         * we pad input with this many 0's\n         */\n\n        gfp.findReplayGain = false;\n        gfp.decode_on_the_fly = false;\n\n        gfc.decode_on_the_fly = false;\n        gfc.findReplayGain = false;\n        gfc.findPeakSample = false;\n\n        gfc.RadioGain = 0;\n        gfc.AudiophileGain = 0;\n        gfc.noclipGainChange = 0;\n        gfc.noclipScale = -1.0;\n\n        gfp.preset = 0;\n\n        gfp.write_id3tag_automatic = true;\n        return 0;\n    }\n\n    this.lame_init = function () {\n        var gfp = new LameGlobalFlags_1();\n\n        var ret = lame_init_old(gfp);\n        if (ret != 0) {\n            return null;\n        }\n\n        gfp.lame_allocated_gfp = 1;\n        return gfp;\n    };\n\n    function filter_coef(x) {\n        if (x > 1.0)\n            return 0.0;\n        if (x <= 0.0)\n            return 1.0;\n\n        return Math.cos(Math.PI / 2 * x);\n    }\n\n    this.nearestBitrateFullIndex = function (bitrate) {\n        /* borrowed from DM abr presets */\n\n        var full_bitrate_table = [8, 16, 24, 32, 40, 48, 56, 64, 80,\n            96, 112, 128, 160, 192, 224, 256, 320];\n\n        var lower_range = 0, lower_range_kbps = 0, upper_range = 0, upper_range_kbps = 0;\n\n        /* We assume specified bitrate will be 320kbps */\n        upper_range_kbps = full_bitrate_table[16];\n        upper_range = 16;\n        lower_range_kbps = full_bitrate_table[16];\n        lower_range = 16;\n\n        /*\n         * Determine which significant bitrates the value specified falls\n         * between, if loop ends without breaking then we were correct above\n         * that the value was 320\n         */\n        for (var b = 0; b < 16; b++) {\n            if ((Math.max(bitrate, full_bitrate_table[b + 1])) != bitrate) {\n                upper_range_kbps = full_bitrate_table[b + 1];\n                upper_range = b + 1;\n                lower_range_kbps = full_bitrate_table[b];\n                lower_range = (b);\n                break;\n                /* We found upper range */\n            }\n        }\n\n        /* Determine which range the value specified is closer to */\n        if ((upper_range_kbps - bitrate) > (bitrate - lower_range_kbps)) {\n            return lower_range;\n        }\n        return upper_range;\n    };\n\n    function optimum_samplefreq(lowpassfreq, input_samplefreq) {\n        /*\n         * Rules:\n         *\n         * - if possible, sfb21 should NOT be used\n         */\n        var suggested_samplefreq = 44100;\n\n        if (input_samplefreq >= 48000)\n            suggested_samplefreq = 48000;\n        else if (input_samplefreq >= 44100)\n            suggested_samplefreq = 44100;\n        else if (input_samplefreq >= 32000)\n            suggested_samplefreq = 32000;\n        else if (input_samplefreq >= 24000)\n            suggested_samplefreq = 24000;\n        else if (input_samplefreq >= 22050)\n            suggested_samplefreq = 22050;\n        else if (input_samplefreq >= 16000)\n            suggested_samplefreq = 16000;\n        else if (input_samplefreq >= 12000)\n            suggested_samplefreq = 12000;\n        else if (input_samplefreq >= 11025)\n            suggested_samplefreq = 11025;\n        else if (input_samplefreq >= 8000)\n            suggested_samplefreq = 8000;\n\n        if (lowpassfreq == -1)\n            return suggested_samplefreq;\n\n        if (lowpassfreq <= 15960)\n            suggested_samplefreq = 44100;\n        if (lowpassfreq <= 15250)\n            suggested_samplefreq = 32000;\n        if (lowpassfreq <= 11220)\n            suggested_samplefreq = 24000;\n        if (lowpassfreq <= 9970)\n            suggested_samplefreq = 22050;\n        if (lowpassfreq <= 7230)\n            suggested_samplefreq = 16000;\n        if (lowpassfreq <= 5420)\n            suggested_samplefreq = 12000;\n        if (lowpassfreq <= 4510)\n            suggested_samplefreq = 11025;\n        if (lowpassfreq <= 3970)\n            suggested_samplefreq = 8000;\n\n        if (input_samplefreq < suggested_samplefreq) {\n            /*\n             * choose a valid MPEG sample frequency above the input sample\n             * frequency to avoid SFB21/12 bitrate bloat rh 061115\n             */\n            if (input_samplefreq > 44100) {\n                return 48000;\n            }\n            if (input_samplefreq > 32000) {\n                return 44100;\n            }\n            if (input_samplefreq > 24000) {\n                return 32000;\n            }\n            if (input_samplefreq > 22050) {\n                return 24000;\n            }\n            if (input_samplefreq > 16000) {\n                return 22050;\n            }\n            if (input_samplefreq > 12000) {\n                return 16000;\n            }\n            if (input_samplefreq > 11025) {\n                return 12000;\n            }\n            if (input_samplefreq > 8000) {\n                return 11025;\n            }\n            return 8000;\n        }\n        return suggested_samplefreq;\n    }\n\n    /**\n     * convert samp freq in Hz to index\n     */\n    function SmpFrqIndex(sample_freq, gpf) {\n        switch (sample_freq) {\n            case 44100:\n                gpf.version = 1;\n                return 0;\n            case 48000:\n                gpf.version = 1;\n                return 1;\n            case 32000:\n                gpf.version = 1;\n                return 2;\n            case 22050:\n                gpf.version = 0;\n                return 0;\n            case 24000:\n                gpf.version = 0;\n                return 1;\n            case 16000:\n                gpf.version = 0;\n                return 2;\n            case 11025:\n                gpf.version = 0;\n                return 0;\n            case 12000:\n                gpf.version = 0;\n                return 1;\n            case 8000:\n                gpf.version = 0;\n                return 2;\n            default:\n                gpf.version = 0;\n                return -1;\n        }\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 8 to 320\n     */\n    function FindNearestBitrate(bRate, version, samplerate) {\n        /* MPEG-1 or MPEG-2 LSF */\n        if (samplerate < 16000)\n            version = 2;\n\n        var bitrate = Tables_1.bitrate_table[version][1];\n\n        for (var i = 2; i <= 14; i++) {\n            if (Tables_1.bitrate_table[version][i] > 0) {\n                if (Math.abs(Tables_1.bitrate_table[version][i] - bRate) < Math\n                        .abs(bitrate - bRate))\n                    bitrate = Tables_1.bitrate_table[version][i];\n            }\n        }\n        return bitrate;\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 32 to 448 kbps\n     * @param version\n     *            MPEG-1 or MPEG-2/2.5 LSF\n     */\n    function BitrateIndex(bRate, version, samplerate) {\n        /* convert bitrate in kbps to index */\n        if (samplerate < 16000)\n            version = 2;\n        for (var i = 0; i <= 14; i++) {\n            if (Tables_1.bitrate_table[version][i] > 0) {\n                if (Tables_1.bitrate_table[version][i] == bRate) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function optimum_bandwidth(lh, bitrate) {\n        /**\n         * <PRE>\n         *  Input:\n         *      bitrate     total bitrate in kbps\n         *\n         *   Output:\n         *      lowerlimit: best lowpass frequency limit for input filter in Hz\n         *      upperlimit: best highpass frequency limit for input filter in Hz\n         * </PRE>\n         */\n        var freq_map = [new BandPass(8, 2000),\n            new BandPass(16, 3700), new BandPass(24, 3900),\n            new BandPass(32, 5500), new BandPass(40, 7000),\n            new BandPass(48, 7500), new BandPass(56, 10000),\n            new BandPass(64, 11000), new BandPass(80, 13500),\n            new BandPass(96, 15100), new BandPass(112, 15600),\n            new BandPass(128, 17000), new BandPass(160, 17500),\n            new BandPass(192, 18600), new BandPass(224, 19400),\n            new BandPass(256, 19700), new BandPass(320, 20500)];\n\n        var table_index = self.nearestBitrateFullIndex(bitrate);\n        lh.lowerlimit = freq_map[table_index].lowpass;\n    }\n\n    function lame_init_params_ppflt(gfp) {\n        var gfc = gfp.internal_flags;\n        /***************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /***************************************************************/\n\n        var lowpass_band = 32;\n        var highpass_band = -1;\n\n        if (gfc.lowpass1 > 0) {\n            var minband = 999;\n            for (var band = 0; band <= 31; band++) {\n                var freq = (band / 31.0);\n                /* this band and above will be zeroed: */\n                if (freq >= gfc.lowpass2) {\n                    lowpass_band = Math.min(lowpass_band, band);\n                }\n                if (gfc.lowpass1 < freq && freq < gfc.lowpass2) {\n                    minband = Math.min(minband, band);\n                }\n            }\n\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            if (minband == 999) {\n                gfc.lowpass1 = (lowpass_band - .75) / 31.0;\n            } else {\n                gfc.lowpass1 = (minband - .75) / 31.0;\n            }\n            gfc.lowpass2 = lowpass_band / 31.0;\n        }\n\n        /*\n         * make sure highpass filter is within 90% of what the effective\n         * highpass frequency will be\n         */\n        if (gfc.highpass2 > 0) {\n            if (gfc.highpass2 < .9 * (.75 / 31.0)) {\n                gfc.highpass1 = 0;\n                gfc.highpass2 = 0;\n                System$2.err.println(\"Warning: highpass filter disabled.  \"\n                    + \"highpass frequency too small\\n\");\n            }\n        }\n\n        if (gfc.highpass2 > 0) {\n            var maxband = -1;\n            for (var band = 0; band <= 31; band++) {\n                var freq = band / 31.0;\n                /* this band and below will be zereod */\n                if (freq <= gfc.highpass1) {\n                    highpass_band = Math.max(highpass_band, band);\n                }\n                if (gfc.highpass1 < freq && freq < gfc.highpass2) {\n                    maxband = Math.max(maxband, band);\n                }\n            }\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            gfc.highpass1 = highpass_band / 31.0;\n            if (maxband == -1) {\n                gfc.highpass2 = (highpass_band + .75) / 31.0;\n            } else {\n                gfc.highpass2 = (maxband + .75) / 31.0;\n            }\n        }\n\n        for (var band = 0; band < 32; band++) {\n            var fc1, fc2;\n            var freq = band / 31.0;\n            if (gfc.highpass2 > gfc.highpass1) {\n                fc1 = filter_coef((gfc.highpass2 - freq)\n                    / (gfc.highpass2 - gfc.highpass1 + 1e-20));\n            } else {\n                fc1 = 1.0;\n            }\n            if (gfc.lowpass2 > gfc.lowpass1) {\n                fc2 = filter_coef((freq - gfc.lowpass1)\n                    / (gfc.lowpass2 - gfc.lowpass1 + 1e-20));\n            } else {\n                fc2 = 1.0;\n            }\n            gfc.amp_filter[band] = (fc1 * fc2);\n        }\n    }\n\n    function lame_init_qval(gfp) {\n        var gfc = gfp.internal_flags;\n\n        switch (gfp.quality) {\n            default:\n            case 9: /* no psymodel, no noise shaping */\n                gfc.psymodel = 0;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 8:\n                gfp.quality = 7;\n            //$FALL-THROUGH$\n            case 7:\n                /*\n                 * use psymodel (for short block and m/s switching), but no noise\n                 * shapping\n                 */\n                gfc.psymodel = 1;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 6:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 5:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 4:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 3:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 2:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /* inner loop */\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 1:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 0:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /*\n                 * type 2 disabled because of it slowness, in favor of full outer\n                 * loop search\n                 */\n                gfc.full_outer_loop = 0;\n                /*\n                 * full outer loop search disabled because of audible distortions it\n                 * may generate rh 060629\n                 */\n                break;\n        }\n\n    }\n\n    function lame_init_bitstream(gfp) {\n        var gfc = gfp.internal_flags;\n        gfp.frameNum = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            id3.id3tag_write_v2(gfp);\n        }\n        /* initialize histogram data optionally used by frontend */\n\n        gfc.bitrate_stereoMode_Hist = new_int_n$2([16, 4 + 1]);\n        gfc.bitrate_blockType_Hist = new_int_n$2([16, 4 + 1 + 1]);\n\n        gfc.PeakSample = 0.0;\n\n        /* Write initial VBR Header to bitstream and init VBR data */\n        if (gfp.bWriteVbrTag)\n            vbr.InitVbrTag(gfp);\n    }\n\n    /********************************************************************\n     * initialize internal params based on data in gf (globalflags struct filled\n     * in by calling program)\n     *\n     * OUTLINE:\n     *\n     * We first have some complex code to determine bitrate, output samplerate\n     * and mode. It is complicated by the fact that we allow the user to set\n     * some or all of these parameters, and need to determine best possible\n     * values for the rest of them:\n     *\n     * 1. set some CPU related flags 2. check if we are mono.mono, stereo.mono\n     * or stereo.stereo 3. compute bitrate and output samplerate: user may have\n     * set compression ratio user may have set a bitrate user may have set a\n     * output samplerate 4. set some options which depend on output samplerate\n     * 5. compute the actual compression ratio 6. set mode based on compression\n     * ratio\n     *\n     * The remaining code is much simpler - it just sets options based on the\n     * mode & compression ratio:\n     *\n     * set allow_diff_short based on mode select lowpass filter based on\n     * compression ratio & mode set the bitrate index, and min/max bitrates for\n     * VBR modes disable VBR tag if it is not appropriate initialize the\n     * bitstream initialize scalefac_band data set sideinfo_len (based on\n     * channels, CRC, out_samplerate) write an id3v2 tag into the bitstream\n     * write VBR tag into the bitstream set mpeg1/2 flag estimate the number of\n     * frames (based on a lot of data)\n     *\n     * now we set more flags: nspsytune: see code VBR modes see code CBR/ABR see\n     * code\n     *\n     * Finally, we set the algorithm flags based on the gfp.quality value\n     * lame_init_qval(gfp);\n     *\n     ********************************************************************/\n    this.lame_init_params = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        gfc.Class_ID = 0;\n        if (gfc.ATH == null)\n            gfc.ATH = new ATH_1();\n        if (gfc.PSY == null)\n            gfc.PSY = new PSY();\n        if (gfc.rgdata == null)\n            gfc.rgdata = new ReplayGain_1();\n\n        gfc.channels_in = gfp.num_channels;\n        if (gfc.channels_in == 1)\n            gfp.mode = MPEGMode.MONO;\n        gfc.channels_out = (gfp.mode == MPEGMode.MONO) ? 1 : 2;\n        gfc.mode_ext = Encoder_1.MPG_MD_MS_LR;\n        if (gfp.mode == MPEGMode.MONO)\n            gfp.force_ms = false;\n        /*\n         * don't allow forced mid/side stereo for mono output\n         */\n\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.VBR_mean_bitrate_kbps != 128\n            && gfp.brate == 0)\n            gfp.brate = gfp.VBR_mean_bitrate_kbps;\n\n        if (gfp.VBR == VbrMode$2.vbr_off || gfp.VBR == VbrMode$2.vbr_mtrh\n            || gfp.VBR == VbrMode$2.vbr_mt) {\n            /* these modes can handle free format condition */\n        } else {\n            gfp.free_format = false;\n            /* mode can't be mixed with free format */\n        }\n\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.brate == 0) {\n            /* no bitrate or compression ratio specified, use 11.025 */\n            if (BitStream_1.EQ(gfp.compression_ratio, 0))\n                gfp.compression_ratio = 11.025;\n            /*\n             * rate to compress a CD down to exactly 128000 bps\n             */\n        }\n\n        /* find bitrate if user specify a compression ratio */\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.compression_ratio > 0) {\n\n            if (gfp.out_samplerate == 0)\n                gfp.out_samplerate = map2MP3Frequency((int)(0.97 * gfp.in_samplerate));\n            /*\n             * round up with a margin of 3 %\n             */\n\n            /*\n             * choose a bitrate for the output samplerate which achieves\n             * specified compression ratio\n             */\n            gfp.brate = 0 | (gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.compression_ratio));\n\n            /* we need the version for the bitrate table look up */\n            gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n\n            if (!gfp.free_format) /*\n             * for non Free Format find the nearest allowed\n             * bitrate\n             */\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n        }\n\n        if (gfp.out_samplerate != 0) {\n            if (gfp.out_samplerate < 16000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    64);\n            } else if (gfp.out_samplerate < 32000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    160);\n            } else {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    32);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    320);\n            }\n        }\n\n        /****************************************************************/\n        /* if a filter has not been enabled, see if we should add one: */\n        /****************************************************************/\n        if (gfp.lowpassfreq == 0) {\n            var lowpass = 16000.;\n\n            switch (gfp.VBR) {\n                case VbrMode$2.vbr_off:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.brate);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode$2.vbr_abr:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.VBR_mean_bitrate_kbps);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode$2.vbr_rh:\n                {\n                    var x = [19500, 19000, 18600, 18000, 17500, 16000,\n                        15600, 14900, 12500, 10000, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                    break;\n                }\n                default:\n                {\n                    var x = [19500, 19000, 18500, 18000, 17500, 16500,\n                        15500, 14500, 12500, 9500, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                }\n            }\n            if (gfp.mode == MPEGMode.MONO\n                && (gfp.VBR == VbrMode$2.vbr_off || gfp.VBR == VbrMode$2.vbr_abr))\n                lowpass *= 1.5;\n\n            gfp.lowpassfreq = lowpass | 0;\n        }\n\n        if (gfp.out_samplerate == 0) {\n            if (2 * gfp.lowpassfreq > gfp.in_samplerate) {\n                gfp.lowpassfreq = gfp.in_samplerate / 2;\n            }\n            gfp.out_samplerate = optimum_samplefreq(gfp.lowpassfreq | 0,\n                gfp.in_samplerate);\n        }\n\n        gfp.lowpassfreq = Math.min(20500, gfp.lowpassfreq);\n        gfp.lowpassfreq = Math.min(gfp.out_samplerate / 2, gfp.lowpassfreq);\n\n        if (gfp.VBR == VbrMode$2.vbr_off) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.brate);\n        }\n        if (gfp.VBR == VbrMode$2.vbr_abr) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /*\n         * do not compute ReplayGain values and do not find the peak sample if\n         * we can't store them\n         */\n        if (!gfp.bWriteVbrTag) {\n            gfp.findReplayGain = false;\n            gfp.decode_on_the_fly = false;\n            gfc.findPeakSample = false;\n        }\n        gfc.findReplayGain = gfp.findReplayGain;\n        gfc.decode_on_the_fly = gfp.decode_on_the_fly;\n\n        if (gfc.decode_on_the_fly)\n            gfc.findPeakSample = true;\n\n        if (gfc.findReplayGain) {\n            if (ga.InitGainAnalysis(gfc.rgdata, gfp.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR) {\n                gfp.internal_flags = null;\n                return -6;\n            }\n        }\n\n        if (gfc.decode_on_the_fly && !gfp.decode_only) {\n            if (gfc.hip != null) {\n                mpglib.hip_decode_exit(gfc.hip);\n            }\n            gfc.hip = mpglib.hip_decode_init();\n        }\n\n        gfc.mode_gr = gfp.out_samplerate <= 24000 ? 1 : 2;\n        /*\n         * Number of granules per frame\n         */\n        gfp.framesize = 576 * gfc.mode_gr;\n        gfp.encoder_delay = Encoder_1.ENCDELAY;\n\n        gfc.resample_ratio = gfp.in_samplerate / gfp.out_samplerate;\n\n        /**\n         * <PRE>\n         *  sample freq       bitrate     compression ratio\n         *     [kHz]      [kbps/channel]   for 16 bit input\n         *     44.1            56               12.6\n         *     44.1            64               11.025\n         *     44.1            80                8.82\n         *     22.05           24               14.7\n         *     22.05           32               11.025\n         *     22.05           40                8.82\n         *     16              16               16.0\n         *     16              24               10.667\n         * </PRE>\n         */\n        /**\n         * <PRE>\n         *  For VBR, take a guess at the compression_ratio.\n         *  For example:\n         *\n         *    VBR_q    compression     like\n         *     -        4.4         320 kbps/44 kHz\n         *   0...1      5.5         256 kbps/44 kHz\n         *     2        7.3         192 kbps/44 kHz\n         *     4        8.8         160 kbps/44 kHz\n         *     6       11           128 kbps/44 kHz\n         *     9       14.7          96 kbps\n         *\n         *  for lower bitrates, downsample with --resample\n         * </PRE>\n         */\n        switch (gfp.VBR) {\n            case VbrMode$2.vbr_mt:\n            case VbrMode$2.vbr_rh:\n            case VbrMode$2.vbr_mtrh:\n            {\n                /* numbers are a bit strange, but they determine the lowpass value */\n                var cmp = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14,\n                    15, 16.5];\n                gfp.compression_ratio = cmp[gfp.VBR_q];\n            }\n                break;\n            case VbrMode$2.vbr_abr:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n                break;\n            default:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.brate);\n                break;\n        }\n\n        /*\n         * mode = -1 (not set by user) or mode = MONO (because of only 1 input\n         * channel). If mode has not been set, then select J-STEREO\n         */\n        if (gfp.mode == MPEGMode.NOT_SET) {\n            gfp.mode = MPEGMode.JOINT_STEREO;\n        }\n\n        /* apply user driven high pass filter */\n        if (gfp.highpassfreq > 0) {\n            gfc.highpass1 = 2. * gfp.highpassfreq;\n\n            if (gfp.highpasswidth >= 0)\n                gfc.highpass2 = 2. * (gfp.highpassfreq + gfp.highpasswidth);\n            else\n            /* 0% above on default */\n                gfc.highpass2 = (1 + 0.00) * 2. * gfp.highpassfreq;\n\n            gfc.highpass1 /= gfp.out_samplerate;\n            gfc.highpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.highpass1 = 0;\n            gfc.highpass2 = 0;\n        }\n        /* apply user driven low pass filter */\n        if (gfp.lowpassfreq > 0) {\n            gfc.lowpass2 = 2. * gfp.lowpassfreq;\n            if (gfp.lowpasswidth >= 0) {\n                gfc.lowpass1 = 2. * (gfp.lowpassfreq - gfp.lowpasswidth);\n                if (gfc.lowpass1 < 0) /* has to be >= 0 */\n                    gfc.lowpass1 = 0;\n            } else { /* 0% below on default */\n                gfc.lowpass1 = (1 - 0.00) * 2. * gfp.lowpassfreq;\n            }\n            gfc.lowpass1 /= gfp.out_samplerate;\n            gfc.lowpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.lowpass1 = 0;\n            gfc.lowpass2 = 0;\n        }\n\n        /**********************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /**********************************************************************/\n        lame_init_params_ppflt(gfp);\n        /*******************************************************\n         * samplerate and bitrate index\n         *******************************************************/\n        gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n        if (gfc.samplerate_index < 0) {\n            gfp.internal_flags = null;\n            return -1;\n        }\n\n        if (gfp.VBR == VbrMode$2.vbr_off) {\n            if (gfp.free_format) {\n                gfc.bitrate_index = 0;\n            } else {\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                gfc.bitrate_index = BitrateIndex(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                if (gfc.bitrate_index <= 0) {\n                    gfp.internal_flags = null;\n                    return -1;\n                }\n            }\n        } else {\n            gfc.bitrate_index = 1;\n        }\n\n        /* for CBR, we will write an \"info\" tag. */\n\n        if (gfp.analysis)\n            gfp.bWriteVbrTag = false;\n\n        /* some file options not allowed if output is: not specified or stdout */\n        if (gfc.pinfo != null)\n            gfp.bWriteVbrTag = false;\n        /* disable Xing VBR tag */\n\n        bs.init_bit_stream_w(gfc);\n\n        var j = gfc.samplerate_index + (3 * gfp.version) + 6\n            * (gfp.out_samplerate < 16000 ? 1 : 0);\n        for (var i = 0; i < Encoder_1.SBMAX_l + 1; i++)\n            gfc.scalefac_band.l[i] = qupvt.sfBandIndex[j].l[i];\n\n        for (var i = 0; i < Encoder_1.PSFB21 + 1; i++) {\n            var size = (gfc.scalefac_band.l[22] - gfc.scalefac_band.l[21])\n                / Encoder_1.PSFB21;\n            var start = gfc.scalefac_band.l[21] + i * size;\n            gfc.scalefac_band.psfb21[i] = start;\n        }\n        gfc.scalefac_band.psfb21[Encoder_1.PSFB21] = 576;\n\n        for (var i = 0; i < Encoder_1.SBMAX_s + 1; i++)\n            gfc.scalefac_band.s[i] = qupvt.sfBandIndex[j].s[i];\n\n        for (var i = 0; i < Encoder_1.PSFB12 + 1; i++) {\n            var size = (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                / Encoder_1.PSFB12;\n            var start = gfc.scalefac_band.s[12] + i * size;\n            gfc.scalefac_band.psfb12[i] = start;\n        }\n        gfc.scalefac_band.psfb12[Encoder_1.PSFB12] = 192;\n        /* determine the mean bitrate for main data */\n        if (gfp.version == 1) /* MPEG 1 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 17 : 4 + 32;\n        else\n        /* MPEG 2 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 9 : 4 + 17;\n\n        if (gfp.error_protection)\n            gfc.sideinfo_len += 2;\n\n        lame_init_bitstream(gfp);\n\n        gfc.Class_ID = LAME_ID;\n\n        {\n            var k;\n\n            for (k = 0; k < 19; k++)\n                gfc.nsPsy.pefirbuf[k] = 700 * gfc.mode_gr * gfc.channels_out;\n\n            if (gfp.ATHtype == -1)\n                gfp.ATHtype = 4;\n        }\n        assert$2(gfp.VBR_q <= 9);\n        assert$2(gfp.VBR_q >= 0);\n\n        switch (gfp.VBR) {\n\n            case VbrMode$2.vbr_mt:\n                gfp.VBR = VbrMode$2.vbr_mtrh;\n            //$FALL-THROUGH$\n            case VbrMode$2.vbr_mtrh:\n            {\n                if (gfp.useTemporal == null) {\n                    gfp.useTemporal = false;\n                    /* off by default for this VBR mode */\n                }\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n                /**\n                 * <PRE>\n                 *   The newer VBR code supports only a limited\n                 *     subset of quality levels:\n                 *     9-5=5 are the same, uses x^3/4 quantization\n                 *   4-0=0 are the same  5 plus best huffman divide code\n                 * </PRE>\n                 */\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n                if (gfp.quality < 5)\n                    gfp.quality = 0;\n                if (gfp.quality > 5)\n                    gfp.quality = 5;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                gfc.iteration_loop = new VBRNewIterationLoop(qu);\n                break;\n\n            }\n            case VbrMode$2.vbr_rh:\n            {\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                /*\n                 * VBR needs at least the output of GPSYCHO, so we have to garantee\n                 * that by setting a minimum quality level, actually level 6 does\n                 * it. down to level 6\n                 */\n                if (gfp.quality > 6)\n                    gfp.quality = 6;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                gfc.iteration_loop = new VBROldIterationLoop(qu);\n                break;\n            }\n\n            default: /* cbr/abr */\n            {\n                var vbrmode;\n\n                /*\n                 * no sfb21 extra with CBR code\n                 */\n                gfc.sfb21_extra = false;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                vbrmode = gfp.VBR;\n                if (vbrmode == VbrMode$2.vbr_off)\n                    gfp.VBR_mean_bitrate_kbps = gfp.brate;\n                /* second, set parameters depending on bitrate */\n                p.apply_preset(gfp, gfp.VBR_mean_bitrate_kbps, 0);\n                gfp.VBR = vbrmode;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                if (vbrmode == VbrMode$2.vbr_off) {\n                    gfc.iteration_loop = new CBRNewIterationLoop_1(qu);\n                } else {\n                    gfc.iteration_loop = new ABRIterationLoop(qu);\n                }\n                break;\n            }\n        }\n        assert$2(gfp.scale >= 0);\n        /* initialize default values common for all modes */\n\n        if (gfp.VBR != VbrMode$2.vbr_off) { /* choose a min/max bitrate for VBR */\n            /* if the user didn't specify VBR_max_bitrate: */\n            gfc.VBR_min_bitrate = 1;\n            /*\n             * default: allow 8 kbps (MPEG-2) or 32 kbps (MPEG-1)\n             */\n            gfc.VBR_max_bitrate = 14;\n            /*\n             * default: allow 160 kbps (MPEG-2) or 320 kbps (MPEG-1)\n             */\n            if (gfp.out_samplerate < 16000)\n                gfc.VBR_max_bitrate = 8;\n            /* default: allow 64 kbps (MPEG-2.5) */\n            if (gfp.VBR_min_bitrate_kbps != 0) {\n                gfp.VBR_min_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_min_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_min_bitrate = BitrateIndex(gfp.VBR_min_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_min_bitrate < 0)\n                    return -1;\n            }\n            if (gfp.VBR_max_bitrate_kbps != 0) {\n                gfp.VBR_max_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_max_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_max_bitrate = BitrateIndex(gfp.VBR_max_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_max_bitrate < 0)\n                    return -1;\n            }\n            gfp.VBR_min_bitrate_kbps = Tables_1.bitrate_table[gfp.version][gfc.VBR_min_bitrate];\n            gfp.VBR_max_bitrate_kbps = Tables_1.bitrate_table[gfp.version][gfc.VBR_max_bitrate];\n            gfp.VBR_mean_bitrate_kbps = Math.min(\n                Tables_1.bitrate_table[gfp.version][gfc.VBR_max_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n            gfp.VBR_mean_bitrate_kbps = Math.max(\n                Tables_1.bitrate_table[gfp.version][gfc.VBR_min_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /* just another daily changing developer switch */\n        if (gfp.tune) {\n            gfc.PSY.mask_adjust += gfp.tune_value_a;\n            gfc.PSY.mask_adjust_short += gfp.tune_value_a;\n        }\n\n        /* initialize internal qval settings */\n        lame_init_qval(gfp);\n        assert$2(gfp.scale >= 0);\n        /*\n         * automatic ATH adjustment on\n         */\n        if (gfp.athaa_type < 0)\n            gfc.ATH.useAdjust = 3;\n        else\n            gfc.ATH.useAdjust = gfp.athaa_type;\n\n        /* initialize internal adaptive ATH settings -jd */\n        gfc.ATH.aaSensitivityP = Math.pow(10.0, gfp.athaa_sensitivity\n            / -10.0);\n\n        if (gfp.short_blocks == null) {\n            gfp.short_blocks = ShortBlock$2.short_block_allowed;\n        }\n\n        /*\n         * Note Jan/2003: Many hardware decoders cannot handle short blocks in\n         * regular stereo mode unless they are coupled (same type in both\n         * channels) it is a rare event (1 frame per min. or so) that LAME would\n         * use uncoupled short blocks, so lets turn them off until we decide how\n         * to handle this. No other encoders allow uncoupled short blocks, even\n         * though it is in the standard.\n         */\n        /*\n         * rh 20040217: coupling makes no sense for mono and dual-mono streams\n         */\n        if (gfp.short_blocks == ShortBlock$2.short_block_allowed\n            && (gfp.mode == MPEGMode.JOINT_STEREO || gfp.mode == MPEGMode.STEREO)) {\n            gfp.short_blocks = ShortBlock$2.short_block_coupled;\n        }\n\n        if (gfp.quant_comp < 0)\n            gfp.quant_comp = 1;\n        if (gfp.quant_comp_short < 0)\n            gfp.quant_comp_short = 0;\n\n        if (gfp.msfix < 0)\n            gfp.msfix = 0;\n\n        /* select psychoacoustic model */\n        gfp.exp_nspsytune = gfp.exp_nspsytune | 1;\n\n        if (gfp.internal_flags.nsPsy.attackthre < 0)\n            gfp.internal_flags.nsPsy.attackthre = PsyModel_1.NSATTACKTHRE;\n        if (gfp.internal_flags.nsPsy.attackthre_s < 0)\n            gfp.internal_flags.nsPsy.attackthre_s = PsyModel_1.NSATTACKTHRE_S;\n\n        assert$2(gfp.scale >= 0);\n\n        if (gfp.scale < 0)\n            gfp.scale = 1;\n\n        if (gfp.ATHtype < 0)\n            gfp.ATHtype = 4;\n\n        if (gfp.ATHcurve < 0)\n            gfp.ATHcurve = 4;\n\n        if (gfp.athaa_loudapprox < 0)\n            gfp.athaa_loudapprox = 2;\n\n        if (gfp.interChRatio < 0)\n            gfp.interChRatio = 0;\n\n        if (gfp.useTemporal == null)\n            gfp.useTemporal = true;\n        /* on by default */\n\n        /*\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\" by Martin Sieler, Ralph\n         * Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         */\n        gfc.slot_lag = gfc.frac_SpF = 0;\n        if (gfp.VBR == VbrMode$2.vbr_off)\n            gfc.slot_lag = gfc.frac_SpF = (((gfp.version + 1) * 72000 * gfp.brate) % gfp.out_samplerate) | 0;\n\n        qupvt.iteration_init(gfp);\n        psy.psymodel_init(gfp);\n        assert$2(gfp.scale >= 0);\n        return 0;\n    };\n\n    function update_inbuffer_size(gfc, nsamples) {\n        if (gfc.in_buffer_0 == null || gfc.in_buffer_nsamples < nsamples) {\n            gfc.in_buffer_0 = new_float$2(nsamples);\n            gfc.in_buffer_1 = new_float$2(nsamples);\n            gfc.in_buffer_nsamples = nsamples;\n        }\n    }\n\n    this.lame_encode_flush = function (gfp, mp3buffer, mp3bufferPos, mp3buffer_size) {\n        var gfc = gfp.internal_flags;\n        var buffer = new_short_n$1([2, 1152]);\n        var imp3 = 0, mp3count, mp3buffer_size_remaining;\n\n        /*\n         * we always add POSTDELAY=288 padding to make sure granule with real\n         * data can be complety decoded (because of 50% overlap with next\n         * granule\n         */\n        var end_padding;\n        var frames_left;\n        var samples_to_encode = gfc.mf_samples_to_encode - Encoder_1.POSTDELAY;\n        var mf_needed = calcNeeded(gfp);\n\n        /* Was flush already called? */\n        if (gfc.mf_samples_to_encode < 1) {\n            return 0;\n        }\n        mp3count = 0;\n\n        if (gfp.in_samplerate != gfp.out_samplerate) {\n            /*\n             * delay due to resampling; needs to be fixed, if resampling code\n             * gets changed\n             */\n            samples_to_encode += 16. * gfp.out_samplerate / gfp.in_samplerate;\n        }\n        end_padding = gfp.framesize - (samples_to_encode % gfp.framesize);\n        if (end_padding < 576)\n            end_padding += gfp.framesize;\n        gfp.encoder_padding = end_padding;\n\n        frames_left = (samples_to_encode + end_padding) / gfp.framesize;\n\n        /*\n         * send in a frame of 0 padding until all internal sample buffers are\n         * flushed\n         */\n        while (frames_left > 0 && imp3 >= 0) {\n            var bunch = mf_needed - gfc.mf_size;\n            var frame_num = gfp.frameNum;\n\n            bunch *= gfp.in_samplerate;\n            bunch /= gfp.out_samplerate;\n            if (bunch > 1152)\n                bunch = 1152;\n            if (bunch < 1)\n                bunch = 1;\n\n            mp3buffer_size_remaining = mp3buffer_size - mp3count;\n\n            /* if user specifed buffer size = 0, dont check size */\n            if (mp3buffer_size == 0)\n                mp3buffer_size_remaining = 0;\n\n            imp3 = this.lame_encode_buffer(gfp, buffer[0], buffer[1], bunch,\n                mp3buffer, mp3bufferPos, mp3buffer_size_remaining);\n\n            mp3bufferPos += imp3;\n            mp3count += imp3;\n            frames_left -= (frame_num != gfp.frameNum) ? 1 : 0;\n        }\n        /*\n         * Set gfc.mf_samples_to_encode to 0, so we may detect and break loops\n         * calling it more than once in a row.\n         */\n        gfc.mf_samples_to_encode = 0;\n\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        /* mp3 related stuff. bit buffer might still contain some mp3 data */\n        bs.flush_bitstream(gfp);\n        imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n            mp3buffer_size_remaining, 1);\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n        mp3bufferPos += imp3;\n        mp3count += imp3;\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            /* write a id3 tag to the bitstream */\n            id3.id3tag_write_v1(gfp);\n\n            imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n                mp3buffer_size_remaining, 0);\n\n            if (imp3 < 0) {\n                return imp3;\n            }\n            mp3count += imp3;\n        }\n        return mp3count;\n    };\n\n    this.lame_encode_buffer = function (gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        update_inbuffer_size(gfc, nsamples);\n\n        in_buffer[0] = gfc.in_buffer_0;\n        in_buffer[1] = gfc.in_buffer_1;\n\n        /* make a copy of input buffer, changing type to sample_t */\n        for (var i = 0; i < nsamples; i++) {\n            in_buffer[0][i] = buffer_l[i];\n            if (gfc.channels_in > 1)\n                in_buffer[1][i] = buffer_r[i];\n        }\n\n        return lame_encode_buffer_sample(gfp, in_buffer[0], in_buffer[1],\n            nsamples, mp3buf, mp3bufPos, mp3buf_size);\n    };\n\n    function calcNeeded(gfp) {\n        var mf_needed = Encoder_1.BLKSIZE + gfp.framesize - Encoder_1.FFTOFFSET;\n        /*\n         * amount needed for FFT\n         */\n        mf_needed = Math.max(mf_needed, 512 + gfp.framesize - 32);\n        assert$2(LameInternalFlags_1.MFSIZE >= mf_needed);\n\n        return mf_needed;\n    }\n\n    function lame_encode_buffer_sample(gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var mp3size = 0, ret, i, ch, mf_needed;\n        var mp3out;\n        var mfbuf = [null, null];\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        /* copy out any tags that may have been written into bitstream */\n        mp3out = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 0);\n        if (mp3out < 0)\n            return mp3out;\n        /* not enough buffer space */\n        mp3bufPos += mp3out;\n        mp3size += mp3out;\n\n        in_buffer[0] = buffer_l;\n        in_buffer[1] = buffer_r;\n\n        /* Apply user defined re-scaling */\n\n        /* user selected scaling of the samples */\n        if (BitStream_1.NEQ(gfp.scale, 0) && BitStream_1.NEQ(gfp.scale, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale;\n                if (gfc.channels_out == 2)\n                    in_buffer[1][i] *= gfp.scale;\n            }\n        }\n\n        /* user selected scaling of the channel 0 (left) samples */\n        if (BitStream_1.NEQ(gfp.scale_left, 0)\n            && BitStream_1.NEQ(gfp.scale_left, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale_left;\n            }\n        }\n\n        /* user selected scaling of the channel 1 (right) samples */\n        if (BitStream_1.NEQ(gfp.scale_right, 0)\n            && BitStream_1.NEQ(gfp.scale_right, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[1][i] *= gfp.scale_right;\n            }\n        }\n\n        /* Downsample to Mono if 2 channels in and 1 channel out */\n        if (gfp.num_channels == 2 && gfc.channels_out == 1) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] = 0.5 * ( in_buffer[0][i] + in_buffer[1][i]);\n                in_buffer[1][i] = 0.0;\n            }\n        }\n\n        mf_needed = calcNeeded(gfp);\n\n        mfbuf[0] = gfc.mfbuf[0];\n        mfbuf[1] = gfc.mfbuf[1];\n\n        var in_bufferPos = 0;\n        while (nsamples > 0) {\n            var in_buffer_ptr = [null, null];\n            var n_in = 0;\n            /* number of input samples processed with fill_buffer */\n            var n_out = 0;\n            /* number of samples output with fill_buffer */\n            /* n_in <> n_out if we are resampling */\n\n            in_buffer_ptr[0] = in_buffer[0];\n            in_buffer_ptr[1] = in_buffer[1];\n            /* copy in new samples into mfbuf, with resampling */\n            var inOut = new InOut();\n            fill_buffer(gfp, mfbuf, in_buffer_ptr, in_bufferPos, nsamples,\n                inOut);\n            n_in = inOut.n_in;\n            n_out = inOut.n_out;\n\n            /* compute ReplayGain of resampled input if requested */\n            if (gfc.findReplayGain && !gfc.decode_on_the_fly)\n                if (ga.AnalyzeSamples(gfc.rgdata, mfbuf[0], gfc.mf_size,\n                        mfbuf[1], gfc.mf_size, n_out, gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                    return -6;\n\n            /* update in_buffer counters */\n            nsamples -= n_in;\n            in_bufferPos += n_in;\n            if (gfc.channels_out == 2)\n                ;// in_bufferPos += n_in;\n\n            /* update mfbuf[] counters */\n            gfc.mf_size += n_out;\n            assert$2(gfc.mf_size <= LameInternalFlags_1.MFSIZE);\n\n            /*\n             * lame_encode_flush may have set gfc.mf_sample_to_encode to 0 so we\n             * have to reinitialize it here when that happened.\n             */\n            if (gfc.mf_samples_to_encode < 1) {\n                gfc.mf_samples_to_encode = Encoder_1.ENCDELAY + Encoder_1.POSTDELAY;\n            }\n            gfc.mf_samples_to_encode += n_out;\n\n            if (gfc.mf_size >= mf_needed) {\n                /* encode the frame. */\n                /* mp3buf = pointer to current location in buffer */\n                /* mp3buf_size = size of original mp3 output buffer */\n                /* = 0 if we should not worry about the */\n                /* buffer size because calling program is */\n                /* to lazy to compute it */\n                /* mp3size = size of data written to buffer so far */\n                /* mp3buf_size-mp3size = amount of space avalable */\n\n                var buf_size = mp3buf_size - mp3size;\n                if (mp3buf_size == 0)\n                    buf_size = 0;\n\n                ret = lame_encode_frame(gfp, mfbuf[0], mfbuf[1], mp3buf,\n                    mp3bufPos, buf_size);\n\n                if (ret < 0)\n                    return ret;\n                mp3bufPos += ret;\n                mp3size += ret;\n\n                /* shift out old samples */\n                gfc.mf_size -= gfp.framesize;\n                gfc.mf_samples_to_encode -= gfp.framesize;\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    for (i = 0; i < gfc.mf_size; i++)\n                        mfbuf[ch][i] = mfbuf[ch][i + gfp.framesize];\n            }\n        }\n        assert$2(nsamples == 0);\n\n        return mp3size;\n    }\n\n    function lame_encode_frame(gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var ret = self.enc.lame_encode_mp3_frame(gfp, inbuf_l, inbuf_r, mp3buf,\n            mp3bufPos, mp3buf_size);\n        gfp.frameNum++;\n        return ret;\n    }\n\n    function InOut() {\n        this.n_in = 0;\n        this.n_out = 0;\n    }\n\n\n    function NumUsed() {\n        this.num_used = 0;\n    }\n\n    /**\n     * Greatest common divisor.\n     * <p>\n     * Joint work of Euclid and M. Hendry\n     */\n    function gcd(i, j) {\n        return j != 0 ? gcd(j, i % j) : i;\n    }\n\n    /**\n     * Resampling via FIR filter, blackman window.\n     */\n    function blackman(x, fcn, l) {\n        /*\n         * This algorithm from: SIGNAL PROCESSING ALGORITHMS IN FORTRAN AND C\n         * S.D. Stearns and R.A. David, Prentice-Hall, 1992\n         */\n        var wcn = (Math.PI * fcn);\n\n        x /= l;\n        if (x < 0)\n            x = 0;\n        if (x > 1)\n            x = 1;\n        var x2 = x - .5;\n\n        var bkwn = 0.42 - 0.5 * Math.cos(2 * x * Math.PI) + 0.08 * Math.cos(4 * x * Math.PI);\n        if (Math.abs(x2) < 1e-9)\n            return (wcn / Math.PI);\n        else\n            return (bkwn * Math.sin(l * wcn * x2) / (Math.PI * l * x2));\n    }\n\n    function fill_buffer_resample(gfp, outbuf, outbufPos, desired_len, inbuf, in_bufferPos, len, num_used, ch) {\n        var gfc = gfp.internal_flags;\n        var i, j = 0, k;\n        /* number of convolution functions to pre-compute */\n        var bpc = gfp.out_samplerate\n            / gcd(gfp.out_samplerate, gfp.in_samplerate);\n        if (bpc > LameInternalFlags_1.BPC)\n            bpc = LameInternalFlags_1.BPC;\n\n        var intratio = (Math.abs(gfc.resample_ratio\n            - Math.floor(.5 + gfc.resample_ratio)) < .0001) ? 1 : 0;\n        var fcn = 1.00 / gfc.resample_ratio;\n        if (fcn > 1.00)\n            fcn = 1.00;\n        var filter_l = 31;\n        if (0 == filter_l % 2)\n            --filter_l;\n        /* must be odd */\n        filter_l += intratio;\n        /* unless resample_ratio=int, it must be even */\n\n        var BLACKSIZE = filter_l + 1;\n        /* size of data needed for FIR */\n\n        if (gfc.fill_buffer_resample_init == 0) {\n            gfc.inbuf_old[0] = new_float$2(BLACKSIZE);\n            gfc.inbuf_old[1] = new_float$2(BLACKSIZE);\n            for (i = 0; i <= 2 * bpc; ++i)\n                gfc.blackfilt[i] = new_float$2(BLACKSIZE);\n\n            gfc.itime[0] = 0;\n            gfc.itime[1] = 0;\n\n            /* precompute blackman filter coefficients */\n            for (j = 0; j <= 2 * bpc; j++) {\n                var sum = 0.;\n                var offset = (j - bpc) / (2. * bpc);\n                for (i = 0; i <= filter_l; i++)\n                    sum += gfc.blackfilt[j][i] = blackman(i - offset, fcn,\n                        filter_l);\n                for (i = 0; i <= filter_l; i++)\n                    gfc.blackfilt[j][i] /= sum;\n            }\n            gfc.fill_buffer_resample_init = 1;\n        }\n\n        var inbuf_old = gfc.inbuf_old[ch];\n\n        /* time of j'th element in inbuf = itime + j/ifreq; */\n        /* time of k'th element in outbuf = j/ofreq */\n        for (k = 0; k < desired_len; k++) {\n            var time0;\n            var joff;\n\n            time0 = k * gfc.resample_ratio;\n            /* time of k'th output sample */\n            j = 0 | Math.floor(time0 - gfc.itime[ch]);\n\n            /* check if we need more input data */\n            if ((filter_l + j - filter_l / 2) >= len)\n                break;\n\n            /* blackman filter. by default, window centered at j+.5(filter_l%2) */\n            /* but we want a window centered at time0. */\n            var offset = (time0 - gfc.itime[ch] - (j + .5 * (filter_l % 2)));\n            assert$2(Math.abs(offset) <= .501);\n\n            /* find the closest precomputed window for this offset: */\n            joff = 0 | Math.floor((offset * 2 * bpc) + bpc + .5);\n            var xvalue = 0.;\n            for (i = 0; i <= filter_l; ++i) {\n                var j2 = i + j - filter_l / 2;\n                var y;\n                assert$2(j2 < len);\n                assert$2(j2 + BLACKSIZE >= 0);\n                y = (j2 < 0) ? inbuf_old[BLACKSIZE + j2] : inbuf[in_bufferPos\n                + j2];\n                xvalue += y * gfc.blackfilt[joff][i];\n            }\n            outbuf[outbufPos + k] = xvalue;\n        }\n\n        /* k = number of samples added to outbuf */\n        /* last k sample used data from [j-filter_l/2,j+filter_l-filter_l/2] */\n\n        /* how many samples of input data were used: */\n        num_used.num_used = Math.min(len, filter_l + j - filter_l / 2);\n\n        /*\n         * adjust our input time counter. Incriment by the number of samples\n         * used, then normalize so that next output sample is at time 0, next\n         * input buffer is at time itime[ch]\n         */\n        gfc.itime[ch] += num_used.num_used - k * gfc.resample_ratio;\n\n        /* save the last BLACKSIZE samples into the inbuf_old buffer */\n        if (num_used.num_used >= BLACKSIZE) {\n            for (i = 0; i < BLACKSIZE; i++)\n                inbuf_old[i] = inbuf[in_bufferPos + num_used.num_used + i\n                - BLACKSIZE];\n        } else {\n            /* shift in num_used.num_used samples into inbuf_old */\n            var n_shift = BLACKSIZE - num_used.num_used;\n            /*\n             * number of samples to\n             * shift\n             */\n\n            /*\n             * shift n_shift samples by num_used.num_used, to make room for the\n             * num_used new samples\n             */\n            for (i = 0; i < n_shift; ++i)\n                inbuf_old[i] = inbuf_old[i + num_used.num_used];\n\n            /* shift in the num_used.num_used samples */\n            for (j = 0; i < BLACKSIZE; ++i, ++j)\n                inbuf_old[i] = inbuf[in_bufferPos + j];\n\n            assert$2(j == num_used.num_used);\n        }\n        return k;\n        /* return the number samples created at the new samplerate */\n    }\n\n    function fill_buffer(gfp, mfbuf, in_buffer, in_bufferPos, nsamples, io) {\n        var gfc = gfp.internal_flags;\n\n        /* copy in new samples into mfbuf, with resampling if necessary */\n        if ((gfc.resample_ratio < .9999) || (gfc.resample_ratio > 1.0001)) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var numUsed = new NumUsed();\n                io.n_out = fill_buffer_resample(gfp, mfbuf[ch], gfc.mf_size,\n                    gfp.framesize, in_buffer[ch], in_bufferPos, nsamples,\n                    numUsed, ch);\n                io.n_in = numUsed.num_used;\n            }\n        } else {\n            io.n_out = Math.min(gfp.framesize, nsamples);\n            io.n_in = io.n_out;\n            for (var i = 0; i < io.n_out; ++i) {\n                mfbuf[0][gfc.mf_size + i] = in_buffer[0][in_bufferPos + i];\n                if (gfc.channels_out == 2)\n                    mfbuf[1][gfc.mf_size + i] = in_buffer[1][in_bufferPos + i];\n            }\n        }\n    }\n\n}\n\nvar Lame_1 = Lame$1;\n\nvar VbrMode$20 = common.VbrMode;\nfunction Presets$1() {\n    function VBRPresets(qual, comp, compS,\n                        y, shThreshold, shThresholdS,\n                        adj, adjShort, lower,\n                        curve, sens, inter,\n                        joint, mod, fix) {\n        this.vbr_q = qual;\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.expY = y;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.masking_adj = adj;\n        this.masking_adj_short = adjShort;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.ath_sensitivity = sens;\n        this.interch = inter;\n        this.safejoint = joint;\n        this.sfb21mod = mod;\n        this.msfix = fix;\n    }\n\n    function ABRPresets(kbps, comp, compS,\n                        joint, fix, shThreshold,\n                        shThresholdS, bass, sc,\n                        mask, lower, curve,\n                        interCh, sfScale) {\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.safejoint = joint;\n        this.nsmsfix = fix;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.nsbass = bass;\n        this.scale = sc;\n        this.masking_adj = mask;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.interch = interCh;\n        this.sfscale = sfScale;\n    }\n\n    var lame;\n\n    this.setModules = function (_lame) {\n        lame = _lame;\n    };\n\n    /**\n     * <PRE>\n     * Switch mappings for VBR mode VBR_RH\n     *             vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_old_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 5.20, 125.0, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97),\n        new VBRPresets(1, 9, 9, 0, 5.30, 125.0, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 5.60, 125.0, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49),\n        new VBRPresets(3, 9, 9, 1, 5.80, 130.0, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64),\n        new VBRPresets(4, 9, 9, 1, 6.00, 135.0, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 6.40, 140.0, 0.5, 0.4, -7.5, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 6.60, 145.0, 0.67, 0.65, -14.7, 6.5, -19, 0.0004, 0, 0, 2.30),\n        new VBRPresets(7, 9, 9, 1, 6.60, 145.0, 0.8, 0.75, -19.7, 8, -22, 0.0006, 0, 0, 2.70),\n        new VBRPresets(8, 9, 9, 1, 6.60, 145.0, 1.2, 1.15, -27.5, 10, -23, 0.0007, 0, 0, 0),\n        new VBRPresets(9, 9, 9, 1, 6.60, 145.0, 1.6, 1.6, -36, 11, -25, 0.0008, 0, 0, 0),\n        new VBRPresets(10, 9, 9, 1, 6.60, 145.0, 2.0, 2.0, -36, 12, -25, 0.0008, 0, 0, 0)\n    ];\n\n    /**\n     * <PRE>\n     *                 vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_psy_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 4.20, 25.0, -7.0, -4.0, 7.5, 1, 0, 0, 2, 26, 0.97),\n        new VBRPresets(1, 9, 9, 0, 4.20, 25.0, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 4.20, 25.0, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49),\n        new VBRPresets(3, 9, 9, 1, 4.20, 25.0, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64),\n        new VBRPresets(4, 9, 9, 1, 4.20, 25.0, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 4.20, 25.0, -1.0, 1.65, -7.7, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 4.20, 25.0, -0.0, 2.47, -7.7, 6.5, -19, 0.0004, 0, 0, 2),\n        new VBRPresets(7, 9, 9, 1, 4.20, 25.0, 0.5, 2.0, -14.5, 8, -22, 0.0006, 0, 0, 2),\n        new VBRPresets(8, 9, 9, 1, 4.20, 25.0, 1.0, 2.4, -22.0, 10, -23, 0.0007, 0, 0, 2),\n        new VBRPresets(9, 9, 9, 1, 4.20, 25.0, 1.5, 2.95, -30.0, 11, -25, 0.0008, 0, 0, 2),\n        new VBRPresets(10, 9, 9, 1, 4.20, 25.0, 2.0, 2.95, -36.0, 12, -30, 0.0008, 0, 0, 2)\n    ];\n\n    function apply_vbr_preset(gfp, a, enforce) {\n        var vbr_preset = gfp.VBR == VbrMode$20.vbr_rh ? vbr_old_switch_map\n            : vbr_psy_switch_map;\n\n        var x = gfp.VBR_q_frac;\n        var p = vbr_preset[a];\n        var q = vbr_preset[a + 1];\n        var set = p;\n\n        // NOOP(vbr_q);\n        // NOOP(quant_comp);\n        // NOOP(quant_comp_s);\n        // NOOP(expY);\n        p.st_lrm = p.st_lrm + x * (q.st_lrm - p.st_lrm);\n        // LERP(st_lrm);\n        p.st_s = p.st_s + x * (q.st_s - p.st_s);\n        // LERP(st_s);\n        p.masking_adj = p.masking_adj + x * (q.masking_adj - p.masking_adj);\n        // LERP(masking_adj);\n        p.masking_adj_short = p.masking_adj_short + x\n            * (q.masking_adj_short - p.masking_adj_short);\n        // LERP(masking_adj_short);\n        p.ath_lower = p.ath_lower + x * (q.ath_lower - p.ath_lower);\n        // LERP(ath_lower);\n        p.ath_curve = p.ath_curve + x * (q.ath_curve - p.ath_curve);\n        // LERP(ath_curve);\n        p.ath_sensitivity = p.ath_sensitivity + x\n            * (q.ath_sensitivity - p.ath_sensitivity);\n        // LERP(ath_sensitivity);\n        p.interch = p.interch + x * (q.interch - p.interch);\n        // LERP(interch);\n        // NOOP(safejoint);\n        // NOOP(sfb21mod);\n        p.msfix = p.msfix + x * (q.msfix - p.msfix);\n        // LERP(msfix);\n\n        lame_set_VBR_q(gfp, set.vbr_q);\n\n        if (enforce != 0)\n            gfp.quant_comp = set.quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = set.quant_comp;\n        // SET_OPTION(quant_comp, set.quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = set.quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = set.quant_comp_s;\n        // SET_OPTION(quant_comp_short, set.quant_comp_s, -1);\n        if (set.expY != 0) {\n            gfp.experimentalY = set.expY != 0;\n        }\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        // SET_OPTION(short_threshold_lrm, set.st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        // SET_OPTION(short_threshold_s, set.st_s, -1);\n        if (enforce != 0)\n            gfp.maskingadjust = set.masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = set.masking_adj;\n        // SET_OPTION(maskingadjust, set.masking_adj, 0);\n        if (enforce != 0)\n            gfp.maskingadjust_short = set.masking_adj_short;\n        else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n            gfp.maskingadjust_short = set.masking_adj_short;\n        // SET_OPTION(maskingadjust_short, set.masking_adj_short, 0);\n        if (enforce != 0)\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        else if (!(Math.abs((-gfp.ATHlower * 10.0) - 0) > 0))\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        // SET_OPTION(ATHlower, set.ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = set.ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = set.ath_curve;\n        // SET_OPTION(ATHcurve, set.ath_curve, -1);\n        if (enforce != 0)\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        else if (!(Math.abs(gfp.athaa_sensitivity - -1) > 0))\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        // SET_OPTION(athaa_sensitivity, set.ath_sensitivity, 0);\n        if (set.interch > 0) {\n            if (enforce != 0)\n                gfp.interChRatio = set.interch;\n            else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n                gfp.interChRatio = set.interch;\n            // SET_OPTION(interChRatio, set.interch, -1);\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (set.safejoint > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | set.safejoint;\n        }\n        if (set.sfb21mod > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (set.sfb21mod << 20);\n        }\n        if (enforce != 0)\n            gfp.msfix = set.msfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = set.msfix;\n        // SET_OPTION(msfix, set.msfix, -1);\n\n        if (enforce == 0) {\n            gfp.VBR_q = a;\n            gfp.VBR_q_frac = x;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  Switch mappings for ABR mode\n     *\n     *              kbps  quant q_s safejoint nsmsfix st_lrm  st_s  ns-bass scale   msk ath_lwr ath_curve  interch , sfscale\n     * </PRE>\n     */\n    var abr_switch_map = [\n        new ABRPresets(8, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -30.0, 11, 0.0012, 1), /*   8, impossible to use in stereo */\n        new ABRPresets(16, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -25.0, 11, 0.0010, 1), /*  16 */\n        new ABRPresets(24, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -20.0, 11, 0.0010, 1), /*  24 */\n        new ABRPresets(32, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -15.0, 11, 0.0010, 1), /*  32 */\n        new ABRPresets(40, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  40 */\n        new ABRPresets(48, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  48 */\n        new ABRPresets(56, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -6.0, 11, 0.0008, 1), /*  56 */\n        new ABRPresets(64, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -2.0, 11, 0.0008, 1), /*  64 */\n        new ABRPresets(80, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, .0, 8, 0.0007, 1), /*  80 */\n        new ABRPresets(96, 9, 9, 0, 2.50, 6.60, 145, 0, 0.95, 0, 1.0, 5.5, 0.0006, 1), /*  96 */\n        new ABRPresets(112, 9, 9, 0, 2.25, 6.60, 145, 0, 0.95, 0, 2.0, 4.5, 0.0005, 1), /* 112 */\n        new ABRPresets(128, 9, 9, 0, 1.95, 6.40, 140, 0, 0.95, 0, 3.0, 4, 0.0002, 1), /* 128 */\n        new ABRPresets(160, 9, 9, 1, 1.79, 6.00, 135, 0, 0.95, -2, 5.0, 3.5, 0, 1), /* 160 */\n        new ABRPresets(192, 9, 9, 1, 1.49, 5.60, 125, 0, 0.97, -4, 7.0, 3, 0, 0), /* 192 */\n        new ABRPresets(224, 9, 9, 1, 1.25, 5.20, 125, 0, 0.98, -6, 9.0, 2, 0, 0), /* 224 */\n        new ABRPresets(256, 9, 9, 1, 0.97, 5.20, 125, 0, 1.00, -8, 10.0, 1, 0, 0), /* 256 */\n        new ABRPresets(320, 9, 9, 1, 0.90, 5.20, 125, 0, 1.00, -10, 12.0, 0, 0, 0)  /* 320 */\n    ];\n\n    function apply_abr_preset(gfp, preset, enforce) {\n        /* Variables for the ABR stuff */\n        var actual_bitrate = preset;\n\n        var r = lame.nearestBitrateFullIndex(preset);\n\n        gfp.VBR = VbrMode$20.vbr_abr;\n        gfp.VBR_mean_bitrate_kbps = actual_bitrate;\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 320);\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\n        gfp.brate = gfp.VBR_mean_bitrate_kbps;\n        if (gfp.VBR_mean_bitrate_kbps > 320) {\n            gfp.disable_reservoir = true;\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (abr_switch_map[r].safejoint > 0)\n            gfp.exp_nspsytune = gfp.exp_nspsytune | 2;\n        /* safejoint */\n\n        if (abr_switch_map[r].sfscale > 0) {\n            gfp.internal_flags.noise_shaping = 2;\n        }\n        /* ns-bass tweaks */\n        if (Math.abs(abr_switch_map[r].nsbass) > 0) {\n            var k = (int)(abr_switch_map[r].nsbass * 4);\n            if (k < 0)\n                k += 64;\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (k << 2);\n        }\n\n        if (enforce != 0)\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        // SET_OPTION(quant_comp, abr_switch_map[r].quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        // SET_OPTION(quant_comp_short, abr_switch_map[r].quant_comp_s, -1);\n\n        if (enforce != 0)\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        // SET_OPTION(msfix, abr_switch_map[r].nsmsfix, -1);\n\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        // SET_OPTION(short_threshold_lrm, abr_switch_map[r].st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        // SET_OPTION(short_threshold_s, abr_switch_map[r].st_s, -1);\n\n        /*\n         * ABR seems to have big problems with clipping, especially at low\n         * bitrates\n         */\n        /*\n         * so we compensate for that here by using a scale value depending on\n         * bitrate\n         */\n        if (enforce != 0)\n            gfp.scale = abr_switch_map[r].scale;\n        else if (!(Math.abs(gfp.scale - -1) > 0))\n            gfp.scale = abr_switch_map[r].scale;\n        // SET_OPTION(scale, abr_switch_map[r].scale, -1);\n\n        if (enforce != 0)\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        // SET_OPTION(maskingadjust, abr_switch_map[r].masking_adj, 0);\n        if (abr_switch_map[r].masking_adj > 0) {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // .9, 0);\n        } else {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // 1.1, 0);\n        }\n\n        if (enforce != 0)\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        else if (!(Math.abs((-gfp.ATHlower * 10.) - 0) > 0))\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        // SET_OPTION(ATHlower, abr_switch_map[r].ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        // SET_OPTION(ATHcurve, abr_switch_map[r].ath_curve, -1);\n\n        if (enforce != 0)\n            gfp.interChRatio = abr_switch_map[r].interch;\n        else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n            gfp.interChRatio = abr_switch_map[r].interch;\n        // SET_OPTION(interChRatio, abr_switch_map[r].interch, -1);\n\n        return preset;\n    }\n\n    this.apply_preset = function(gfp, preset, enforce) {\n        /* translate legacy presets */\n        switch (preset) {\n            case Lame.R3MIX:\n            {\n                preset = Lame.V3;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.MEDIUM:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.MEDIUM_FAST:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.STANDARD:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.STANDARD_FAST:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.EXTREME:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.EXTREME_FAST:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.INSANE:\n            {\n                preset = 320;\n                gfp.preset = preset;\n                apply_abr_preset(gfp, preset, enforce);\n                gfp.VBR = VbrMode$20.vbr_off;\n                return preset;\n            }\n        }\n\n        gfp.preset = preset;\n        {\n            switch (preset) {\n                case Lame.V9:\n                    apply_vbr_preset(gfp, 9, enforce);\n                    return preset;\n                case Lame.V8:\n                    apply_vbr_preset(gfp, 8, enforce);\n                    return preset;\n                case Lame.V7:\n                    apply_vbr_preset(gfp, 7, enforce);\n                    return preset;\n                case Lame.V6:\n                    apply_vbr_preset(gfp, 6, enforce);\n                    return preset;\n                case Lame.V5:\n                    apply_vbr_preset(gfp, 5, enforce);\n                    return preset;\n                case Lame.V4:\n                    apply_vbr_preset(gfp, 4, enforce);\n                    return preset;\n                case Lame.V3:\n                    apply_vbr_preset(gfp, 3, enforce);\n                    return preset;\n                case Lame.V2:\n                    apply_vbr_preset(gfp, 2, enforce);\n                    return preset;\n                case Lame.V1:\n                    apply_vbr_preset(gfp, 1, enforce);\n                    return preset;\n                case Lame.V0:\n                    apply_vbr_preset(gfp, 0, enforce);\n                    return preset;\n                default:\n                    break;\n            }\n        }\n        if (8 <= preset && preset <= 320) {\n            return apply_abr_preset(gfp, preset, enforce);\n        }\n\n        /* no corresponding preset found */\n        gfp.preset = 0;\n        return preset;\n    };\n\n    // Rest from getset.c:\n\n    /**\n     * VBR quality level.<BR>\n     * 0 = highest<BR>\n     * 9 = lowest\n     */\n    function lame_set_VBR_q(gfp, VBR_q) {\n        var ret = 0;\n\n        if (0 > VBR_q) {\n            /* Unknown VBR quality level! */\n            ret = -1;\n            VBR_q = 0;\n        }\n        if (9 < VBR_q) {\n            ret = -1;\n            VBR_q = 9;\n        }\n\n        gfp.VBR_q = VBR_q;\n        gfp.VBR_q_frac = 0;\n        return ret;\n    }\n\n}\n\nvar Presets_1 = Presets$1;\n\nfunction VBRQuantize() {\n    var qupvt;\n    var tak;\n\n    this.setModules = function (_qupvt, _tk) {\n        qupvt = _qupvt;\n        tak = _tk;\n    };\n    //TODO\n\n}\n\nvar VBRQuantize_1 = VBRQuantize;\n\n//package mp3;\n\nfunction CalcNoiseResult$1() {\n    /**\n     * sum of quantization noise > masking\n     */\n    this.over_noise = 0.;\n    /**\n     * sum of all quantization noise\n     */\n    this.tot_noise = 0.;\n    /**\n     * max quantization noise\n     */\n    this.max_noise = 0.;\n    /**\n     * number of quantization noise > masking\n     */\n    this.over_count = 0;\n    /**\n     * SSD-like cost of distorted bands\n     */\n    this.over_SSD = 0;\n    this.bits = 0;\n}\n\nvar CalcNoiseResult_1 = CalcNoiseResult$1;\n\nvar new_float$22 = common.new_float;\nvar new_int$22 = common.new_int;\nfunction CalcNoiseData() {\n    this.global_gain = 0;\n    this.sfb_count1 = 0;\n    this.step = new_int$22(39);\n    this.noise = new_float$22(39);\n    this.noise_log = new_float$22(39);\n}\n\nvar CalcNoiseData_1 = CalcNoiseData;\n\n/*\n * MP3 quantization\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 1999-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2007 Robert Hegemann\n *      Copyright (c) 2001-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.     See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Quantize.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$21 = common.System;\nvar VbrMode$21 = common.VbrMode;\nvar Util$21 = common.Util;\nvar Arrays$21 = common.Arrays;\nvar new_float$21 = common.new_float;\nvar assert$21 = common.assert;\n\n\n\n\n\n\n\n\nfunction Quantize$1() {\n    var bs;\n    this.rv = null;\n    var rv;\n    this.qupvt = null;\n    var qupvt;\n\n    var vbr = new VBRQuantize_1();\n    var tk;\n\n    this.setModules = function (_bs, _rv, _qupvt, _tk) {\n        bs = _bs;\n        rv = _rv;\n        this.rv = _rv;\n        qupvt = _qupvt;\n        this.qupvt = _qupvt;\n        tk = _tk;\n        vbr.setModules(qupvt, tk);\n    };\n\n    /**\n     * convert from L/R <. Mid/Side\n     */\n    this.ms_convert = function (l3_side, gr) {\n        for (var i = 0; i < 576; ++i) {\n            var l = l3_side.tt[gr][0].xr[i];\n            var r = l3_side.tt[gr][1].xr[i];\n            l3_side.tt[gr][0].xr[i] = (l + r) * (Util$21.SQRT2 * 0.5);\n            l3_side.tt[gr][1].xr[i] = (l - r) * (Util$21.SQRT2 * 0.5);\n        }\n    };\n\n    /**\n     * mt 6/99\n     *\n     * initializes cod_info, scalefac and xrpow\n     *\n     * returns 0 if all energies in xr are zero, else 1\n     */\n    function init_xrpow_core(cod_info, xrpow, upper, sum) {\n        sum = 0;\n        for (var i = 0; i <= upper; ++i) {\n            var tmp = Math.abs(cod_info.xr[i]);\n            sum += tmp;\n            xrpow[i] = Math.sqrt(tmp * Math.sqrt(tmp));\n\n            if (xrpow[i] > cod_info.xrpow_max)\n                cod_info.xrpow_max = xrpow[i];\n        }\n        return sum;\n    }\n\n    this.init_xrpow = function (gfc, cod_info, xrpow) {\n        var sum = 0;\n        var upper = 0 | cod_info.max_nonzero_coeff;\n\n        assert$21(xrpow != null);\n        cod_info.xrpow_max = 0;\n\n        /*\n         * check if there is some energy we have to quantize and calculate xrpow\n         * matching our fresh scalefactors\n         */\n        assert$21(0 <= upper && upper <= 575);\n\n        Arrays$21.fill(xrpow, upper, 576, 0);\n\n        sum = init_xrpow_core(cod_info, xrpow, upper, sum);\n\n        /*\n         * return 1 if we have something to quantize, else 0\n         */\n        if (sum > 1E-20) {\n            var j = 0;\n            if ((gfc.substep_shaping & 2) != 0)\n                j = 1;\n\n            for (var i = 0; i < cod_info.psymax; i++)\n                gfc.pseudohalf[i] = j;\n\n            return true;\n        }\n\n        Arrays$21.fill(cod_info.l3_enc, 0, 576, 0);\n        return false;\n    };\n\n    /**\n     * Gabriel Bouvigne feb/apr 2003<BR>\n     * Analog silence detection in partitionned sfb21 or sfb12 for short blocks\n     *\n     * From top to bottom of sfb, changes to 0 coeffs which are below ath. It\n     * stops on the first coeff higher than ath.\n     */\n    function psfb21_analogsilence(gfc, cod_info) {\n        var ath = gfc.ATH;\n        var xr = cod_info.xr;\n\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n            /* NORM, START or STOP type, but not SHORT blocks */\n            var stop = false;\n            for (var gsfb = Encoder_1.PSFB21 - 1; gsfb >= 0 && !stop; gsfb--) {\n                var start = gfc.scalefac_band.psfb21[gsfb];\n                var end = gfc.scalefac_band.psfb21[gsfb + 1];\n                var ath21 = qupvt.athAdjust(ath.adjust, ath.psfb21[gsfb],\n                    ath.floor);\n\n                if (gfc.nsPsy.longfact[21] > 1e-12)\n                    ath21 *= gfc.nsPsy.longfact[21];\n\n                for (var j = end - 1; j >= start; j--) {\n                    if (Math.abs(xr[j]) < ath21)\n                        xr[j] = 0;\n                    else {\n                        stop = true;\n                        break;\n                    }\n                }\n            }\n        } else {\n            /* note: short blocks coeffs are reordered */\n            for (var block = 0; block < 3; block++) {\n                var stop = false;\n                for (var gsfb = Encoder_1.PSFB12 - 1; gsfb >= 0 && !stop; gsfb--) {\n                    var start = gfc.scalefac_band.s[12]\n                        * 3\n                        + (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                        * block\n                        + (gfc.scalefac_band.psfb12[gsfb] - gfc.scalefac_band.psfb12[0]);\n                    var end = start\n                        + (gfc.scalefac_band.psfb12[gsfb + 1] - gfc.scalefac_band.psfb12[gsfb]);\n                    var ath12 = qupvt.athAdjust(ath.adjust, ath.psfb12[gsfb],\n                        ath.floor);\n\n                    if (gfc.nsPsy.shortfact[12] > 1e-12)\n                        ath12 *= gfc.nsPsy.shortfact[12];\n\n                    for (var j = end - 1; j >= start; j--) {\n                        if (Math.abs(xr[j]) < ath12)\n                            xr[j] = 0;\n                        else {\n                            stop = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    this.init_outer_loop = function (gfc, cod_info) {\n        /*\n         * initialize fresh cod_info\n         */\n        cod_info.part2_3_length = 0;\n        cod_info.big_values = 0;\n        cod_info.count1 = 0;\n        cod_info.global_gain = 210;\n        cod_info.scalefac_compress = 0;\n        /* mixed_block_flag, block_type was set in psymodel.c */\n        cod_info.table_select[0] = 0;\n        cod_info.table_select[1] = 0;\n        cod_info.table_select[2] = 0;\n        cod_info.subblock_gain[0] = 0;\n        cod_info.subblock_gain[1] = 0;\n        cod_info.subblock_gain[2] = 0;\n        cod_info.subblock_gain[3] = 0;\n        /* this one is always 0 */\n        cod_info.region0_count = 0;\n        cod_info.region1_count = 0;\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 0;\n        cod_info.count1table_select = 0;\n        cod_info.part2_length = 0;\n        cod_info.sfb_lmax = Encoder_1.SBPSY_l;\n        cod_info.sfb_smin = Encoder_1.SBPSY_s;\n        cod_info.psy_lmax = gfc.sfb21_extra ? Encoder_1.SBMAX_l : Encoder_1.SBPSY_l;\n        cod_info.psymax = cod_info.psy_lmax;\n        cod_info.sfbmax = cod_info.sfb_lmax;\n        cod_info.sfbdivide = 11;\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n            cod_info.width[sfb] = gfc.scalefac_band.l[sfb + 1]\n                - gfc.scalefac_band.l[sfb];\n            /* which is always 0. */\n            cod_info.window[sfb] = 3;\n        }\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            var ixwork = new_float$21(576);\n\n            cod_info.sfb_smin = 0;\n            cod_info.sfb_lmax = 0;\n            if (cod_info.mixed_block_flag != 0) {\n                /*\n                 * MPEG-1: sfbs 0-7 long block, 3-12 short blocks MPEG-2(.5):\n                 * sfbs 0-5 long block, 3-12 short blocks\n                 */\n                cod_info.sfb_smin = 3;\n                cod_info.sfb_lmax = gfc.mode_gr * 2 + 4;\n            }\n            cod_info.psymax = cod_info.sfb_lmax\n                + 3\n                * ((gfc.sfb21_extra ? Encoder_1.SBMAX_s : Encoder_1.SBPSY_s) - cod_info.sfb_smin);\n            cod_info.sfbmax = cod_info.sfb_lmax + 3\n                * (Encoder_1.SBPSY_s - cod_info.sfb_smin);\n            cod_info.sfbdivide = cod_info.sfbmax - 18;\n            cod_info.psy_lmax = cod_info.sfb_lmax;\n            /* re-order the short blocks, for more efficient encoding below */\n            /* By Takehiro TOMINAGA */\n            /*\n             * Within each scalefactor band, data is given for successive time\n             * windows, beginning with window 0 and ending with window 2. Within\n             * each window, the quantized values are then arranged in order of\n             * increasing frequency...\n             */\n            var ix = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            System$21.arraycopy(cod_info.xr, 0, ixwork, 0, 576);\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                for (var window = 0; window < 3; window++) {\n                    for (var l = start; l < end; l++) {\n                        cod_info.xr[ix++] = ixwork[3 * l + window];\n                    }\n                }\n            }\n\n            var j = cod_info.sfb_lmax;\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                cod_info.width[j] = cod_info.width[j + 1] = cod_info.width[j + 2] = gfc.scalefac_band.s[sfb + 1]\n                    - gfc.scalefac_band.s[sfb];\n                cod_info.window[j] = 0;\n                cod_info.window[j + 1] = 1;\n                cod_info.window[j + 2] = 2;\n                j += 3;\n            }\n        }\n\n        cod_info.count1bits = 0;\n        cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[0][0];\n        cod_info.slen[0] = 0;\n        cod_info.slen[1] = 0;\n        cod_info.slen[2] = 0;\n        cod_info.slen[3] = 0;\n\n        cod_info.max_nonzero_coeff = 575;\n\n        /*\n         * fresh scalefactors are all zero\n         */\n        Arrays$21.fill(cod_info.scalefac, 0);\n\n        psfb21_analogsilence(gfc, cod_info);\n    };\n\n    function BinSearchDirection(ordinal) {\n        this.ordinal = ordinal;\n    }\n\n    BinSearchDirection.BINSEARCH_NONE = new BinSearchDirection(0);\n    BinSearchDirection.BINSEARCH_UP = new BinSearchDirection(1);\n    BinSearchDirection.BINSEARCH_DOWN = new BinSearchDirection(2);\n\n    /**\n     * author/date??\n     *\n     * binary step size search used by outer_loop to get a quantizer step size\n     * to start with\n     */\n    function bin_search_StepSize(gfc, cod_info, desired_rate, ch, xrpow) {\n        var nBits;\n        var CurrentStep = gfc.CurrentStep[ch];\n        var flagGoneOver = false;\n        var start = gfc.OldValue[ch];\n        var Direction = BinSearchDirection.BINSEARCH_NONE;\n        cod_info.global_gain = start;\n        desired_rate -= cod_info.part2_length;\n\n        assert$21(CurrentStep != 0);\n        for (; ;) {\n            var step;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n\n            if (CurrentStep == 1 || nBits == desired_rate)\n                break;\n            /* nothing to adjust anymore */\n\n            if (nBits > desired_rate) {\n                /* increase Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_DOWN)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_UP;\n                step = CurrentStep;\n            } else {\n                /* decrease Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_UP)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_DOWN;\n                step = -CurrentStep;\n            }\n            cod_info.global_gain += step;\n            if (cod_info.global_gain < 0) {\n                cod_info.global_gain = 0;\n                flagGoneOver = true;\n            }\n            if (cod_info.global_gain > 255) {\n                cod_info.global_gain = 255;\n                flagGoneOver = true;\n            }\n        }\n\n        assert$21(cod_info.global_gain >= 0);\n        assert$21(cod_info.global_gain < 256);\n\n        while (nBits > desired_rate && cod_info.global_gain < 255) {\n            cod_info.global_gain++;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n        }\n        gfc.CurrentStep[ch] = (start - cod_info.global_gain >= 4) ? 4 : 2;\n        gfc.OldValue[ch] = cod_info.global_gain;\n        cod_info.part2_3_length = nBits;\n        return nBits;\n    }\n\n    this.trancate_smallspectrums = function (gfc, gi, l3_xmin, work) {\n        var distort = new_float$21(L3Side_1.SFBMAX);\n\n        if ((0 == (gfc.substep_shaping & 4) && gi.block_type == Encoder_1.SHORT_TYPE)\n            || (gfc.substep_shaping & 0x80) != 0)\n            return;\n        qupvt.calc_noise(gi, l3_xmin, distort, new CalcNoiseResult_1(), null);\n        for (var j = 0; j < 576; j++) {\n            var xr = 0.0;\n            if (gi.l3_enc[j] != 0)\n                xr = Math.abs(gi.xr[j]);\n            work[j] = xr;\n        }\n\n        var j = 0;\n        var sfb = 8;\n        if (gi.block_type == Encoder_1.SHORT_TYPE)\n            sfb = 6;\n        do {\n            var allowedNoise, trancateThreshold;\n            var nsame, start;\n\n            var width = gi.width[sfb];\n            j += width;\n            if (distort[sfb] >= 1.0)\n                continue;\n\n            Arrays$21.sort(work, j - width, width);\n            if (BitStream.EQ(work[j - 1], 0.0))\n                continue;\n            /* all zero sfb */\n\n            allowedNoise = (1.0 - distort[sfb]) * l3_xmin[sfb];\n            trancateThreshold = 0.0;\n            start = 0;\n            do {\n                var noise;\n                for (nsame = 1; start + nsame < width; nsame++)\n                    if (BitStream.NEQ(work[start + j - width], work[start + j\n                        + nsame - width]))\n                        break;\n\n                noise = work[start + j - width] * work[start + j - width]\n                    * nsame;\n                if (allowedNoise < noise) {\n                    if (start != 0)\n                        trancateThreshold = work[start + j - width - 1];\n                    break;\n                }\n                allowedNoise -= noise;\n                start += nsame;\n            } while (start < width);\n            if (BitStream.EQ(trancateThreshold, 0.0))\n                continue;\n\n            do {\n                if (Math.abs(gi.xr[j - width]) <= trancateThreshold)\n                    gi.l3_enc[j - width] = 0;\n            } while (--width > 0);\n        } while (++sfb < gi.psymax);\n\n        gi.part2_3_length = tk.noquant_count_bits(gfc, gi, null);\n    };\n\n    /**\n     * author/date??\n     *\n     * Function: Returns zero if there is a scalefac which has not been\n     * amplified. Otherwise it returns one.\n     */\n    function loop_break(cod_info) {\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++)\n            if (cod_info.scalefac[sfb]\n                + cod_info.subblock_gain[cod_info.window[sfb]] == 0)\n                return false;\n\n        return true;\n    }\n\n    /* mt 5/99: Function: Improved calc_noise for a single channel */\n\n    function penalties(noise) {\n        return Util$21.FAST_LOG10((0.368 + 0.632 * noise * noise * noise));\n    }\n\n    /**\n     * author/date??\n     *\n     * several different codes to decide which quantization is better\n     */\n    function get_klemm_noise(distort, gi) {\n        var klemm_noise = 1E-37;\n        for (var sfb = 0; sfb < gi.psymax; sfb++)\n            klemm_noise += penalties(distort[sfb]);\n\n        return Math.max(1e-20, klemm_noise);\n    }\n\n    function quant_compare(quant_comp, best, calc, gi, distort) {\n        /**\n         * noise is given in decibels (dB) relative to masking thesholds.<BR>\n         *\n         * over_noise: ??? (the previous comment is fully wrong)<BR>\n         * tot_noise: ??? (the previous comment is fully wrong)<BR>\n         * max_noise: max quantization noise\n         */\n        var better;\n\n        switch (quant_comp) {\n            default:\n            case 9:\n            {\n                if (best.over_count > 0) {\n                    /* there are distorted sfb */\n                    better = calc.over_SSD <= best.over_SSD;\n                    if (calc.over_SSD == best.over_SSD)\n                        better = calc.bits < best.bits;\n                } else {\n                    /* no distorted sfb */\n                    better = ((calc.max_noise < 0) && ((calc.max_noise * 10 + calc.bits) <= (best.max_noise * 10 + best.bits)));\n                }\n                break;\n            }\n\n            case 0:\n                better = calc.over_count < best.over_count\n                    || (calc.over_count == best.over_count && calc.over_noise < best.over_noise)\n                    || (calc.over_count == best.over_count\n                    && BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n\n            case 8:\n                calc.max_noise = get_klemm_noise(distort, gi);\n            //$FALL-THROUGH$\n            case 1:\n                better = calc.max_noise < best.max_noise;\n                break;\n            case 2:\n                better = calc.tot_noise < best.tot_noise;\n                break;\n            case 3:\n                better = (calc.tot_noise < best.tot_noise)\n                    && (calc.max_noise < best.max_noise);\n                break;\n            case 4:\n                better = (calc.max_noise <= 0.0 && best.max_noise > 0.2)\n                    || (calc.max_noise <= 0.0 && best.max_noise < 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise)\n                    || (calc.max_noise <= 0.0 && best.max_noise > 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.05\n                    && best.max_noise > calc.max_noise - 0.1 && calc.tot_noise\n                    + calc.over_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.1\n                    && best.max_noise > calc.max_noise - 0.15 && calc.tot_noise\n                    + calc.over_noise + calc.over_noise < best.tot_noise\n                    + best.over_noise + best.over_noise);\n                break;\n            case 5:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n            case 6:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && (calc.max_noise < best.max_noise || (BitStream\n                        .EQ(calc.max_noise, best.max_noise) && calc.tot_noise <= best.tot_noise)));\n                break;\n            case 7:\n                better = calc.over_count < best.over_count\n                    || calc.over_noise < best.over_noise;\n                break;\n        }\n\n        if (best.over_count == 0) {\n            /*\n             * If no distorted bands, only use this quantization if it is\n             * better, and if it uses less bits. Unfortunately, part2_3_length\n             * is sometimes a poor estimator of the final size at low bitrates.\n             */\n            better = better && calc.bits < best.bits;\n        }\n\n        return better;\n    }\n\n    /**\n     * author/date??\n     *\n     * <PRE>\n     *  Amplify the scalefactor bands that violate the masking threshold.\n     *  See ISO 11172-3 Section C.1.5.4.3.5\n     *\n     *  distort[] = noise/masking\n     *  distort[] > 1   ==> noise is not masked\n     *  distort[] < 1   ==> noise is masked\n     *  max_dist = maximum value of distort[]\n     *\n     *  Three algorithms:\n     *  noise_shaping_amp\n     *        0             Amplify all bands with distort[]>1.\n     *\n     *        1             Amplify all bands with distort[] >= max_dist^(.5);\n     *                     ( 50% in the db scale)\n     *\n     *        2             Amplify first band with distort[] >= max_dist;\n     *\n     *\n     *  For algorithms 0 and 1, if max_dist < 1, then amplify all bands\n     *  with distort[] >= .95*max_dist.  This is to make sure we always\n     *  amplify at least one band.\n     * </PRE>\n     */\n    function amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n        var ifqstep34;\n\n        if (cod_info.scalefac_scale == 0) {\n            ifqstep34 = 1.29683955465100964055;\n            /* 2**(.75*.5) */\n        } else {\n            ifqstep34 = 1.68179283050742922612;\n            /* 2**(.75*1) */\n        }\n\n        /* compute maximum value of distort[] */\n        var trigger = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            if (trigger < distort[sfb])\n                trigger = distort[sfb];\n        }\n\n        var noise_shaping_amp = gfc.noise_shaping_amp;\n        if (noise_shaping_amp == 3) {\n            if (bRefine)\n                noise_shaping_amp = 2;\n            else\n                noise_shaping_amp = 1;\n        }\n        switch (noise_shaping_amp) {\n            case 2:\n                /* amplify exactly 1 band */\n                break;\n\n            case 1:\n                /* amplify bands within 50% of max (on db scale) */\n                if (trigger > 1.0)\n                    trigger = Math.pow(trigger, .5);\n                else\n                    trigger *= .95;\n                break;\n\n            case 0:\n            default:\n                /* ISO algorithm. amplify all bands with distort>1 */\n                if (trigger > 1.0)\n                    trigger = 1.0;\n                else\n                    trigger *= .95;\n                break;\n        }\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var l;\n            j += width;\n            if (distort[sfb] < trigger)\n                continue;\n\n            if ((gfc.substep_shaping & 2) != 0) {\n                gfc.pseudohalf[sfb] = (0 == gfc.pseudohalf[sfb]) ? 1 : 0;\n                if (0 == gfc.pseudohalf[sfb] && gfc.noise_shaping_amp == 2)\n                    return;\n            }\n            cod_info.scalefac[sfb]++;\n            for (l = -width; l < 0; l++) {\n                xrpow[j + l] *= ifqstep34;\n                if (xrpow[j + l] > cod_info.xrpow_max)\n                    cod_info.xrpow_max = xrpow[j + l];\n            }\n\n            if (gfc.noise_shaping_amp == 2)\n                return;\n        }\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * turns on scalefac scale and adjusts scalefactors\n     */\n    function inc_scalefac_scale(cod_info, xrpow) {\n        var ifqstep34 = 1.29683955465100964055;\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var s = cod_info.scalefac[sfb];\n            if (cod_info.preflag != 0)\n                s += qupvt.pretab[sfb];\n            j += width;\n            if ((s & 1) != 0) {\n                s++;\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= ifqstep34;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n            cod_info.scalefac[sfb] = s >> 1;\n        }\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 1;\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * increases the subblock gain and adjusts scalefactors\n     */\n    function inc_subblock_gain(gfc, cod_info, xrpow) {\n        var sfb;\n        var scalefac = cod_info.scalefac;\n\n        /* subbloc_gain can't do anything in the long block region */\n        for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n            if (scalefac[sfb] >= 16)\n                return true;\n        }\n\n        for (var window = 0; window < 3; window++) {\n            var s1 = 0;\n            var s2 = 0;\n\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbdivide; sfb += 3) {\n                if (s1 < scalefac[sfb])\n                    s1 = scalefac[sfb];\n            }\n            for (; sfb < cod_info.sfbmax; sfb += 3) {\n                if (s2 < scalefac[sfb])\n                    s2 = scalefac[sfb];\n            }\n\n            if (s1 < 16 && s2 < 8)\n                continue;\n\n            if (cod_info.subblock_gain[window] >= 7)\n                return true;\n\n            /*\n             * even though there is no scalefactor for sfb12 subblock gain\n             * affects upper frequencies too, that's why we have to go up to\n             * SBMAX_s\n             */\n            cod_info.subblock_gain[window]++;\n            var j = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbmax; sfb += 3) {\n                var amp;\n                var width = cod_info.width[sfb];\n                var s = scalefac[sfb];\n                assert$21(s >= 0);\n                s = s - (4 >> cod_info.scalefac_scale);\n                if (s >= 0) {\n                    scalefac[sfb] = s;\n                    j += width * 3;\n                    continue;\n                }\n\n                scalefac[sfb] = 0;\n                {\n                    var gain = 210 + (s << (cod_info.scalefac_scale + 1));\n                    amp = qupvt.IPOW20(gain);\n                }\n                j += width * (window + 1);\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n                j += width * (3 - window - 1);\n            }\n\n            {\n                var amp = qupvt.IPOW20(202);\n                j += cod_info.width[sfb] * (window + 1);\n                for (var l = -cod_info.width[sfb]; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * <PRE>\n     *  Takehiro Tominaga /date??\n     *  Robert Hegemann 2000-09-06: made a function of it\n     *\n     *  amplifies scalefactor bands,\n     *   - if all are already amplified returns 0\n     *   - if some bands are amplified too much:\n     *      * try to increase scalefac_scale\n     *      * if already scalefac_scale was set\n     *          try on short blocks to increase subblock gain\n     * </PRE>\n     */\n    function balance_noise(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n\n        amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine);\n\n        /*\n         * check to make sure we have not amplified too much loop_break returns\n         * 0 if there is an unamplified scalefac scale_bitcount returns 0 if no\n         * scalefactors are too large\n         */\n\n        var status = loop_break(cod_info);\n\n        if (status)\n            return false;\n        /* all bands amplified */\n\n        /*\n         * not all scalefactors have been amplified. so these scalefacs are\n         * possibly valid. encode them:\n         */\n        if (gfc.mode_gr == 2)\n            status = tk.scale_bitcount(cod_info);\n        else\n            status = tk.scale_bitcount_lsf(gfc, cod_info);\n\n        if (!status)\n            return true;\n        /* amplified some bands not exceeding limits */\n\n        /*\n         * some scalefactors are too large. lets try setting scalefac_scale=1\n         */\n        if (gfc.noise_shaping > 1) {\n            Arrays$21.fill(gfc.pseudohalf, 0);\n            if (0 == cod_info.scalefac_scale) {\n                inc_scalefac_scale(cod_info, xrpow);\n                status = false;\n            } else {\n                if (cod_info.block_type == Encoder_1.SHORT_TYPE\n                    && gfc.subblock_gain > 0) {\n                    status = (inc_subblock_gain(gfc, cod_info, xrpow) || loop_break(cod_info));\n                }\n            }\n        }\n\n        if (!status) {\n            if (gfc.mode_gr == 2)\n                status = tk.scale_bitcount(cod_info);\n            else\n                status = tk.scale_bitcount_lsf(gfc, cod_info);\n        }\n        return !status;\n    }\n\n    /**\n     * <PRE>\n     *  Function: The outer iteration loop controls the masking conditions\n     *  of all scalefactorbands. It computes the best scalefac and\n     *  global gain. This module calls the inner iteration loop\n     *\n     *  mt 5/99 completely rewritten to allow for bit reservoir control,\n     *  mid/side channels with L/R or mid/side masking thresholds,\n     *  and chooses best quantization instead of last quantization when\n     *  no distortion free quantization can be found.\n     *\n     *  added VBR support mt 5/99\n     *\n     *  some code shuffle rh 9/00\n     * </PRE>\n     *\n     * @param l3_xmin\n     *            allowed distortion\n     * @param xrpow\n     *            coloured magnitudes of spectral\n     * @param targ_bits\n     *            maximum allowed bits\n     */\n    this.outer_loop = function (gfp, cod_info, l3_xmin, xrpow, ch, targ_bits) {\n        var gfc = gfp.internal_flags;\n        var cod_info_w = new GrInfo_1();\n        var save_xrpow = new_float$21(576);\n        var distort = new_float$21(L3Side_1.SFBMAX);\n        var best_noise_info = new CalcNoiseResult_1();\n        var better;\n        var prev_noise = new CalcNoiseData_1();\n        var best_part2_3_length = 9999999;\n        var bEndOfSearch = false;\n        var bRefine = false;\n        var best_ggain_pass1 = 0;\n\n        bin_search_StepSize(gfc, cod_info, targ_bits, ch, xrpow);\n\n        if (0 == gfc.noise_shaping)\n        /* fast mode, no noise shaping, we are ready */\n            return 100;\n        /* default noise_info.over_count */\n\n        /* compute the distortion in this quantization */\n        /* coefficients and thresholds both l/r (or both mid/side) */\n        qupvt.calc_noise(cod_info, l3_xmin, distort, best_noise_info,\n            prev_noise);\n        best_noise_info.bits = cod_info.part2_3_length;\n\n        cod_info_w.assign(cod_info);\n        var age = 0;\n        System$21.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n\n        while (!bEndOfSearch) {\n            /* BEGIN MAIN LOOP */\n            do {\n                var noise_info = new CalcNoiseResult_1();\n                var search_limit;\n                var maxggain = 255;\n\n                /*\n                 * When quantization with no distorted bands is found, allow up\n                 * to X new unsuccesful tries in serial. This gives us more\n                 * possibilities for different quant_compare modes. Much more\n                 * than 3 makes not a big difference, it is only slower.\n                 */\n\n                if ((gfc.substep_shaping & 2) != 0) {\n                    search_limit = 20;\n                } else {\n                    search_limit = 3;\n                }\n\n                /*\n                 * Check if the last scalefactor band is distorted. in VBR mode\n                 * we can't get rid of the distortion, so quit now and VBR mode\n                 * will try again with more bits. (makes a 10% speed increase,\n                 * the files I tested were binary identical, 2000/05/20 Robert\n                 * Hegemann) distort[] > 1 means noise > allowed noise\n                 */\n                if (gfc.sfb21_extra) {\n                    if (distort[cod_info_w.sfbmax] > 1.0)\n                        break;\n                    if (cod_info_w.block_type == Encoder_1.SHORT_TYPE\n                        && (distort[cod_info_w.sfbmax + 1] > 1.0 || distort[cod_info_w.sfbmax + 2] > 1.0))\n                        break;\n                }\n\n                /* try a new scalefactor conbination on cod_info_w */\n                if (!balance_noise(gfp, cod_info_w, distort, xrpow, bRefine))\n                    break;\n                if (cod_info_w.scalefac_scale != 0)\n                    maxggain = 254;\n\n                /*\n                 * inner_loop starts with the initial quantization step computed\n                 * above and slowly increases until the bits < huff_bits. Thus\n                 * it is important not to start with too large of an inital\n                 * quantization step. Too small is ok, but inner_loop will take\n                 * longer\n                 */\n                var huff_bits = targ_bits - cod_info_w.part2_length;\n                if (huff_bits <= 0)\n                    break;\n\n                /*\n                 * increase quantizer stepsize until needed bits are below\n                 * maximum\n                 */\n                while ((cod_info_w.part2_3_length = tk.count_bits(gfc, xrpow,\n                    cod_info_w, prev_noise)) > huff_bits\n                && cod_info_w.global_gain <= maxggain)\n                    cod_info_w.global_gain++;\n\n                if (cod_info_w.global_gain > maxggain)\n                    break;\n\n                if (best_noise_info.over_count == 0) {\n\n                    while ((cod_info_w.part2_3_length = tk.count_bits(gfc,\n                        xrpow, cod_info_w, prev_noise)) > best_part2_3_length\n                    && cod_info_w.global_gain <= maxggain)\n                        cod_info_w.global_gain++;\n\n                    if (cod_info_w.global_gain > maxggain)\n                        break;\n                }\n\n                /* compute the distortion in this quantization */\n                qupvt.calc_noise(cod_info_w, l3_xmin, distort, noise_info,\n                    prev_noise);\n                noise_info.bits = cod_info_w.part2_3_length;\n\n                /*\n                 * check if this quantization is better than our saved\n                 * quantization\n                 */\n                if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    better = gfp.quant_comp;\n                } else\n                    better = gfp.quant_comp_short;\n\n                better = quant_compare(better, best_noise_info, noise_info,\n                    cod_info_w, distort) ? 1 : 0;\n\n                /* save data so we can restore this quantization later */\n                if (better != 0) {\n                    best_part2_3_length = cod_info.part2_3_length;\n                    best_noise_info = noise_info;\n                    cod_info.assign(cod_info_w);\n                    age = 0;\n                    /* save data so we can restore this quantization later */\n                    /* store for later reuse */\n                    System$21.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n                } else {\n                    /* early stop? */\n                    if (gfc.full_outer_loop == 0) {\n                        if (++age > search_limit\n                            && best_noise_info.over_count == 0)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3) && bRefine && age > 30)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3)\n                            && bRefine\n                            && (cod_info_w.global_gain - best_ggain_pass1) > 15)\n                            break;\n                    }\n                }\n            } while ((cod_info_w.global_gain + cod_info_w.scalefac_scale) < 255);\n\n            if (gfc.noise_shaping_amp == 3) {\n                if (!bRefine) {\n                    /* refine search */\n                    cod_info_w.assign(cod_info);\n                    System$21.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n                    age = 0;\n                    best_ggain_pass1 = cod_info_w.global_gain;\n\n                    bRefine = true;\n                } else {\n                    /* search already refined, stop */\n                    bEndOfSearch = true;\n                }\n\n            } else {\n                bEndOfSearch = true;\n            }\n        }\n\n        assert$21((cod_info.global_gain + cod_info.scalefac_scale) <= 255);\n        /*\n         * finish up\n         */\n        if (gfp.VBR == VbrMode$21.vbr_rh || gfp.VBR == VbrMode$21.vbr_mtrh)\n        /* restore for reuse on next try */\n            System$21.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n        /*\n         * do the 'substep shaping'\n         */\n        else if ((gfc.substep_shaping & 1) != 0)\n            trancate_smallspectrums(gfc, cod_info, l3_xmin, xrpow);\n\n        return best_noise_info.over_count;\n    };\n\n    /**\n     * Robert Hegemann 2000-09-06\n     *\n     * update reservoir status after FINAL quantization/bitrate\n     */\n    this.iteration_finish_one = function (gfc, gr, ch) {\n        var l3_side = gfc.l3_side;\n        var cod_info = l3_side.tt[gr][ch];\n\n        /*\n         * try some better scalefac storage\n         */\n        tk.best_scalefac_store(gfc, gr, ch, l3_side);\n\n        /*\n         * best huffman_divide may save some bits too\n         */\n        if (gfc.use_best_huffman == 1)\n            tk.best_huffman_divide(gfc, cod_info);\n\n        /*\n         * update reservoir status after FINAL quantization/bitrate\n         */\n        rv.ResvAdjust(gfc, cod_info);\n    };\n\n    /**\n     *\n     * 2000-09-04 Robert Hegemann\n     *\n     * @param l3_xmin\n     *            allowed distortion of the scalefactor\n     * @param xrpow\n     *            coloured magnitudes of spectral values\n     */\n    this.VBR_encode_granule = function (gfp, cod_info, l3_xmin, xrpow, ch, min_bits, max_bits) {\n        var gfc = gfp.internal_flags;\n        var bst_cod_info = new GrInfo_1();\n        var bst_xrpow = new_float$21(576);\n        var Max_bits = max_bits;\n        var real_bits = max_bits + 1;\n        var this_bits = (max_bits + min_bits) / 2;\n        var dbits, over, found = 0;\n        var sfb21_extra = gfc.sfb21_extra;\n\n        assert$21(Max_bits <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        Arrays$21.fill(bst_cod_info.l3_enc, 0);\n\n        /*\n         * search within round about 40 bits of optimal\n         */\n        do {\n            assert$21(this_bits >= min_bits);\n            assert$21(this_bits <= max_bits);\n            assert$21(min_bits <= max_bits);\n\n            if (this_bits > Max_bits - 42)\n                gfc.sfb21_extra = false;\n            else\n                gfc.sfb21_extra = sfb21_extra;\n\n            over = outer_loop(gfp, cod_info, l3_xmin, xrpow, ch, this_bits);\n\n            /*\n             * is quantization as good as we are looking for ? in this case: is\n             * no scalefactor band distorted?\n             */\n            if (over <= 0) {\n                found = 1;\n                /*\n                 * now we know it can be done with \"real_bits\" and maybe we can\n                 * skip some iterations\n                 */\n                real_bits = cod_info.part2_3_length;\n\n                /*\n                 * store best quantization so far\n                 */\n                bst_cod_info.assign(cod_info);\n                System$21.arraycopy(xrpow, 0, bst_xrpow, 0, 576);\n\n                /*\n                 * try with fewer bits\n                 */\n                max_bits = real_bits - 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n            } else {\n                /*\n                 * try with more bits\n                 */\n                min_bits = this_bits + 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n\n                if (found != 0) {\n                    found = 2;\n                    /*\n                     * start again with best quantization so far\n                     */\n                    cod_info.assign(bst_cod_info);\n                    System$21.arraycopy(bst_xrpow, 0, xrpow, 0, 576);\n                }\n            }\n        } while (dbits > 12);\n\n        gfc.sfb21_extra = sfb21_extra;\n\n        /*\n         * found=0 => nothing found, use last one found=1 => we just found the\n         * best and left the loop found=2 => we restored a good one and have now\n         * l3_enc to restore too\n         */\n        if (found == 2) {\n            System$21.arraycopy(bst_cod_info.l3_enc, 0, cod_info.l3_enc, 0, 576);\n        }\n        assert$21(cod_info.part2_3_length <= Max_bits);\n    };\n\n    /**\n     * Robert Hegemann 2000-09-05\n     *\n     * calculates * how many bits are available for analog silent granules * how\n     * many bits to use for the lowest allowed bitrate * how many bits each\n     * bitrate would provide\n     */\n    this.get_framebits = function (gfp, frameBits) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * always use at least this many bits per granule per channel unless we\n         * detect analog silence, see below\n         */\n        gfc.bitrate_index = gfc.VBR_min_bitrate;\n        var bitsPerFrame = bs.getframebits(gfp);\n\n        /*\n         * bits for analog silence\n         */\n        gfc.bitrate_index = 1;\n        bitsPerFrame = bs.getframebits(gfp);\n\n        for (var i = 1; i <= gfc.VBR_max_bitrate; i++) {\n            gfc.bitrate_index = i;\n            var mb = new MeanBits(bitsPerFrame);\n            frameBits[i] = rv.ResvFrameBegin(gfp, mb);\n            bitsPerFrame = mb.bits;\n        }\n    };\n\n    /* RH: this one needs to be overhauled sometime */\n\n    /**\n     * <PRE>\n     *  2000-09-04 Robert Hegemann\n     *\n     *  * converts LR to MS coding when necessary\n     *  * calculates allowed/adjusted quantization noise amounts\n     *  * detects analog silent frames\n     *\n     *  some remarks:\n     *  - lower masking depending on Quality setting\n     *  - quality control together with adjusted ATH MDCT scaling\n     *    on lower quality setting allocate more noise from\n     *    ATH masking, and on higher quality setting allocate\n     *    less noise from ATH masking.\n     *  - experiments show that going more than 2dB over GPSYCHO's\n     *    limits ends up in very annoying artefacts\n     * </PRE>\n     */\n    this.VBR_old_prepare = function (gfp, pe, ms_ener_ratio, ratio, l3_xmin, frameBits, min_bits,\n                                     max_bits, bands) {\n        var gfc = gfp.internal_flags;\n\n        var masking_lower_db, adjust = 0.0;\n        var analog_silence = 1;\n        var bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var avg = rv.ResvFrameBegin(gfp, new MeanBits(0)) / gfc.mode_gr;\n\n        get_framebits(gfp, frameBits);\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            var mxb = qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n                qupvt.reduce_side(max_bits[gr], ms_ener_ratio[gr], avg, mxb);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    adjust = 1.28 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.05;\n                    masking_lower_db = gfc.PSY.mask_adjust - adjust;\n                } else {\n                    adjust = 2.56 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.14;\n                    masking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n                }\n                gfc.masking_lower = Math.pow(10.0,\n                    masking_lower_db * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                bands[gr][ch] = qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                    l3_xmin[gr][ch]);\n                if (bands[gr][ch] != 0)\n                    analog_silence = 0;\n\n                min_bits[gr][ch] = 126;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > frameBits[gfc.VBR_max_bitrate]) {\n                    max_bits[gr][ch] *= frameBits[gfc.VBR_max_bitrate];\n                    max_bits[gr][ch] /= bits;\n                }\n                if (min_bits[gr][ch] > max_bits[gr][ch])\n                    min_bits[gr][ch] = max_bits[gr][ch];\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    this.bitpressure_strategy = function (gfc, l3_xmin, min_bits, max_bits) {\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = gfc.l3_side.tt[gr][ch];\n                var pxmin = l3_xmin[gr][ch];\n                var pxminPos = 0;\n                for (var sfb = 0; sfb < gi.psy_lmax; sfb++)\n                    pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                        / Encoder_1.SBMAX_l / Encoder_1.SBMAX_l;\n\n                if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                    for (var sfb = gi.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                    }\n                }\n                max_bits[gr][ch] = 0 | Math.max(min_bits[gr][ch],\n                        0.9 * max_bits[gr][ch]);\n            }\n        }\n    };\n\n    this.VBR_new_prepare = function (gfp, pe, ratio, l3_xmin, frameBits, max_bits) {\n        var gfc = gfp.internal_flags;\n\n        var analog_silence = 1;\n        var avg = 0, bits = 0;\n        var maximum_framebits;\n\n        if (!gfp.free_format) {\n            gfc.bitrate_index = gfc.VBR_max_bitrate;\n\n            var mb = new MeanBits(avg);\n            rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n\n            get_framebits(gfp, frameBits);\n            maximum_framebits = frameBits[gfc.VBR_max_bitrate];\n        } else {\n            gfc.bitrate_index = 0;\n            var mb = new MeanBits(avg);\n            maximum_framebits = rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n            frameBits[0] = maximum_framebits;\n        }\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                gfc.masking_lower = Math.pow(10.0,\n                    gfc.PSY.mask_adjust * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                if (0 != qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                        l3_xmin[gr][ch]))\n                    analog_silence = 0;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > maximum_framebits) {\n                    max_bits[gr][ch] *= maximum_framebits;\n                    max_bits[gr][ch] /= bits;\n                }\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    /**\n     * calculates target bits for ABR encoding\n     *\n     * mt 2000/05/31\n     */\n    this.calc_target_bits = function (gfp, pe, ms_ener_ratio, targ_bits, analog_silence_bits, max_frame_bits) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var res_factor;\n        var gr, ch, totbits, mean_bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var mb = new MeanBits(mean_bits);\n        max_frame_bits[0] = rv.ResvFrameBegin(gfp, mb);\n        mean_bits = mb.bits;\n\n        gfc.bitrate_index = 1;\n        mean_bits = bs.getframebits(gfp) - gfc.sideinfo_len * 8;\n        analog_silence_bits[0] = mean_bits / (gfc.mode_gr * gfc.channels_out);\n\n        mean_bits = gfp.VBR_mean_bitrate_kbps * gfp.framesize * 1000;\n        if ((gfc.substep_shaping & 1) != 0)\n            mean_bits *= 1.09;\n        mean_bits /= gfp.out_samplerate;\n        mean_bits -= gfc.sideinfo_len * 8;\n        mean_bits /= (gfc.mode_gr * gfc.channels_out);\n\n        /**\n         * <PRE>\n         *           res_factor is the percentage of the target bitrate that should\n         *           be used on average.  the remaining bits are added to the\n         *           bitreservoir and used for difficult to encode frames.\n         *\n         *           Since we are tracking the average bitrate, we should adjust\n         *           res_factor \"on the fly\", increasing it if the average bitrate\n         *           is greater than the requested bitrate, and decreasing it\n         *           otherwise.  Reasonable ranges are from .9 to 1.0\n         *\n         *           Until we get the above suggestion working, we use the following\n         *           tuning:\n         *           compression ratio    res_factor\n         *           5.5  (256kbps)         1.0      no need for bitreservoir\n         *           11   (128kbps)         .93      7% held for reservoir\n         *\n         *           with linear interpolation for other values.\n         * </PRE>\n         */\n        res_factor = .93 + .07 * (11.0 - gfp.compression_ratio)\n            / (11.0 - 5.5);\n        if (res_factor < .90)\n            res_factor = .90;\n        if (res_factor > 1.00)\n            res_factor = 1.00;\n\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                if (pe[gr][ch] > 700) {\n                    var add_bits = (int)((pe[gr][ch] - 700) / 1.4);\n\n                    var cod_info = l3_side.tt[gr][ch];\n                    targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                    /* short blocks use a little extra, no matter what the pe */\n                    if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n                        if (add_bits < mean_bits / 2)\n                            add_bits = mean_bits / 2;\n                    }\n                    /* at most increase bits by 1.5*average */\n                    if (add_bits > mean_bits * 3 / 2)\n                        add_bits = mean_bits * 3 / 2;\n                    else if (add_bits < 0)\n                        add_bits = 0;\n\n                    targ_bits[gr][ch] += add_bits;\n                }\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) {\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                }\n                sum += targ_bits[gr][ch];\n            }\n            /* for ch */\n            if (sum > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n                for (ch = 0; ch < gfc.channels_out; ++ch) {\n                    targ_bits[gr][ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                    targ_bits[gr][ch] /= sum;\n                }\n            }\n        }\n        /* for gr */\n\n        if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR)\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                qupvt.reduce_side(targ_bits[gr], ms_ener_ratio[gr], mean_bits\n                    * gfc.channels_out,\n                    LameInternalFlags.MAX_BITS_PER_GRANULE);\n            }\n\n        /*\n         * sum target bits\n         */\n        totbits = 0;\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                totbits += targ_bits[gr][ch];\n            }\n        }\n\n        /*\n         * repartion target bits if needed\n         */\n        if (totbits > max_frame_bits[0]) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    targ_bits[gr][ch] *= max_frame_bits[0];\n                    targ_bits[gr][ch] /= totbits;\n                }\n            }\n        }\n    };\n\n}\n\nvar Quantize_1 = Quantize$1;\n\n/*\n *      bit reservoir source file\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Reservoir.java,v 1.9 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n/**\n * ResvFrameBegin:<BR>\n * Called (repeatedly) at the beginning of a frame. Updates the maximum size of\n * the reservoir, and checks to make sure main_data_begin was set properly by\n * the formatter<BR>\n * Background information:\n * \n * This is the original text from the ISO standard. Because of sooo many bugs\n * and irritations correcting comments are added in brackets []. A '^W' means\n * you should remove the last word.\n * \n * <PRE>\n *  1. The following rule can be used to calculate the maximum\n *     number of bits used for one granule [^W frame]:<BR>\n *     At the highest possible bitrate of Layer III (320 kbps\n *     per stereo signal [^W^W^W], 48 kHz) the frames must be of\n *     [^W^W^W are designed to have] constant length, i.e.\n *     one buffer [^W^W the frame] length is:<BR>\n * \n *         320 kbps * 1152/48 kHz = 7680 bit = 960 byte\n * \n *     This value is used as the maximum buffer per channel [^W^W] at\n *     lower bitrates [than 320 kbps]. At 64 kbps mono or 128 kbps\n *     stereo the main granule length is 64 kbps * 576/48 kHz = 768 bit\n *     [per granule and channel] at 48 kHz sampling frequency.\n *     This means that there is a maximum deviation (short time buffer\n *     [= reservoir]) of 7680 - 2*2*768 = 4608 bits is allowed at 64 kbps.\n *     The actual deviation is equal to the number of bytes [with the\n *     meaning of octets] denoted by the main_data_end offset pointer.\n *     The actual maximum deviation is (2^9-1)*8 bit = 4088 bits\n *     [for MPEG-1 and (2^8-1)*8 bit for MPEG-2, both are hard limits].\n *     ... The xchange of buffer bits between the left and right channel\n *     is allowed without restrictions [exception: dual channel].\n *     Because of the [constructed] constraint on the buffer size\n *     main_data_end is always set to 0 in the case of bit_rate_index==14,\n *     i.e. data rate 320 kbps per stereo signal [^W^W^W]. In this case\n *     all data are allocated between adjacent header [^W sync] words\n *     [, i.e. there is no buffering at all].\n * </PRE>\n */\n\n\nvar assert$23 = common.assert;\n\nfunction Reservoir$1() {\n\tvar bs;\n\n\tthis.setModules  = function(_bs) {\n\t\tbs = _bs;\n\t};\n\n\tthis.ResvFrameBegin = function(gfp, mean_bits) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar maxmp3buf;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar frameLength = bs.getframebits(gfp);\n\t\tmean_bits.bits = (frameLength - gfc.sideinfo_len * 8) / gfc.mode_gr;\n\n\t\t/**\n\t\t * <PRE>\n\t\t *  Meaning of the variables:\n\t\t *      resvLimit: (0, 8, ..., 8*255 (MPEG-2), 8*511 (MPEG-1))\n\t\t *          Number of bits can be stored in previous frame(s) due to\n\t\t *          counter size constaints\n\t\t *      maxmp3buf: ( ??? ... 8*1951 (MPEG-1 and 2), 8*2047 (MPEG-2.5))\n\t\t *          Number of bits allowed to encode one frame (you can take 8*511 bit\n\t\t *          from the bit reservoir and at most 8*1440 bit from the current\n\t\t *          frame (320 kbps, 32 kHz), so 8*1951 bit is the largest possible\n\t\t *          value for MPEG-1 and -2)\n\t\t * \n\t\t *          maximum allowed granule/channel size times 4 = 8*2047 bits.,\n\t\t *          so this is the absolute maximum supported by the format.\n\t\t * \n\t\t * \n\t\t *      fullFrameBits:  maximum number of bits available for encoding\n\t\t *                      the current frame.\n\t\t * \n\t\t *      mean_bits:      target number of bits per granule.\n\t\t * \n\t\t *      frameLength:\n\t\t * \n\t\t *      gfc.ResvMax:   maximum allowed reservoir\n\t\t * \n\t\t *      gfc.ResvSize:  current reservoir size\n\t\t * \n\t\t *      l3_side.resvDrain_pre:\n\t\t *         ancillary data to be added to previous frame:\n\t\t *         (only usefull in VBR modes if it is possible to have\n\t\t *         maxmp3buf < fullFrameBits)).  Currently disabled,\n\t\t *         see #define NEW_DRAIN\n\t\t *         2010-02-13: RH now enabled, it seems to be needed for CBR too,\n\t\t *                     as there exists one example, where the FhG decoder\n\t\t *                     can't decode a -b320 CBR file anymore.\n\t\t * \n\t\t *      l3_side.resvDrain_post:\n\t\t *         ancillary data to be added to this frame:\n\t\t * \n\t\t * </PRE>\n\t\t */\n\n\t\t/* main_data_begin has 9 bits in MPEG-1, 8 bits MPEG-2 */\n\t\tvar resvLimit = (8 * 256) * gfc.mode_gr - 8;\n\n\t\t/*\n\t\t * maximum allowed frame size. dont use more than this number of bits,\n\t\t * even if the frame has the space for them:\n\t\t */\n\t\tif (gfp.brate > 320) {\n\t\t\t/* in freeformat the buffer is constant */\n\t\t\tmaxmp3buf = 8 * ((int) ((gfp.brate * 1000)\n\t\t\t\t\t/ (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t} else {\n\t\t\t/*\n\t\t\t * all mp3 decoders should have enough buffer to handle this value:\n\t\t\t * size of a 320kbps 32kHz frame\n\t\t\t */\n\t\t\tmaxmp3buf = 8 * 1440;\n\n\t\t\t/*\n\t\t\t * Bouvigne suggests this more lax interpretation of the ISO doc\n\t\t\t * instead of using 8*960.\n\t\t\t */\n\n\t\t\tif (gfp.strict_ISO) {\n\t\t\t\tmaxmp3buf = 8 * ((int) (320000 / (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t\t}\n\t\t}\n\n\t\tgfc.ResvMax = maxmp3buf - frameLength;\n\t\tif (gfc.ResvMax > resvLimit)\n\t\t\tgfc.ResvMax = resvLimit;\n\t\tif (gfc.ResvMax < 0 || gfp.disable_reservoir)\n\t\t\tgfc.ResvMax = 0;\n\n\t\tvar fullFrameBits = mean_bits.bits * gfc.mode_gr\n\t\t\t\t+ Math.min(gfc.ResvSize, gfc.ResvMax);\n\n\t\tif (fullFrameBits > maxmp3buf)\n\t\t\tfullFrameBits = maxmp3buf;\n\n\t\tassert$23 (0 == gfc.ResvMax % 8);\n\t\tassert$23 (gfc.ResvMax >= 0);\n\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t// frame analyzer code\n\t\tif (gfc.pinfo != null) {\n\t\t\t/*\n\t\t\t * expected bits per channel per granule [is this also right for\n\t\t\t * mono/stereo, MPEG-1/2 ?]\n\t\t\t */\n\t\t\tgfc.pinfo.mean_bits = mean_bits.bits / 2;\n\t\t\tgfc.pinfo.resvsize = gfc.ResvSize;\n\t\t}\n\n\t\treturn fullFrameBits;\n\t};\n\n\t/**\n\t * returns targ_bits: target number of bits to use for 1 granule<BR>\n\t * extra_bits: amount extra available from reservoir<BR>\n\t * Mark Taylor 4/99\n\t */\n\tthis.ResvMaxBits = function(gfp, mean_bits, targ_bits, cbr) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar add_bits;\n        var ResvSize = gfc.ResvSize, ResvMax = gfc.ResvMax;\n\n\t\t/* compensate the saved bits used in the 1st granule */\n\t\tif (cbr != 0)\n\t\t\tResvSize += mean_bits;\n\n\t\tif ((gfc.substep_shaping & 1) != 0)\n\t\t\tResvMax *= 0.9;\n\n\t\ttarg_bits.bits = mean_bits;\n\n\t\t/* extra bits if the reservoir is almost full */\n\t\tif (ResvSize * 10 > ResvMax * 9) {\n\t\t\tadd_bits = ResvSize - (ResvMax * 9) / 10;\n\t\t\ttarg_bits.bits += add_bits;\n\t\t\tgfc.substep_shaping |= 0x80;\n\t\t} else {\n\t\t\tadd_bits = 0;\n\t\t\tgfc.substep_shaping &= 0x7f;\n\t\t\t/*\n\t\t\t * build up reservoir. this builds the reservoir a little slower\n\t\t\t * than FhG. It could simple be mean_bits/15, but this was rigged to\n\t\t\t * always produce 100 (the old value) at 128kbs\n\t\t\t */\n\t\t\tif (!gfp.disable_reservoir && 0 == (gfc.substep_shaping & 1))\n\t\t\t\ttarg_bits.bits -= .1 * mean_bits;\n\t\t}\n\n\t\t/* amount from the reservoir we are allowed to use. ISO says 6/10 */\n\t\tvar extra_bits = (ResvSize < (gfc.ResvMax * 6) / 10 ? ResvSize\n\t\t\t\t: (gfc.ResvMax * 6) / 10);\n\t\textra_bits -= add_bits;\n\n\t\tif (extra_bits < 0)\n\t\t\textra_bits = 0;\n\t\treturn extra_bits;\n\t};\n\n\t/**\n\t * Called after a granule's bit allocation. Readjusts the size of the\n\t * reservoir to reflect the granule's usage.\n\t */\n\tthis.ResvAdjust = function(gfc, gi) {\n\t\tgfc.ResvSize -= gi.part2_3_length + gi.part2_length;\n\t};\n\n\t/**\n\t * Called after all granules in a frame have been allocated. Makes sure that\n\t * the reservoir size is within limits, possibly by adding stuffing bits.\n\t */\n\tthis.ResvFrameEnd = function(gfc, mean_bits) {\n\t\tvar over_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tgfc.ResvSize += mean_bits * gfc.mode_gr;\n\t\tvar stuffingBits = 0;\n\t\tl3_side.resvDrain_post = 0;\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t/* we must be byte aligned */\n\t\tif ((over_bits = gfc.ResvSize % 8) != 0)\n\t\t\tstuffingBits += over_bits;\n\n\t\tover_bits = (gfc.ResvSize - stuffingBits) - gfc.ResvMax;\n\t\tif (over_bits > 0) {\n\t\t\tassert$23 (0 == over_bits % 8);\n\t\t\tassert$23 (over_bits >= 0);\n\t\t\tstuffingBits += over_bits;\n\t\t}\n\n\t\t/*\n\t\t * NOTE: enabling the NEW_DRAIN code fixes some problems with FhG\n\t\t * decoder shipped with MS Windows operating systems. Using this, it is\n\t\t * even possible to use Gabriel's lax buffer consideration again, which\n\t\t * assumes, any decoder should have a buffer large enough for a 320 kbps\n\t\t * frame at 32 kHz sample rate.\n\t\t * \n\t\t * old drain code: lame -b320 BlackBird.wav --. does not play with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * new drain code: lame -b320 BlackBird.wav --. plays fine with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * Robert Hegemann, 2010-02-13.\n\t\t */\n\t\t/*\n\t\t * drain as many bits as possible into previous frame ancillary data In\n\t\t * particular, in VBR mode ResvMax may have changed, and we have to make\n\t\t * sure main_data_begin does not create a reservoir bigger than ResvMax\n\t\t * mt 4/00\n\t\t */\n\t\t{\n\t\t\tvar mdb_bytes = Math.min(l3_side.main_data_begin * 8, stuffingBits) / 8;\n\t\t\tl3_side.resvDrain_pre += 8 * mdb_bytes;\n\t\t\tstuffingBits -= 8 * mdb_bytes;\n\t\t\tgfc.ResvSize -= 8 * mdb_bytes;\n\t\t\tl3_side.main_data_begin -= mdb_bytes;\n\t\t}\n\t\t/* drain the rest into this frames ancillary data */\n\t\tl3_side.resvDrain_post += stuffingBits;\n\t\tgfc.ResvSize -= stuffingBits;\n\t};\n}\n\nvar Reservoir_1 = Reservoir$1;\n\nfunction Version() {\n\n    /**\n     * URL for the LAME website.\n     */\n    var LAME_URL = \"http://www.mp3dev.org/\";\n\n    /**\n     * Major version number.\n     */\n    var LAME_MAJOR_VERSION = 3;\n    /**\n     * Minor version number.\n     */\n    var LAME_MINOR_VERSION = 98;\n    /**\n     * Patch level.\n     */\n    var LAME_PATCH_VERSION = 4;\n\n    /**\n     * Major version number.\n     */\n    var PSY_MAJOR_VERSION = 0;\n    /**\n     * Minor version number.\n     */\n    var PSY_MINOR_VERSION = 93;\n\n    /**\n     * A string which describes the version of LAME.\n     *\n     * @return string which describes the version of LAME\n     */\n    this.getLameVersion = function () {\n        // primary to write screen reports\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    };\n\n    /**\n     * The short version of the LAME version string.\n     *\n     * @return short version of the LAME version string\n     */\n    this.getLameShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        // validation\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    };\n\n    /**\n     * The shortest version of the LAME version string.\n     *\n     * @return shortest version of the LAME version string\n     */\n    this.getLameVeryShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        return (\"LAME\" + LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \"r\");\n    };\n\n    /**\n     * String which describes the version of GPSYCHO\n     *\n     * @return string which describes the version of GPSYCHO\n     */\n    this.getPsyVersion = function () {\n        return (PSY_MAJOR_VERSION + \".\" + PSY_MINOR_VERSION);\n    };\n\n    /**\n     * String which is a URL for the LAME website.\n     *\n     * @return string which is a URL for the LAME website\n     */\n    this.getLameUrl = function () {\n        return LAME_URL;\n    };\n\n    /**\n     * Quite useless for a java version, however we are compatible ;-)\n     *\n     * @return \"32bits\"\n     */\n    this.getLameOsBitness = function () {\n        return \"32bits\";\n    };\n\n}\n\nvar Version_1 = Version;\n\nvar System$22 = common.System;\nvar VbrMode$22 = common.VbrMode;\nvar ShortBlock$22 = common.ShortBlock;\nvar Arrays$22 = common.Arrays;\nvar new_byte$22 = common.new_byte;\nvar assert$24 = common.assert;\n\n/**\n * A Vbr header may be present in the ancillary data field of the first frame of\n * an mp3 bitstream<BR>\n * The Vbr header (optionally) contains\n * <UL>\n * <LI>frames total number of audio frames in the bitstream\n * <LI>bytes total number of bytes in the bitstream\n * <LI>toc table of contents\n * </UL>\n *\n * toc (table of contents) gives seek points for random access.<BR>\n * The ith entry determines the seek point for i-percent duration.<BR>\n * seek point in bytes = (toc[i]/256.0) * total_bitstream_bytes<BR>\n * e.g. half duration seek point = (toc[50]/256.0) * total_bitstream_bytes\n */\nVBRTag.NUMTOCENTRIES = 100;\nVBRTag.MAXFRAMESIZE = 2880;\n\nfunction VBRTag() {\n\n    var lame;\n    var bs;\n    var v;\n\n    this.setModules = function (_lame, _bs, _v) {\n        lame = _lame;\n        bs = _bs;\n        v = _v;\n    };\n\n    var FRAMES_FLAG = 0x0001;\n    var BYTES_FLAG = 0x0002;\n    var TOC_FLAG = 0x0004;\n    var VBR_SCALE_FLAG = 0x0008;\n\n    var NUMTOCENTRIES = VBRTag.NUMTOCENTRIES;\n\n    /**\n     * (0xB40) the max freeformat 640 32kHz framesize.\n     */\n    var MAXFRAMESIZE = VBRTag.MAXFRAMESIZE;\n\n    /**\n     * <PRE>\n     *    4 bytes for Header Tag\n     *    4 bytes for Header Flags\n     *  100 bytes for entry (toc)\n     *    4 bytes for frame size\n     *    4 bytes for stream size\n     *    4 bytes for VBR scale. a VBR quality indicator: 0=best 100=worst\n     *   20 bytes for LAME tag.  for example, \"LAME3.12 (beta 6)\"\n     * ___________\n     *  140 bytes\n     * </PRE>\n     */\n    var VBRHEADERSIZE = (NUMTOCENTRIES + 4 + 4 + 4 + 4 + 4);\n\n    var LAMEHEADERSIZE = (VBRHEADERSIZE + 9 + 1 + 1 + 8\n    + 1 + 1 + 3 + 1 + 1 + 2 + 4 + 2 + 2);\n\n    /**\n     * The size of the Xing header MPEG-1, bit rate in kbps.\n     */\n    var XING_BITRATE1 = 128;\n    /**\n     * The size of the Xing header MPEG-2, bit rate in kbps.\n     */\n    var XING_BITRATE2 = 64;\n    /**\n     * The size of the Xing header MPEG-2.5, bit rate in kbps.\n     */\n    var XING_BITRATE25 = 32;\n\n    /**\n     * ISO-8859-1 charset for byte to string operations.\n     */\n    var ISO_8859_1 = null; //Charset.forName(\"ISO-8859-1\");\n\n    /**\n     * VBR header magic string.\n     */\n    var VBRTag0 = \"Xing\";\n    /**\n     * VBR header magic string (VBR == VBRMode.vbr_off).\n     */\n    var VBRTag1 = \"Info\";\n\n    /**\n     * Lookup table for fast CRC-16 computation. Uses the polynomial\n     * x^16+x^15+x^2+1\n     */\n    var crc16Lookup = [0x0000, 0xC0C1, 0xC181, 0x0140,\n        0xC301, 0x03C0, 0x0280, 0xC241, 0xC601, 0x06C0, 0x0780, 0xC741,\n        0x0500, 0xC5C1, 0xC481, 0x0440, 0xCC01, 0x0CC0, 0x0D80, 0xCD41,\n        0x0F00, 0xCFC1, 0xCE81, 0x0E40, 0x0A00, 0xCAC1, 0xCB81, 0x0B40,\n        0xC901, 0x09C0, 0x0880, 0xC841, 0xD801, 0x18C0, 0x1980, 0xD941,\n        0x1B00, 0xDBC1, 0xDA81, 0x1A40, 0x1E00, 0xDEC1, 0xDF81, 0x1F40,\n        0xDD01, 0x1DC0, 0x1C80, 0xDC41, 0x1400, 0xD4C1, 0xD581, 0x1540,\n        0xD701, 0x17C0, 0x1680, 0xD641, 0xD201, 0x12C0, 0x1380, 0xD341,\n        0x1100, 0xD1C1, 0xD081, 0x1040, 0xF001, 0x30C0, 0x3180, 0xF141,\n        0x3300, 0xF3C1, 0xF281, 0x3240, 0x3600, 0xF6C1, 0xF781, 0x3740,\n        0xF501, 0x35C0, 0x3480, 0xF441, 0x3C00, 0xFCC1, 0xFD81, 0x3D40,\n        0xFF01, 0x3FC0, 0x3E80, 0xFE41, 0xFA01, 0x3AC0, 0x3B80, 0xFB41,\n        0x3900, 0xF9C1, 0xF881, 0x3840, 0x2800, 0xE8C1, 0xE981, 0x2940,\n        0xEB01, 0x2BC0, 0x2A80, 0xEA41, 0xEE01, 0x2EC0, 0x2F80, 0xEF41,\n        0x2D00, 0xEDC1, 0xEC81, 0x2C40, 0xE401, 0x24C0, 0x2580, 0xE541,\n        0x2700, 0xE7C1, 0xE681, 0x2640, 0x2200, 0xE2C1, 0xE381, 0x2340,\n        0xE101, 0x21C0, 0x2080, 0xE041, 0xA001, 0x60C0, 0x6180, 0xA141,\n        0x6300, 0xA3C1, 0xA281, 0x6240, 0x6600, 0xA6C1, 0xA781, 0x6740,\n        0xA501, 0x65C0, 0x6480, 0xA441, 0x6C00, 0xACC1, 0xAD81, 0x6D40,\n        0xAF01, 0x6FC0, 0x6E80, 0xAE41, 0xAA01, 0x6AC0, 0x6B80, 0xAB41,\n        0x6900, 0xA9C1, 0xA881, 0x6840, 0x7800, 0xB8C1, 0xB981, 0x7940,\n        0xBB01, 0x7BC0, 0x7A80, 0xBA41, 0xBE01, 0x7EC0, 0x7F80, 0xBF41,\n        0x7D00, 0xBDC1, 0xBC81, 0x7C40, 0xB401, 0x74C0, 0x7580, 0xB541,\n        0x7700, 0xB7C1, 0xB681, 0x7640, 0x7200, 0xB2C1, 0xB381, 0x7340,\n        0xB101, 0x71C0, 0x7080, 0xB041, 0x5000, 0x90C1, 0x9181, 0x5140,\n        0x9301, 0x53C0, 0x5280, 0x9241, 0x9601, 0x56C0, 0x5780, 0x9741,\n        0x5500, 0x95C1, 0x9481, 0x5440, 0x9C01, 0x5CC0, 0x5D80, 0x9D41,\n        0x5F00, 0x9FC1, 0x9E81, 0x5E40, 0x5A00, 0x9AC1, 0x9B81, 0x5B40,\n        0x9901, 0x59C0, 0x5880, 0x9841, 0x8801, 0x48C0, 0x4980, 0x8941,\n        0x4B00, 0x8BC1, 0x8A81, 0x4A40, 0x4E00, 0x8EC1, 0x8F81, 0x4F40,\n        0x8D01, 0x4DC0, 0x4C80, 0x8C41, 0x4400, 0x84C1, 0x8581, 0x4540,\n        0x8701, 0x47C0, 0x4680, 0x8641, 0x8201, 0x42C0, 0x4380, 0x8341,\n        0x4100, 0x81C1, 0x8081, 0x4040];\n\n    /***********************************************************************\n     * Robert Hegemann 2001-01-17\n     ***********************************************************************/\n\n    function addVbr(v, bitrate) {\n        v.nVbrNumFrames++;\n        v.sum += bitrate;\n        v.seen++;\n\n        if (v.seen < v.want) {\n            return;\n        }\n\n        if (v.pos < v.size) {\n            v.bag[v.pos] = v.sum;\n            v.pos++;\n            v.seen = 0;\n        }\n        if (v.pos == v.size) {\n            for (var i = 1; i < v.size; i += 2) {\n                v.bag[i / 2] = v.bag[i];\n            }\n            v.want *= 2;\n            v.pos /= 2;\n        }\n    }\n\n    function xingSeekTable(v, t) {\n        if (v.pos <= 0)\n            return;\n\n        for (var i = 1; i < NUMTOCENTRIES; ++i) {\n            var j = i / NUMTOCENTRIES, act, sum;\n            var indx = 0 | (Math.floor(j * v.pos));\n            if (indx > v.pos - 1)\n                indx = v.pos - 1;\n            act = v.bag[indx];\n            sum = v.sum;\n            var seek_point = 0 | (256. * act / sum);\n            if (seek_point > 255)\n                seek_point = 255;\n            t[i] = 0xff & seek_point;\n        }\n    }\n\n    /**\n     * Add VBR entry, used to fill the VBR TOC entries.\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.addVbrFrame = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var kbps = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\n        assert$24(gfc.VBR_seek_table.bag != null);\n        addVbr(gfc.VBR_seek_table, kbps);\n    };\n\n    /**\n     * Read big endian integer (4-bytes) from header.\n     *\n     * @param buf\n     *            header containing the integer\n     * @param bufPos\n     *            offset into the header\n     * @return extracted integer\n     */\n    function extractInteger(buf, bufPos) {\n        var x = buf[bufPos + 0] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 1] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 2] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 3] & 0xff;\n        return x;\n    }\n\n    /**\n     * Write big endian integer (4-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createInteger(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 24) & 0xff);\n        buf[bufPos + 1] = 0xff & ((value >> 16) & 0xff);\n        buf[bufPos + 2] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 3] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Write big endian short (2-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createShort(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 1] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Check for magic strings (Xing/Info).\n     *\n     * @param buf\n     *            header to check\n     * @param bufPos\n     *            header offset to check\n     * @return magic string found\n     */\n    function isVbrTag(buf, bufPos) {\n        return new String(buf, bufPos, VBRTag0.length(), ISO_8859_1)\n                .equals(VBRTag0)\n            || new String(buf, bufPos, VBRTag1.length(), ISO_8859_1)\n                .equals(VBRTag1);\n    }\n\n    function shiftInBitsValue(x, n, v) {\n        return 0xff & ((x << n) | (v & ~(-1 << n)));\n    }\n\n    /**\n     * Construct the MP3 header using the settings of the global flags.\n     *\n     * <img src=\"1000px-Mp3filestructure.svg.png\">\n     *\n     * @param gfp\n     *            global flags\n     * @param buffer\n     *            header\n     */\n    function setLameTagFrameHeader(gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        // MP3 Sync Word\n        buffer[0] = shiftInBitsValue(buffer[0], 8, 0xff);\n\n        buffer[1] = shiftInBitsValue(buffer[1], 3, 7);\n        buffer[1] = shiftInBitsValue(buffer[1], 1,\n            (gfp.out_samplerate < 16000) ? 0 : 1);\n        // Version\n        buffer[1] = shiftInBitsValue(buffer[1], 1, gfp.version);\n        // 01 == Layer 3\n        buffer[1] = shiftInBitsValue(buffer[1], 2, 4 - 3);\n        // Error protection\n        buffer[1] = shiftInBitsValue(buffer[1], 1, (!gfp.error_protection) ? 1\n            : 0);\n\n        // Bit rate\n        buffer[2] = shiftInBitsValue(buffer[2], 4, gfc.bitrate_index);\n        // Frequency\n        buffer[2] = shiftInBitsValue(buffer[2], 2, gfc.samplerate_index);\n        // Pad. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, 0);\n        // Priv. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, gfp.extension);\n\n        // Mode\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.mode.ordinal());\n        // Mode extension (Used with Joint Stereo)\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfc.mode_ext);\n        // Copy\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.copyright);\n        // Original\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.original);\n        // Emphasis\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.emphasis);\n\n        /* the default VBR header. 48 kbps layer III, no padding, no crc */\n        /* but sampling freq, mode and copyright/copy protection taken */\n        /* from first valid frame */\n        buffer[0] = 0xff;\n        var abyte = 0xff & (buffer[1] & 0xf1);\n        var bitrate;\n        if (1 == gfp.version) {\n            bitrate = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                bitrate = XING_BITRATE25;\n            else\n                bitrate = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode$22.vbr_off)\n            bitrate = gfp.brate;\n\n        var bbyte;\n        if (gfp.free_format)\n            bbyte = 0x00;\n        else\n            bbyte = 0xff & (16 * lame.BitrateIndex(bitrate, gfp.version,\n                    gfp.out_samplerate));\n\n        /*\n         * Use as much of the info from the real frames in the Xing header:\n         * samplerate, channels, crc, etc...\n         */\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            buffer[1] = 0xff & (abyte | 0x0a);\n            /* was 0x0b; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG1 frame */\n        } else {\n            /* MPEG2 */\n            buffer[1] = 0xff & (abyte | 0x02);\n            /* was 0x03; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG2 frame */\n        }\n    }\n\n    /**\n     * Get VBR tag information\n     *\n     * @param buf\n     *            header to analyze\n     * @param bufPos\n     *            offset into the header\n     * @return VBR tag data\n     */\n    this.getVbrTag = function (buf) {\n        var pTagData = new VBRTagData();\n        var bufPos = 0;\n\n        /* get Vbr header data */\n        pTagData.flags = 0;\n\n        /* get selected MPEG header data */\n        var hId = (buf[bufPos + 1] >> 3) & 1;\n        var hSrIndex = (buf[bufPos + 2] >> 2) & 3;\n        var hMode = (buf[bufPos + 3] >> 6) & 3;\n        var hBitrate = ((buf[bufPos + 2] >> 4) & 0xf);\n        hBitrate = Tables.bitrate_table[hId][hBitrate];\n\n        /* check for FFE syncword */\n        if ((buf[bufPos + 1] >> 4) == 0xE)\n            pTagData.samprate = Tables.samplerate_table[2][hSrIndex];\n        else\n            pTagData.samprate = Tables.samplerate_table[hId][hSrIndex];\n\n        /* determine offset of header */\n        if (hId != 0) {\n            /* mpeg1 */\n            if (hMode != 3)\n                bufPos += (32 + 4);\n            else\n                bufPos += (17 + 4);\n        } else {\n            /* mpeg2 */\n            if (hMode != 3)\n                bufPos += (17 + 4);\n            else\n                bufPos += (9 + 4);\n        }\n\n        if (!isVbrTag(buf, bufPos))\n            return null;\n\n        bufPos += 4;\n\n        pTagData.hId = hId;\n\n        /* get flags */\n        var head_flags = pTagData.flags = extractInteger(buf, bufPos);\n        bufPos += 4;\n\n        if ((head_flags & FRAMES_FLAG) != 0) {\n            pTagData.frames = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & BYTES_FLAG) != 0) {\n            pTagData.bytes = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & TOC_FLAG) != 0) {\n            if (pTagData.toc != null) {\n                for (var i = 0; i < NUMTOCENTRIES; i++)\n                    pTagData.toc[i] = buf[bufPos + i];\n            }\n            bufPos += NUMTOCENTRIES;\n        }\n\n        pTagData.vbrScale = -1;\n\n        if ((head_flags & VBR_SCALE_FLAG) != 0) {\n            pTagData.vbrScale = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        pTagData.headersize = ((hId + 1) * 72000 * hBitrate)\n            / pTagData.samprate;\n\n        bufPos += 21;\n        var encDelay = buf[bufPos + 0] << 4;\n        encDelay += buf[bufPos + 1] >> 4;\n        var encPadding = (buf[bufPos + 1] & 0x0F) << 8;\n        encPadding += buf[bufPos + 2] & 0xff;\n        /* check for reasonable values (this may be an old Xing header, */\n        /* not a INFO tag) */\n        if (encDelay < 0 || encDelay > 3000)\n            encDelay = -1;\n        if (encPadding < 0 || encPadding > 3000)\n            encPadding = -1;\n\n        pTagData.encDelay = encDelay;\n        pTagData.encPadding = encPadding;\n\n        /* success */\n        return pTagData;\n    };\n\n    /**\n     * Initializes the header\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.InitVbrTag = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        /**\n         * <PRE>\n         * Xing VBR pretends to be a 48kbs layer III frame.  (at 44.1kHz).\n         * (at 48kHz they use 56kbs since 48kbs frame not big enough for\n         * table of contents)\n         * let's always embed Xing header inside a 64kbs layer III frame.\n         * this gives us enough room for a LAME version string too.\n         * size determined by sampling frequency (MPEG1)\n         * 32kHz:    216 bytes@48kbs    288bytes@ 64kbs\n         * 44.1kHz:  156 bytes          208bytes@64kbs     (+1 if padding = 1)\n         * 48kHz:    144 bytes          192\n         *\n         * MPEG 2 values are the same since the framesize and samplerate\n         * are each reduced by a factor of 2.\n         * </PRE>\n         */\n        var kbps_header;\n        if (1 == gfp.version) {\n            kbps_header = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                kbps_header = XING_BITRATE25;\n            else\n                kbps_header = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode$22.vbr_off)\n            kbps_header = gfp.brate;\n\n        // make sure LAME Header fits into Frame\n        var totalFrameSize = ((gfp.version + 1) * 72000 * kbps_header)\n            / gfp.out_samplerate;\n        var headerSize = (gfc.sideinfo_len + LAMEHEADERSIZE);\n        gfc.VBR_seek_table.TotalFrameSize = totalFrameSize;\n        if (totalFrameSize < headerSize || totalFrameSize > MAXFRAMESIZE) {\n            /* disable tag, it wont fit */\n            gfp.bWriteVbrTag = false;\n            return;\n        }\n\n        gfc.VBR_seek_table.nVbrNumFrames = 0;\n        gfc.VBR_seek_table.nBytesWritten = 0;\n        gfc.VBR_seek_table.sum = 0;\n\n        gfc.VBR_seek_table.seen = 0;\n        gfc.VBR_seek_table.want = 1;\n        gfc.VBR_seek_table.pos = 0;\n\n        if (gfc.VBR_seek_table.bag == null) {\n            gfc.VBR_seek_table.bag = new int[400];\n            gfc.VBR_seek_table.size = 400;\n        }\n\n        // write dummy VBR tag of all 0's into bitstream\n        var buffer = new_byte$22(MAXFRAMESIZE);\n\n        setLameTagFrameHeader(gfp, buffer);\n        var n = gfc.VBR_seek_table.TotalFrameSize;\n        for (var i = 0; i < n; ++i) {\n            bs.add_dummy_byte(gfp, buffer[i] & 0xff, 1);\n        }\n    };\n\n    /**\n     * Fast CRC-16 computation (uses table crc16Lookup).\n     *\n     * @param value\n     * @param crc\n     * @return\n     */\n    function crcUpdateLookup(value, crc) {\n        var tmp = crc ^ value;\n        crc = (crc >> 8) ^ crc16Lookup[tmp & 0xff];\n        return crc;\n    }\n\n    this.updateMusicCRC = function (crc, buffer, bufferPos, size) {\n        for (var i = 0; i < size; ++i)\n            crc[0] = crcUpdateLookup(buffer[bufferPos + i], crc[0]);\n    };\n\n    /**\n     * Write LAME info: mini version + info on various switches used (Jonathan\n     * Dee 2001/08/31).\n     *\n     * @param gfp\n     *            global flags\n     * @param musicLength\n     *            music length\n     * @param streamBuffer\n     *            pointer to output buffer\n     * @param streamBufferPos\n     *            offset into the output buffer\n     * @param crc\n     *            computation of CRC-16 of Lame Tag so far (starting at frame\n     *            sync)\n     * @return number of bytes written to the stream\n     */\n    function putLameVBR(gfp, musicLength, streamBuffer, streamBufferPos, crc) {\n        var gfc = gfp.internal_flags;\n        var bytesWritten = 0;\n\n        /* encoder delay */\n        var encDelay = gfp.encoder_delay;\n        /* encoder padding */\n        var encPadding = gfp.encoder_padding;\n\n        /* recall: gfp.VBR_q is for example set by the switch -V */\n        /* gfp.quality by -q, -h, -f, etc */\n        var quality = (100 - 10 * gfp.VBR_q - gfp.quality);\n\n        var version = v.getLameVeryShortVersion();\n        var vbr;\n        var revision = 0x00;\n        var revMethod;\n        // numbering different in vbr_mode vs. Lame tag\n        var vbrTypeTranslator = [1, 5, 3, 2, 4, 0, 3];\n        var lowpass = 0 | (((gfp.lowpassfreq / 100.0) + .5) > 255 ? 255\n                : (gfp.lowpassfreq / 100.0) + .5);\n        var peakSignalAmplitude = 0;\n        var radioReplayGain = 0;\n        var audiophileReplayGain = 0;\n        var noiseShaping = gfp.internal_flags.noise_shaping;\n        var stereoMode = 0;\n        var nonOptimal = 0;\n        var sourceFreq = 0;\n        var misc = 0;\n        var musicCRC = 0;\n\n        // psy model type: Gpsycho or NsPsytune\n        var expNPsyTune = (gfp.exp_nspsytune & 1) != 0;\n        var safeJoint = (gfp.exp_nspsytune & 2) != 0;\n        var noGapMore = false;\n        var noGapPrevious = false;\n        var noGapCount = gfp.internal_flags.nogap_total;\n        var noGapCurr = gfp.internal_flags.nogap_current;\n\n        // 4 bits\n        var athType = gfp.ATHtype;\n        var flags = 0;\n\n        // vbr modes\n        var abrBitrate;\n        switch (gfp.VBR) {\n            case vbr_abr:\n                abrBitrate = gfp.VBR_mean_bitrate_kbps;\n                break;\n            case vbr_off:\n                abrBitrate = gfp.brate;\n                break;\n            default:\n                abrBitrate = gfp.VBR_min_bitrate_kbps;\n        }\n\n        // revision and vbr method\n        if (gfp.VBR.ordinal() < vbrTypeTranslator.length)\n            vbr = vbrTypeTranslator[gfp.VBR.ordinal()];\n        else\n            vbr = 0x00; // unknown\n\n        revMethod = 0x10 * revision + vbr;\n\n        // ReplayGain\n        if (gfc.findReplayGain) {\n            if (gfc.RadioGain > 0x1FE)\n                gfc.RadioGain = 0x1FE;\n            if (gfc.RadioGain < -0x1FE)\n                gfc.RadioGain = -0x1FE;\n\n            // set name code\n            radioReplayGain = 0x2000;\n            // set originator code to `determined automatically'\n            radioReplayGain |= 0xC00;\n\n            if (gfc.RadioGain >= 0) {\n                // set gain adjustment\n                radioReplayGain |= gfc.RadioGain;\n            } else {\n                // set the sign bit\n                radioReplayGain |= 0x200;\n                // set gain adjustment\n                radioReplayGain |= -gfc.RadioGain;\n            }\n        }\n\n        // peak sample\n        if (gfc.findPeakSample)\n            peakSignalAmplitude = Math\n                .abs(0 | ((( gfc.PeakSample) / 32767.0) * Math.pow(2, 23) + .5));\n\n        // nogap\n        if (noGapCount != -1) {\n            if (noGapCurr > 0)\n                noGapPrevious = true;\n\n            if (noGapCurr < noGapCount - 1)\n                noGapMore = true;\n        }\n\n        // flags\n        flags = athType + ((expNPsyTune ? 1 : 0) << 4)\n            + ((safeJoint ? 1 : 0) << 5) + ((noGapMore ? 1 : 0) << 6)\n            + ((noGapPrevious ? 1 : 0) << 7);\n\n        if (quality < 0)\n            quality = 0;\n\n        // stereo mode field (Intensity stereo is not implemented)\n        switch (gfp.mode) {\n            case MONO:\n                stereoMode = 0;\n                break;\n            case STEREO:\n                stereoMode = 1;\n                break;\n            case DUAL_CHANNEL:\n                stereoMode = 2;\n                break;\n            case JOINT_STEREO:\n                if (gfp.force_ms)\n                    stereoMode = 4;\n                else\n                    stereoMode = 3;\n                break;\n            case NOT_SET:\n            //$FALL-THROUGH$\n            default:\n                stereoMode = 7;\n                break;\n        }\n\n        if (gfp.in_samplerate <= 32000)\n            sourceFreq = 0x00;\n        else if (gfp.in_samplerate == 48000)\n            sourceFreq = 0x02;\n        else if (gfp.in_samplerate > 48000)\n            sourceFreq = 0x03;\n        else {\n            // default is 44100Hz\n            sourceFreq = 0x01;\n        }\n\n        // Check if the user overrided the default LAME behavior with some\n        // nasty options\n        if (gfp.short_blocks == ShortBlock$22.short_block_forced\n            || gfp.short_blocks == ShortBlock$22.short_block_dispensed\n            || ((gfp.lowpassfreq == -1) && (gfp.highpassfreq == -1)) || /* \"-k\" */\n            (gfp.scale_left < gfp.scale_right)\n            || (gfp.scale_left > gfp.scale_right)\n            || (gfp.disable_reservoir && gfp.brate < 320) || gfp.noATH\n            || gfp.ATHonly || (athType == 0) || gfp.in_samplerate <= 32000)\n            nonOptimal = 1;\n\n        misc = noiseShaping + (stereoMode << 2) + (nonOptimal << 5)\n            + (sourceFreq << 6);\n\n        musicCRC = gfc.nMusicCRC;\n\n        // Write all this information into the stream\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, quality);\n        bytesWritten += 4;\n\n        for (var j = 0; j < 9; j++) {\n            streamBuffer[streamBufferPos + bytesWritten + j] = 0xff & version .charAt(j);\n        }\n        bytesWritten += 9;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & revMethod;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & lowpass;\n        bytesWritten++;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten,\n            peakSignalAmplitude);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            radioReplayGain);\n        bytesWritten += 2;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            audiophileReplayGain);\n        bytesWritten += 2;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & flags;\n        bytesWritten++;\n\n        if (abrBitrate >= 255)\n            streamBuffer[streamBufferPos + bytesWritten] = 0xFF;\n        else\n            streamBuffer[streamBufferPos + bytesWritten] = 0xff & abrBitrate;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & (encDelay >> 4);\n        streamBuffer[streamBufferPos + bytesWritten + 1] = 0xff & ((encDelay << 4) + (encPadding >> 8));\n        streamBuffer[streamBufferPos + bytesWritten + 2] = 0xff & encPadding;\n\n        bytesWritten += 3;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & misc;\n        bytesWritten++;\n\n        // unused in rev0\n        streamBuffer[streamBufferPos + bytesWritten++] = 0;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, gfp.preset);\n        bytesWritten += 2;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, musicLength);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, musicCRC);\n        bytesWritten += 2;\n\n        // Calculate tag CRC.... must be done here, since it includes previous\n        // information\n\n        for (var i = 0; i < bytesWritten; i++)\n            crc = crcUpdateLookup(streamBuffer[streamBufferPos + i], crc);\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, crc);\n        bytesWritten += 2;\n\n        return bytesWritten;\n    }\n\n    function skipId3v2(fpStream) {\n        // seek to the beginning of the stream\n        fpStream.seek(0);\n        // read 10 bytes in case there's an ID3 version 2 header here\n        var id3v2Header = new_byte$22(10);\n        fpStream.readFully(id3v2Header);\n        /* does the stream begin with the ID3 version 2 file identifier? */\n        var id3v2TagSize;\n        if (!new String(id3v2Header, \"ISO-8859-1\").startsWith(\"ID3\")) {\n            /*\n             * the tag size (minus the 10-byte header) is encoded into four\n             * bytes where the most significant bit is clear in each byte\n             */\n            id3v2TagSize = (((id3v2Header[6] & 0x7f) << 21)\n                | ((id3v2Header[7] & 0x7f) << 14)\n                | ((id3v2Header[8] & 0x7f) << 7) | (id3v2Header[9] & 0x7f))\n                + id3v2Header.length;\n        } else {\n            /* no ID3 version 2 tag in this stream */\n            id3v2TagSize = 0;\n        }\n        return id3v2TagSize;\n    }\n\n    this.getLameTagFrame = function (gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        if (!gfp.bWriteVbrTag) {\n            return 0;\n        }\n        if (gfc.Class_ID != Lame.LAME_ID) {\n            return 0;\n        }\n        if (gfc.VBR_seek_table.pos <= 0) {\n            return 0;\n        }\n        if (buffer.length < gfc.VBR_seek_table.TotalFrameSize) {\n            return gfc.VBR_seek_table.TotalFrameSize;\n        }\n\n        Arrays$22.fill(buffer, 0, gfc.VBR_seek_table.TotalFrameSize, 0);\n\n        // 4 bytes frame header\n        setLameTagFrameHeader(gfp, buffer);\n\n        // Create TOC entries\n        var toc = new_byte$22(NUMTOCENTRIES);\n\n        if (gfp.free_format) {\n            for (var i = 1; i < NUMTOCENTRIES; ++i)\n                toc[i] = 0xff & (255 * i / 100);\n        } else {\n            xingSeekTable(gfc.VBR_seek_table, toc);\n        }\n\n        // Start writing the tag after the zero frame\n        var streamIndex = gfc.sideinfo_len;\n        /**\n         * Note: Xing header specifies that Xing data goes in the ancillary data\n         * with NO ERROR PROTECTION. If error protecton in enabled, the Xing\n         * data still starts at the same offset, and now it is in sideinfo data\n         * block, and thus will not decode correctly by non-Xing tag aware\n         * players\n         */\n        if (gfp.error_protection)\n            streamIndex -= 2;\n\n        // Put Vbr tag\n        if (gfp.VBR == VbrMode$22.vbr_off) {\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(3);\n\n        } else {\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(3);\n        }\n\n        // Put header flags\n        createInteger(buffer, streamIndex, FRAMES_FLAG + BYTES_FLAG + TOC_FLAG\n            + VBR_SCALE_FLAG);\n        streamIndex += 4;\n\n        // Put Total Number of frames\n        createInteger(buffer, streamIndex, gfc.VBR_seek_table.nVbrNumFrames);\n        streamIndex += 4;\n\n        // Put total audio stream size, including Xing/LAME Header\n        var streamSize = (gfc.VBR_seek_table.nBytesWritten + gfc.VBR_seek_table.TotalFrameSize);\n        createInteger(buffer, streamIndex, 0 | streamSize);\n        streamIndex += 4;\n\n        /* Put TOC */\n        System$22.arraycopy(toc, 0, buffer, streamIndex, toc.length);\n        streamIndex += toc.length;\n\n        if (gfp.error_protection) {\n            // (jo) error_protection: add crc16 information to header\n            bs.CRC_writeheader(gfc, buffer);\n        }\n\n        // work out CRC so far: initially crc = 0\n        var crc = 0x00;\n        for (var i = 0; i < streamIndex; i++)\n            crc = crcUpdateLookup(buffer[i], crc);\n        // Put LAME VBR info\n        streamIndex += putLameVBR(gfp, streamSize, buffer, streamIndex, crc);\n\n        return gfc.VBR_seek_table.TotalFrameSize;\n    };\n\n    /**\n     * Write final VBR tag to the file.\n     *\n     * @param gfp\n     *            global flags\n     * @param stream\n     *            stream to add the VBR tag to\n     * @return 0 (OK), -1 else\n     * @throws IOException\n     *             I/O error\n     */\n    this.putVbrTag = function (gfp, stream) {\n        var gfc = gfp.internal_flags;\n\n        if (gfc.VBR_seek_table.pos <= 0)\n            return -1;\n\n        // Seek to end of file\n        stream.seek(stream.length());\n\n        // Get file size, abort if file has zero length.\n        if (stream.length() == 0)\n            return -1;\n\n        // The VBR tag may NOT be located at the beginning of the stream. If an\n        // ID3 version 2 tag was added, then it must be skipped to write the VBR\n        // tag data.\n        var id3v2TagSize = skipId3v2(stream);\n\n        // Seek to the beginning of the stream\n        stream.seek(id3v2TagSize);\n\n        var buffer = new_byte$22(MAXFRAMESIZE);\n        var bytes = getLameTagFrame(gfp, buffer);\n        if (bytes > buffer.length) {\n            return -1;\n        }\n\n        if (bytes < 1) {\n            return 0;\n        }\n\n        // Put it all to disk again\n        stream.write(buffer, 0, bytes);\n        // success\n        return 0;\n    };\n\n}\n\nvar VBRTag_1 = VBRTag;\n\nvar new_byte = common.new_byte;\nvar assert = common.assert;\n\nLame = Lame_1;\nPresets = Presets_1;\nGainAnalysis = GainAnalysis_1;\nQuantizePVT = QuantizePVT_1;\nQuantize = Quantize_1;\nTakehiro = Takehiro_1;\nReservoir = Reservoir_1;\nMPEGMode = MPEGMode_1;\nBitStream = BitStream_1;\n\n\n\n\nfunction GetAudio() {\n    var parse;\n    var mpg;\n\n    this.setModules = function (parse2, mpg2) {\n        parse = parse2;\n        mpg = mpg2;\n    };\n}\n\n\nfunction Parse() {\n    var ver;\n    var id3;\n    var pre;\n\n    this.setModules = function (ver2, id32, pre2) {\n        ver = ver2;\n        id3 = id32;\n        pre = pre2;\n    };\n}\n\nfunction MPGLib() {\n}\n\nfunction ID3Tag() {\n    var bits;\n    var ver;\n\n    this.setModules = function (_bits, _ver) {\n        bits = _bits;\n        ver = _ver;\n    };\n}\n\nfunction Mp3Encoder(channels, samplerate, kbps) {\n    if (arguments.length != 3) {\n        console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\n        channels = 1;\n        samplerate = 44100;\n        kbps = 128;\n    }\n    var lame = new Lame();\n    var gaud = new GetAudio();\n    var ga = new GainAnalysis();\n    var bs = new BitStream();\n    var p = new Presets();\n    var qupvt = new QuantizePVT();\n    var qu = new Quantize();\n    var vbr = new VBRTag_1();\n    var ver = new Version_1();\n    var id3 = new ID3Tag();\n    var rv = new Reservoir();\n    var tak = new Takehiro();\n    var parse = new Parse();\n    var mpg = new MPGLib();\n\n    lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\n    bs.setModules(ga, mpg, ver, vbr);\n    id3.setModules(bs, ver);\n    p.setModules(lame);\n    qu.setModules(bs, rv, qupvt, tak);\n    qupvt.setModules(tak, rv, lame.enc.psy);\n    rv.setModules(bs);\n    tak.setModules(qupvt);\n    vbr.setModules(lame, bs, ver);\n    gaud.setModules(parse, mpg);\n    parse.setModules(ver, id3, p);\n\n    var gfp = lame.lame_init();\n\n    gfp.num_channels = channels;\n    gfp.in_samplerate = samplerate;\n    gfp.brate = kbps;\n    gfp.mode = MPEGMode.STEREO;\n    gfp.quality = 3;\n    gfp.bWriteVbrTag = false;\n    gfp.disable_reservoir = true;\n    gfp.write_id3tag_automatic = false;\n\n    var retcode = lame.lame_init_params(gfp);\n    assert(0 == retcode);\n    var maxSamples = 1152;\n    var mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n    var mp3buf = new_byte(mp3buf_size);\n\n    this.encodeBuffer = function (left, right) {\n        if (channels == 1) {\n            right = left;\n        }\n        assert(left.length == right.length);\n        if (left.length > maxSamples) {\n            maxSamples = left.length;\n            mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n            mp3buf = new_byte(mp3buf_size);\n        }\n\n        var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n\n    this.flush = function () {\n        var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n}\n\nfunction WavHeader() {\n    this.dataOffset = 0;\n    this.dataLen = 0;\n    this.channels = 0;\n    this.sampleRate = 0;\n}\n\nfunction fourccToInt(fourcc) {\n    return fourcc.charCodeAt(0) << 24 | fourcc.charCodeAt(1) << 16 | fourcc.charCodeAt(2) << 8 | fourcc.charCodeAt(3);\n}\n\nWavHeader.RIFF = fourccToInt(\"RIFF\");\nWavHeader.WAVE = fourccToInt(\"WAVE\");\nWavHeader.fmt_ = fourccToInt(\"fmt \");\nWavHeader.data = fourccToInt(\"data\");\n\nWavHeader.readHeader = function (dataView) {\n    var w = new WavHeader();\n\n    var header = dataView.getUint32(0, false);\n    if (WavHeader.RIFF != header) {\n        return;\n    }\n    var fileLen = dataView.getUint32(4, true);\n    if (WavHeader.WAVE != dataView.getUint32(8, false)) {\n        return;\n    }\n    if (WavHeader.fmt_ != dataView.getUint32(12, false)) {\n        return;\n    }\n    var fmtLen = dataView.getUint32(16, true);\n    var pos = 16 + 4;\n    switch (fmtLen) {\n        case 16:\n        case 18:\n            w.channels = dataView.getUint16(pos + 2, true);\n            w.sampleRate = dataView.getUint32(pos + 4, true);\n            break;\n        default:\n            throw 'extended fmt chunk not implemented';\n    }\n    pos += fmtLen;\n    var data = WavHeader.data;\n    var len = 0;\n    while (data != header) {\n        header = dataView.getUint32(pos, false);\n        len = dataView.getUint32(pos + 4, true);\n        if (data == header) {\n            break;\n        }\n        pos += (len + 8);\n    }\n    w.dataLen = len;\n    w.dataOffset = pos + 8;\n    return w;\n};\n\nvar Mp3Encoder_1 = Mp3Encoder;\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar Encoder = function () {\n  function Encoder(config) {\n    classCallCheck(this, Encoder);\n\n    this.config = {\n      sampleRate: 44100,\n      bitRate: 128\n    };\n\n    Object.assign(this.config, config);\n\n    this.mp3Encoder = new Mp3Encoder_1(1, this.config.sampleRate, this.config.bitRate);\n\n    // Audio is processed by frames of 1152 samples per audio channel\n    // http://lame.sourceforge.net/tech-FAQ.txt\n    this.maxSamples = 1152;\n\n    this.samplesMono = null;\n    this.clearBuffer();\n  }\n\n  /**\n   * Clear active buffer\n   */\n\n\n  createClass(Encoder, [{\n    key: 'clearBuffer',\n    value: function clearBuffer() {\n      this.dataBuffer = [];\n    }\n\n    /**\n     * Append new audio buffer to current active buffer\n     * @param {Buffer} buffer\n     */\n\n  }, {\n    key: 'appendToBuffer',\n    value: function appendToBuffer(buffer) {\n      this.dataBuffer.push(new Int8Array(buffer));\n    }\n\n    /**\n     * Float current data to 16 bits PCM\n     * @param {Float32Array} input\n     * @param {Int16Array} output\n     */\n\n  }, {\n    key: 'floatTo16BitPCM',\n    value: function floatTo16BitPCM(input, output) {\n      for (var i = 0; i < input.length; i++) {\n        var s = Math.max(-1, Math.min(1, input[i]));\n        output[i] = s < 0 ? s * 0x8000 : s * 0x7FFF;\n      }\n    }\n\n    /**\n     * Convert buffer to proper format\n     * @param {Array} arrayBuffer\n     */\n\n  }, {\n    key: 'convertBuffer',\n    value: function convertBuffer(arrayBuffer) {\n      var data = new Float32Array(arrayBuffer);\n      var out = new Int16Array(arrayBuffer.length);\n      this.floatTo16BitPCM(data, out);\n\n      return out;\n    }\n\n    /**\n     * Encode and append current buffer to dataBuffer\n     * @param {Array} arrayBuffer\n     */\n\n  }, {\n    key: 'encode',\n    value: function encode(arrayBuffer) {\n      this.samplesMono = this.convertBuffer(arrayBuffer);\n      var remaining = this.samplesMono.length;\n\n      for (var i = 0; remaining >= 0; i += this.maxSamples) {\n        var left = this.samplesMono.subarray(i, i + this.maxSamples);\n        var mp3buffer = this.mp3Encoder.encodeBuffer(left);\n        this.appendToBuffer(mp3buffer);\n        remaining -= this.maxSamples;\n      }\n    }\n\n    /**\n     * Return full dataBuffer\n     */\n\n  }, {\n    key: 'finish',\n    value: function finish() {\n      this.appendToBuffer(this.mp3Encoder.flush());\n\n      return this.dataBuffer;\n    }\n  }]);\n  return Encoder;\n}();\n\nvar MicRecorder = function () {\n  function MicRecorder(config) {\n    classCallCheck(this, MicRecorder);\n\n    this.config = {\n      // 128 or 160 kbit/s – mid-range bitrate quality\n      bitRate: 128,\n\n      // There is a known issue with some macOS machines, where the recording\n      // will sometimes have a loud 'pop' or 'pop-click' sound. This flag\n      // prevents getting audio from the microphone a few milliseconds after\n      // the begining of the recording. It also helps to remove the mouse\n      // \"click\" sound from the output mp3 file.\n      startRecordingAt: 300,\n      deviceId: null\n    };\n\n    this.activeStream = null;\n    this.context = null;\n    this.microphone = null;\n    this.processor = null;\n    this.startTime = 0;\n\n    Object.assign(this.config, config);\n  }\n\n  /**\n   * Starts to listen for the microphone sound\n   * @param {MediaStream} stream\n   */\n\n\n  createClass(MicRecorder, [{\n    key: 'addMicrophoneListener',\n    value: function addMicrophoneListener(stream) {\n      var _this = this;\n\n      this.activeStream = stream;\n\n      // This prevents the weird noise once you start listening to the microphone\n      this.timerToStart = setTimeout(function () {\n        delete _this.timerToStart;\n      }, this.config.startRecordingAt);\n\n      // Set up Web Audio API to process data from the media stream (microphone).\n      this.microphone = this.context.createMediaStreamSource(stream);\n\n      // Settings a bufferSize of 0 instructs the browser to choose the best bufferSize\n      this.processor = this.context.createScriptProcessor(0, 1, 1);\n\n      // Add all buffers from LAME into an array.\n      this.processor.onaudioprocess = function (event) {\n        if (_this.timerToStart) {\n          return;\n        }\n\n        // Send microphone data to LAME for MP3 encoding while recording.\n        _this.lameEncoder.encode(event.inputBuffer.getChannelData(0));\n      };\n\n      // Begin retrieving microphone data.\n      this.microphone.connect(this.processor);\n      this.processor.connect(this.context.destination);\n    }\n  }, {\n    key: 'stop',\n\n\n    /**\n     * Disconnect microphone, processor and remove activeStream\n     */\n    value: function stop() {\n      if (this.processor && this.microphone) {\n        // Clean up the Web Audio API resources.\n        this.microphone.disconnect();\n        this.processor.disconnect();\n\n        // If all references using this.context are destroyed, context is closed\n        // automatically. DOMException is fired when trying to close again\n        if (this.context && this.context.state !== 'closed') {\n          this.context.close();\n        }\n\n        this.processor.onaudioprocess = null;\n\n        // Stop all audio tracks. Also, removes recording icon from chrome tab\n        this.activeStream.getAudioTracks().forEach(function (track) {\n          return track.stop();\n        });\n      }\n\n      return this;\n    }\n  }, {\n    key: 'start',\n\n\n    /**\n     * Requests access to the microphone and start recording\n     * @return Promise\n     */\n    value: function start() {\n      var _this2 = this;\n\n      var AudioContext = window.AudioContext || window.webkitAudioContext;\n      this.context = new AudioContext();\n      this.config.sampleRate = this.context.sampleRate;\n      this.lameEncoder = new Encoder(this.config);\n\n      var audio = this.config.deviceId ? { deviceId: { exact: this.config.deviceId } } : true;\n\n      return new Promise(function (resolve, reject) {\n        navigator.mediaDevices.getUserMedia({ audio: audio }).then(function (stream) {\n          _this2.addMicrophoneListener(stream);\n          resolve(stream);\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: 'getMp3',\n\n\n    /**\n     * Return Mp3 Buffer and Blob with type mp3\n     * @return {Promise}\n     */\n    value: function getMp3() {\n      var _this3 = this;\n\n      var finalBuffer = this.lameEncoder.finish();\n\n      return new Promise(function (resolve, reject) {\n        if (finalBuffer.length === 0) {\n          reject(new Error('No buffer to send'));\n        } else {\n          resolve([finalBuffer, new Blob(finalBuffer, { type: 'audio/mp3' })]);\n          _this3.lameEncoder.clearBuffer();\n        }\n      });\n    }\n  }]);\n  return MicRecorder;\n}();\n\nreturn MicRecorder;\n\n})));\n//# sourceMappingURL=index.js.map\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n"],"sourceRoot":""}